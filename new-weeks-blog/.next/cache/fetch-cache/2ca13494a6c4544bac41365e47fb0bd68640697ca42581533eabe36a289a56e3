{"kind":"FETCH","data":{"headers":{"accept-ranges":"bytes","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","apicdn-cache-control":"public, max-age=60, s-maxage=3600, stale-while-revalidate=60, stale-if-error=3600","cache-control":"public, max-age=60, s-maxage=60, stale-while-revalidate=15, stale-if-error=3600","content-encoding":"br","content-length":"106021","content-type":"application/json; charset=utf-8","date":"Wed, 29 May 2024 20:14:49 GMT","sanity-query-hash":"eW8IhnAKshs uxvbys1qyTQ","server-timing":"api;dur=112","strict-transport-security":"max-age=63072000; includeSubDomains; preload","vary":"accept-encoding, origin","via":"1.1 google","x-sanity-age":"422","x-sanity-shard":"gcp-eu-w1-01-prod-1042"},"body":"{"query":"*[_type == 'post'] | order(_createdAt desc)","result":[{"slug":{"_type":"slug","current":"the-fall-guy-a-fun-filled-throwback"},"_type":"post","_id":"517cc145-e4f2-4744-88f1-3fbf0f0a7a44","title":"The Fall Guy: A Fun-Filled Throwback","content":[{"style":"normal","_key":"8db21905069a","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"cf22939564ba0"}],"_type":"block"},{"_type":"image","_key":"7ef87fe15655","asset":{"_type":"reference","_ref":"image-513a954e7aa4c700dd9fbebc9c5c5eb739669fd9-640x333-jpg"}},{"style":"normal","_key":"7eabeb08da0e","markDefs":[],"children":[{"text":"Stunt men are the unsung heroes in Hollywood. The people who pull off the real thrilling feats on camera that make major Hollywood action stars look cool and heroic. The men and women who bravely stare in the face of danger every day on set and put their own safety on the line for our entertainment. These individuals do this without the stardom or recognition that the actors they step in for receive. With the new movie, The Fall Guy, former stuntman turned director, David Leitch, has delivered an ode to the courageous stuntmen around the globe. The Fall Guy is a romantic action comedy that echoes the action movies from the 80’s, a time before CGI effects replaced real stunts and action set pieces. The film stars Ryan Gosling as stuntman, Colt Seavers, and Emily Blunt as movie director, Jody Moreno, as estranged lovers trying to find their way back to each other while on the set of Moreno’s directorial debut, Metalstorm (a science fiction action epic). While on the set trying to rekindle his love with Jody, Colt is recruited to locate the whereabouts of the film’s star, Tom Ryder (played by Aaron Taylor-Johnson). The action spills over from the movie set into real life as Colt attempts to find Tom so that his absence will not derail Jody’s debut film.","_key":"09dca8c51d410","_type":"span","marks":[]}],"_type":"block"},{"children":[{"_type":"span","marks":[],"text":"The movie is a decent blend of romantic comedy and white-knuckle action. The romance between Jody and Colt is the main driving force of the movie. The film opens up by establishing the love dynamic between Colt and Jody, who at the time was a camera operator. While working on the same Tom Ryder movie together, Colt suffers an injury that seemingly ends his career as a stuntman. While on his professional hiatus, he loses touch with Jody. However, fate brings the two back together as the producer of Metalstorm summons him on the set ostensibly at the request of Jody. When Colt reveals himself on the set, he discovers Jody did not desire for him to be in her film but is forced to stick with Colt since there are no other stuntmen readily available. Colt seizes the opportunity to get back in Jody’s good graces while working behind the scenes to make sure her film is a success.  Colt needs to get Tom back to the set to finish the film. Ryan Gosling and Emily Blunt are perfectly cast as the lovable leads that you root for getting back together by the film’s conclusion. Like any prototypical rom com, the film’s lead has a sidekick that helps him on his mission to win his lady’s heart back. Winston Duke, who plays stunt coordinator, Dan Tucker, serves as Colt’s sidekick. Dan helps Colt become re-acclimated to being a stuntman on the set of Metalstorm. Off the set, Dan assists with Colt’s dangerous mission to find and locate Tom, who has seemingly disappeared while being in the company of some less than savory locals. The movie does not take itself too seriously and is filled with lighthearted comedic moments that set up the action sequences. Gosling and Blunt are both superb as the magnetic couple in their quest to renew their bond with each other despite outside forces that put their relationship in jeopardy.","_key":"23f40c4ae3ba0"}],"_type":"block","style":"normal","_key":"3f8a8f6f7ef0","markDefs":[]},{"_type":"image","_key":"eadd3c6f6d48","asset":{"_ref":"image-73db0da7a3b57856d6edac8d71af5c5f4b07f9b0-1280x720-jpg","_type":"reference"}},{"_key":"f12382aa4bf1","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The action in The Fall Guy takes a back seat for a good portion of the film. However, when there is action, it is exhilarating. The action in the film is like opening a time capsule as these scenes are reminiscent of 80s and 90s action movies. The explosions are real. The stunts are real. The CGI is minimal. In a movie dedicated to stuntmen, it is only right David Leitch highlight how real stunts are more thrilling to watch on the silver screen. Most of the action in The Fall Guy shows Colt performing stunts while on the set of Metalstorm. The behind the scenes look into how action scenes are filmed on set is a creative way to depict action in a film by Leitch. The stakes rise as Colt falls deeper into danger off the set searching for Tom. Some of the action stylistically mirrors scenes from a Die Hard or Lethal Weapon movie. Enthralling car chases through the city, classic shootouts during speedboat chases, and well-choreographed fight scenes that seem to leap out of a Joel Silver action flick from the late 80s. David Leitch makes sure the stunts are extreme and the explosions are loud and in abundance. The hallmark of a great action film is when the filmmakers perform a stunt that makes you think to yourself “how did they pull that off?” The Fall Guy is filled with these types of hair-raising, over-the-top stunts. What makes the action even better is watching scenes that are filmed in real places instead of in front of a green screen. Leitch embraces the humor in the action with tongue-in-cheek dialogue sprinkled in the high-wire scenes. In that capacity, The Fall Guy is the perfect popcorn, pre-summer blockbuster to satisfy hardcore fans of action films.","_key":"c786941ee5730"}],"_type":"block","style":"normal"},{"children":[{"_type":"span","marks":[],"text":"David Leitch may be a former stuntman, but he is no stranger to working behind the camera. With a resume that includes Atomic Blonde, Deadpool 2, and Bullet Train, Leitch has proven he is capable of expertly juggling comedy and action together. The Fall Guy has all the carefree playfulness of Forget Sarah Marshall mixed with high octane thrills that look like a scene snatched out of a John McTiernan movie. Leitch keeps the plot simple in keeping with the tradition of classic action films. However, the creativity in the film is not stifled with some of the clever stunts performed by Colt in the film. The movie boasts a couple of extended one-take scenes where the camera beautifully pans around the actors amidst action in the background. By making a stuntman the protagonist of the film, Leitch found a way to make an action film with an unconventional hero. The type of hero who relies on his abilities as a stunt guy rather than any formal weapons training. The action is where the movie truly excels as Leitch culminates all his talent as a former stuntman, stunt coordinator, actor, and filmmaker into one film. The Fall Guy represents growth for Leitch as a filmmaker as The Fall Guy is probably his best work yet.","_key":"93ae3735f3c10"}],"_type":"block","style":"normal","_key":"d3319f39bb06","markDefs":[]},{"_type":"image","_key":"17fc34058471","asset":{"_type":"reference","_ref":"image-5c80b3769425b67d23b409e3a9f5bc8112c51490-1920x791-jpg"}},{"style":"normal","_key":"a66b7e906ef7","markDefs":[],"children":[{"_type":"span","marks":[],"text":"With plenty of action and romance, The Fall Guy will be the perfect date movie for the next few weeks. With comedy that lands, romance that warms the heart, and action that keeps you on the edge of your seat, the movie delivers on multiple fronts. While the plot may be a little thin, the movie has enough ingredients to entertain audiences with a slight twist in the third act. The movie is Leitch’s campaign for his fellow stuntmen to start receiving recognition from Hollywood for the work they do. For those of us who had the pleasure of growing up on iconic action films where the special effects were practical but effective, the film locations were real places, the stunts were real, the humor was disarming, and the action was gripping, The Fall Guy is a movie that will wrap a huge smile around your face. The movie delivers with every actor in the film looking like they are having fun bringing their characters to life. Most importantly, the movie does not forget to have fun, rather it is quippy dialogue or the film having an overall laidback and upbeat tone. The Fall Guy is a smart and exciting film that has the potential to turn into a trilogy franchise given the reception the film receives by critics and moviegoers. I highly recommend watching this film in IMAX as a perfect way to compliment your Cinco De Mayo weekend. Films like Dune Part Two, Late Night with the Devil, Civil War, The First Omen, and now, The Fall Guy prove how great a year 2024 has been for the resurgence of Hollywood. It has been years since I have had this much fun at theaters. Cinema is back!","_key":"e48ce86eab030"}],"_type":"block"}],"overview":"The Fall Guy Review","_createdAt":"2024-05-05T07:22:51Z","_rev":"f2aLG6vMFm7GXMHPPONNuO","_updatedAt":"2024-05-05T15:23:32Z"},{"overview":"Race and Gender Swapping In Comic Book Films","_createdAt":"2024-04-25T19:16:01Z","_id":"699f28e4-ff0e-4d9a-b9ea-530ba6e8ff77","title":"Are People Aware Superhero Characters Are Not Real?","slug":{"current":"are-people-aware-superhero-characters-are-not-real","_type":"slug"},"_rev":"bfKCGp6S2gDhqmie9ur7mH","_type":"post","_updatedAt":"2024-04-25T19:16:01Z","content":[{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"f21ec59f86630"}],"_type":"block","style":"normal","_key":"73a396100e88"},{"asset":{"_type":"reference","_ref":"image-621f41afbf26c6ec2217e7122d270263bcd85f42-1200x675-webp"},"_type":"image","_key":"fb2cdb4fb1a9"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Superhero films are meant to be fun. A release from the stress of normal everyday living. However, with comic books and the films they inspired becoming a staple in American society, the fandom has evolved into a toxic culture. The type of culture where the fans love the characters and lore so much that they have communicated threats to Hollywood executives and filmmakers over elements of these films they did not like. One of the most controversial aspects of comic book films today is the idea of race-swapping or gender-swapping characters. Production film companies, like Marvel Studios, have made it known that they are trying to show more diversity in casting. So instead of mostly white casts, they want to have films with casts that have different racial make-up than predominantly all white male casts. This is partially a response to a growing call for diversity in Hollywood, alongside the grassroots online woke movement that has seen an explosion in popularity in the mid to late 2010s to the present. With a more diverse casting model, certain characters that have typically been depicted in comic books and films as white males are now being cast by black actors or female actors. As you can imagine with today’s virulent comic book culture, these sort of character changes did not go over amongst the hardcore comic book base. Any time there is a mere suggestion of race-swapping or gender-swapping a comic book character, well-known or not, and nerd culture explodes into a symphony of hateful rhetoric as if the skies are falling around them. Whenever I come across such a vitriolic reaction online, I question why grown men and women care so much about the race or gender of a character that is not real.","_key":"bbcaa52dc89a0"}],"_type":"block","style":"normal","_key":"75a03d953b75"},{"_type":"block","style":"normal","_key":"17bcbcd8e4fe","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Race swapping characters is not a new phenomenon in Hollywood. For decades, white actors have portrayed characters from different racial backgrounds, rather those characters were Asian, black, Latino, or Native American. In fact, this happened so frequently in Hollywood they called the term “whitewashing”. White actors literally were put on “blackface” or “yellowface” to depict non-white characters. In some cases, the characters these white actors were allowed to portray were real historical non-white characters. For a long time, this sort of practice was considered acceptable by mainstream audiences. There were anti-whitewashing campaigns that were created to combat these sorts of Hollywood casting practices, but there was never an anti-woke-like general reaction from the public as seen with the recent wave of diversity casting Hollywood has experienced in the past decade. So why such a different reaction? Why would people not be equally upset with white actors portraying real life historical figures as they are with non-white actors portraying fictional comic book characters that were traditionally white. Based on the differences in the reactions, one could conclude that the comic book world is only interested in seeing predominantly white male casts in these comic book films. However, that would be too narrow of an opinion.","_key":"ebd01b10609a0"}]},{"_key":"9141b2c6e042","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Playing the devil’s advocate, many of these comic book fans are traditionalists who want to see these comic book characters and stories brought to the big screen without major changes to the source material. To want these films to closely resemble their comic book origins as much as possible is completely understandable. I also get that in some cases the altering of the race or the gender of a specific comic book character would significantly change the essence of that character. So, I get why people would be upset with making a major change to a beloved comic book character. I know this because I grew up on comic books. As a child, I had a comic book collection of DC and Marvel comics. I also grew up on comic book TV shows and movies (live action and animated) and video games that were inspired from the comic books. I still enjoy comic book movies and TV shows as an adult. I am essentially a comic book nerd. However, I am also a fan of great storytelling and acting. I am a fan of cinema first. For many years, Hollywood struggled with making quality superhero films. These films were treated as a cheap cash grab by film studios and were typically made by individuals who were either not familiar with the source material or did not understand the source material well enough to translate those stories to live action films. There were visionary filmmakers that changed the landscape of Hollywood by showing how you can treat the source material with care and make tons of money at the same time. The 21st century has been a gift for comic book aficionados who have been spoiled with great comic book films such as Spider-Man 2, The Dark Knight, Logan, and Avengers Infinity War. Some of the greatest comic book films have made significant changes from the comic books to properly adapt the stories for film treatment.","_key":"be33caf67bc50"}],"_type":"block","style":"normal"},{"_type":"image","_key":"93a1766a388d","asset":{"_ref":"image-07ea9d72a935e4558c17da4cb4fb6e0674b6e262-1260x598-jpg","_type":"reference"}},{"_type":"block","style":"normal","_key":"8be0d199f1e5","markDefs":[],"children":[{"_key":"70bdbc0a4be50","_type":"span","marks":[],"text":"I want the characters to be portrayed by the best possible actors available. Recently it was suggested for Denzel Washington and Giancarlo Esposito to play Magneto and Professor X in the MCU version of the X-Men. There were rumblings of Michael B. Jordan playing Superman in a JJ Abrams film. LaKeith Stanfield expressed he wanted to play the Joker. The reaction to these suggestions were exactly how you would imagine based on today’s climate. Are we not to believe that these actors are great enough to do these characters justice on the big screen? I do not subscribe to the theory that great comic book casting has to be comic book accurate. I desire to watch a good film with an engaging story and the best actors to bring the story to life. Actor Jeffery Wright gave one of the most sobering and greatest portrayals of the traditionally white character, Commissioner Gordon, in 2021’s The Batman film. Samuel L. Jackson has become a staple in MCU films as Nick Fury, who also was a white character in the comics. Arguably one of the hottest actors in Hollywood today, Zendaya, became one of the most lovable characters in the latest Spider-Man films. The list goes on, but the point is that changing the race of these characters did not take away anything from the stories of the films these characters appeared in. One of the biggest counterarguments is what if you took a character, like Black Panther, who is black in the comic books and race swap that character with a white actor. My response would be that with clever writing, you could pull this off. Why? Well, it is because these characters are not real people. There have been stories in comic books where there have been animal variants of comic book characters. Thus, raising your blood pressure over a racial or gender change of these fictional characters comes across as foolish and shortsighted."}]},{"style":"normal","_key":"bdc64eac4dd4","markDefs":[],"children":[{"text":"The wave of anti-wokeness that has enveloped the nation this decade is a troubling sign of deeper issues. Not saying the everyone who is a traditionalist when it comes to comic book films are racist or sexist because they are against race or gender swapping characters. However, I am willing to bet that much of the criticism is rooted in racism and sexism. Especially when you read the comments by some of these anonymous individuals online. The question people must ask themselves is would they sacrifice having the best actor portray a comic book character for comic book accuracy? The argument reminds me of the actor Demetrius Shipp, Jr. portraying 2pac in the All Eyez On Me biopic. While he looked exactly like 2pac, he failed to capture the essence of who 2pac was, which affected the overall quality of the movie. Growing up on comic books myself, I can certainly respect the opinions of those who want the films to be as faithful to the source material as possible. However, in my opinion there is no need to be so unsettled by these sorts of changes to these characters, especially before you have a chance to see the acting performance of the actors. The implications point to problems deeply rooted in our society. Why do people have a problem with diversity? Last time I checked most roles in these comic book films were still being given to white actors, which makes the backlash against the casting of anyone other than a white male for these sort of fantasy roles even more puzzling. At the end of the day this is supposed to be entertainment. Even though race swapping is nothing new in movies, it seems as if the only time people take issue with this practice is when the actor is not white. To comic book nerds reading this, it is going to be okay. Go outside, catch a breath of fresh air, and relax. Demographics are changing. Women are becoming one of the fastest grown demographics amongst comic book readers. There are stories for everyone, no matter the background, that people can enjoy.","_key":"ce3303ee89530","_type":"span","marks":[]}],"_type":"block"}]},{"overview":"Godzilla x Kong: The New Empire Review","_type":"post","_id":"7d58fdf2-8530-4dd6-be3d-7e290fe49aac","title":"Godzilla x Kong: More of the Same","_updatedAt":"2024-04-23T02:10:09Z","content":[{"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"82170423e50c0"}],"_type":"block","style":"normal","_key":"6ae63edf0f01","markDefs":[]},{"asset":{"_ref":"image-bea152c26863eb92347069f7fc2d4329936e8a78-640x360-jpg","_type":"reference"},"_type":"image","_key":"b35b2ce75518"},{"_key":"eac5280c61ba","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Hard to believe it has been 10 years since the launch of the current monster franchise that has raked in hundreds of millions of dollars for Warner Brothers, with help from Legendary Pictures. The Marvel Cinematic Universe created a wave of copycats who wanted to cash in on the crossover of iconic movie characters. Warner Brothers clearly saw this as a lucrative opportunity to bring King Kong and Godzilla together in the same movie. The first clash between the two monster titans that took place in 2021’s Godzilla vs. Kong was set up and teased with a pair of Godzilla solo films, Godzilla (2014) and Godzilla: King of the Monsters (2019), and a solo King Kong film, Kong: Skull Island (2017). Now the two return in the sequel to the monster mash-up with Godzilla x Kong: The New Empire. Adam Wingard also returns as director. While the plot of its predecessor focused on pitting the pair against each other in an all-time epic clash, Godzilla x Kong features the former foes teaming up to take on a new threat to human civilization. The story takes us deeper into Hollow Earth exposing revelations of a new species and an ancient civilization. Rebecca Hall, Kaylee Hottle, and Brian Tyree Henry reprise their roles as Dr. Ilene Andrews, Jia, and Bernie Hayes, respectively. The trio join forces partially to help Dr. Andrews’ daughter, Jia, who is experiencing frequent episodes, and also to uncover the latest threat to mankind at the hands of the creatures. Joining the team is Trapper, played by Dan Stevens, who is a pilot/monster veterinarian who is there to patch up Kong whenever he gets injured. Gorilla x Kong is the Fast and Furious of monster films. Entertaining and fun thrills blended with generic acting, a laughable story, and corny dialogue.","_key":"08e492a204520"}],"_type":"block","style":"normal"},{"_type":"image","_key":"e3860d3ab145","asset":{"_ref":"image-d33ebef350264b76470aa39a8efbea47918cf2eb-1296x730-webp","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"The fact the movie was released in March instead of the heart of summer blockbuster movie season speaks volumes on the confidence Warner Brothers had in this film at the box office. Godzilla x Kong is an experiment in the ridiculous. You have everything from giant mechanical arms for Kong to a pink colored Godzilla tail resulting from becoming “super charged” with radiation. The story parallels Godzilla on Earth gearing up for a clash with a mysterious unknown threat while Kong searches for a new species of apes on Hollow Earth. As a side story, Jia is being sent a distress signal telepathically from a supposed alien society. As you can imagine, the eye rolls I had while watching this movie were in abundance. The script is an exercise in turning off your brain to buy into the plot. There are so many sub-plots going on that are never fully fleshed out. The end result was me not being engaged in what is going on in the story whatsoever. Adding insult to injury are the poor attempts at humor in the film, which seems to come out of a bad Sam Raimi Spider-Man script. While the chemistry between Trapper and Bernie is a rare highlight of the story, those moments are quickly soured by cheesy comedic efforts that never seem to land. The most egregious aspect of the story is the sub-plot involving Jia. The psychic connection she has to an unknown entity leads her back to Hollow Earth to discover the source of her own origins. Unfortunately, that aspect of the story is easily the most forgettable and offers the slowest moments of the film. The scripts in the movies in this franchise have never been Oscar caliber. However, Gorilla x Kong offers a significant escalation in absurd storytelling.","_key":"4938e2a72c9f0"}],"_type":"block","style":"normal","_key":"4cbdf0721713"},{"_key":"f8f9e8865002","markDefs":[],"children":[{"_key":"b335e97d66210","_type":"span","marks":[],"text":"One area where the movie has improved from the previous films in the franchise is the action. The reason these movies keep us coming back to theaters is because of the incredible and violent encounters amongst the colossal leviathans. The smartest thing the filmmakers did with this movie was focus more on the creatures themselves as opposed to the human characters. There are plenty of eye-pleasing and jaw-dropping fight scenes in the movie both on Hollow Earth and Earth. On Earth, you get to see grand backyard brawl-like combat scenes all over the world, from the pyramids of Egypt to the beaches of Rio De Janeiro in Brazil. To see these giant creatures engage in a contest of fisticuffs with the fate of the world hanging in the balance is worth the price of admission alone. The highly satisfying action set pieces balance out the mediocrity of the writing. All the creativity in the film seemed to be poured into making the coolest on-screen battles featured in any monster film ever created. The only drawback to the fight scenes is the way the film glosses over of all the human casualties that must have resulted from the destruction wreaked in highly populated areas. Despite that oversight, each fight scene is imaginative and inventive in creating entertaining matches between the creatures."}],"_type":"block","style":"normal"},{"_type":"image","_key":"de4beb42637b","asset":{"_ref":"image-32f9b6a4ceaccdf32d30b00c54c02aeb69c7c53c-1200x800-webp","_type":"reference"}},{"_key":"78a43cb57c5b","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Another positive takeaway from the film are the CGI effects. Godzilla and Kong have never looked more realistic and life-like than as they do in Godzilla x Kong. We have come a long way from stop-motion animation and animatronic creatures. The technology has caught up where we can have a naturalistic fight involving Godzilla and Kong in a real city that looks believable. The three-year gap between Godzilla vs. Kong and Godzilla x Kong have served the film well in terms of the visual effects. All the creatures in the film look both beautiful and terrifying. Every last detail of the looks of the monsters, from eye color to the scars on Kong’s chest, is captured with accurate clarity. The only problem with the CGI is the size of the monsters seem downgraded on most of the scenes that take place on Hollow Earth to the point where the creatures appear to be normal sized or smaller than they are. However, that is more of a nitpick as the CGI effects are a clear strong point of the film. Especially when the battles are waged in real cities where the CGI beautifully captures the demolition of cities as monsters are hurled back and forth and collide with buildings and skyscrapers. Rather underwater, on the ground, or on Hollow Earth, the CGI content is rendered as best as it ever has been in any Godzilla or Kong film.","_key":"029e85967d850"}],"_type":"block","style":"normal"},{"children":[{"_type":"span","marks":[],"text":"If you have seen any of the previous films in the franchise, you have pretty much seen this movie. The movie offers nothing dramatically different from the previous films, other than more of a focus on the creatures than the human characters. If you desire to see a movie with CGI monsters engaging in a high stakes royal rumble brawl, the movie delivers with a plethora of stunning visuals. You definitely get your fair share of fight sequences in the movie. However, everything in between, from the story, score, and comedic aspects of the story are generic at best. What started off as a promising cinematic universe with 2014’s Godzilla has spiraled into blatant cash grab by the studio where the characters and the story are not taken seriously. Ultimately what you get is a mixed bag where you do have a fun time, but you leave the cinema feeling underwhelmed. The movie is made for average moviegoers who want to turn off their thinking caps and simply enjoy a fun popcorn movie with the kids. Godzilla x Kong, as well as every film in the series, is a missed opportunity. With clever script writing, or just plain less lazy writing, the writers could have come up with a more compelling reason to pair these renowned mammoths together where there was an earned build-up to the contentious skirmishes between the creatures in the film. The lack of proper storytelling results in the fight scenes falling flat. If IMAX is not available, I would only recommend watching this film when it comes out on digital.","_key":"191c7f1a43bb0"}],"_type":"block","style":"normal","_key":"223403439be6","markDefs":[]}],"slug":{"current":"godzilla-x-kong-more-of-the-same","_type":"slug"},"_createdAt":"2024-04-23T01:31:46Z","_rev":"poDwaqkRnMvr5Nzh94yaMb"},{"_createdAt":"2024-04-18T20:20:43Z","_type":"post","_id":"a3fc9a6b-e28f-420a-8a54-a01d3a974cdc","content":[{"_key":"7835fc8ba744","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"faa9d949b8f7"}],"_type":"block","style":"normal"},{"_key":"2b3d04259ce3","asset":{"_type":"reference","_ref":"image-249e25490e6c654ee2b55018d7f44a28a5c731b2-3300x1398-jpg"},"_type":"image"},{"style":"normal","_key":"723ce1790c7e","markDefs":[],"children":[{"marks":[],"text":"So much has happened in 30 years. The OJ verdict. 9/11 and the Middle Eastern wars that followed. The first black President. The pandemic. We are living in a completely different world from 1994. One thing that remains the same, however, is the brilliance of Illmatic. I remember seeing videos for “Halftime”, “It Ain’t Hard to Tell”, and “The World Is Yours\" on Rap City with Prince DeJour as the host. For whatever reason, I chose to sleep on Illmatic. When it comes to Nas, I was a “Johnny-Come-Lately” fan. It Was Written was the first album from him that grabbed me. After It Was Written stopped me in my tracks, it was essential for me to go back and listen to Illmatic. While It Was Written is considered in the eyes of many to be the best Nas album, there is no denying that Illmatic is the greatest album in the man’s illustrious career. Illmatic is the album that even the biggest Nas haters cannot front on or dismiss. The album is a true certified classic and arguably a top 10 rap album of all time. There is a sizeable faction within the hip hop community that considers it to be the best rap album ever made. You can certainly make an ironclad case for that argument. The replay value. Zero skips. The impact the album has had on the culture. No filler. In many ways, Illmatic is the perfect rap album. A piece of art that Nas poured his entire life into making up to 1994. For the past couple of years, I have been able to get my daily Nas fix with the Kings Disease and Magic trilogies. With the 30th anniversary of Illmatic finally arriving, it has made me go back to earlier Nas material that raised me in the 90s. The past week has been a welcome trip down memory lane.","_key":"dcdac8e7eb4c0","_type":"span"}],"_type":"block"},{"_type":"block","style":"normal","_key":"8c5e58c3a2fa","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Illmatic is a special project. No gimmicks. No clout-chasing antics. Just a pure hip hop album where everyone understood the assignment. The star of the show, Nasir Jones, was heralded as the next great emcee to carry on the tradition established by the greats of the 1980s golden era. Debuting on Main Source’s “Live at the BBQ”, the Queensbridge emcee, who boldly proclaimed to “snuffin’ Jesus”, put every emcee in the game on notice that he was coming for the throne. From ’92 to ’93, Nas continued the meteoric momentum with his classic verse off MC Serch’s “Back to the Grill” and by releasing “Halftime’ on the Zebrahead soundtrack, which starred Michael Rapaport. Nas also dropped a slew of freestyles, most notably on the Stretch and Bobbito Show in 1993. Nas was anointed as the chosen one, the same way Lebron was by basketball fans in the early 2000s before he was drafted. Nas was a hybrid of Slick Rick, Tragedy Khadafi, Kool G Rap, and Rakim. He was the one that would restore prominence back to the name of his neighborhood, Queensbridge Projects, after KRS and Boogie Down Productions declared the Bridge was over in the late 80s during the iconic Bridge Wars. With his debut album, the hope was that Nas would join the ranks of the greatest, such as Kane, LL, KRS, G Rap, Cube, Kurtis Blow, Chuck D, etc. Nas had his work cut out for him. A wave of brilliant masterpieces was released during the making Illmatic. From ’92 to ’94, The Chronic, Enta Da Stage, Doggystyle, Enter the Wu (36 Chambers), Midnight Marauders, and other heavy hitters were released. Competition was stiff amongst his peers. The West Coast was dominating. The East Coast was experiencing an underground renaissance. Outkast and Biggie were coming. Nas had a lot to live up to and the streets were eagerly anticipating the official arrival of his debut. Heavy bootlegging may have put a dent in the early commercial success of arguably the greatest launch in hip hop history, but that dent ultimately proved to be delayed success.","_key":"3726aea831700"}]},{"_type":"image","_key":"6bfb60fa80f2","asset":{"_type":"reference","_ref":"image-39a7d8466ab6fc533119a38755a6c6a4dda0baa2-1440x967-jpg"}},{"markDefs":[],"children":[{"_key":"ea801162f7550","_type":"span","marks":[],"text":"For his vision to be fully realized, Nas assembled a team of producers that became the rap version of the Dream Team. That team consisted of Large Professor from Main Source, DJ Premier from Gang Starr, Q-Tip from A Tribe Called Quest, Pete Rock from Pete Rock and C.L. Smooth, and the underrated L.E.S. to add some Queensbridge flavor to the Illmatic dish. Erick Sermon has recently confirmed in interviews that he had an opportunity to be on Illmatic but passed on the chance to produce on the album. While it would have been monumental to hear Nas over an early 90s Erick Sermon instrumental, like Keith Murray’s “Get Lifted”, it turned out to be a blessing in disguise because Illmatic would end up becoming one of the most complete projects ever crafted. The jazz-infused production provided by this iconic team provided Nas with the perfect music to catch wreck. The timeless production allowed Nas to get into a zone where the vocabulary would spill forth to create some of the most seminal verses of his career. The production on the album added class to the poignant lyricism of Nas. The dream team created a cohesive sound sonically with a New York City aesthetic that rhythmically and melodically transported you to the project tenement buildings, urine-stained hallways, bullet-riddled windows, and cracks on the pavement of Queensbridge streets. One can make the argument that there has never been a better ensemble of producers since Illmatic. Every beat that was contributed to Illmatic was an essential piece of the puzzle that would make Illmatic an undeniable classic."}],"_type":"block","style":"normal","_key":"85afd46731ca"},{"children":[{"_type":"span","marks":[],"text":"Nas firmly established himself as one of the greatest lyricists to ever be birthed out of the New York streets. Illmatic was where Nas established the blueprint for a lot of emcees that came after him. The introspective bars that inspired so many emcees to look deeply within and thoughtfully convey those cavernous emotions on wax. What makes Illmatic so special was we got to hear a hungry Nas, filled with youthful vigor, pour his whole life onto some of the best production in the 90s. There was no stale “16 bar-hook-16 bar-hook-16-bar-hook” format, as Nas demonstrated on the opening song “NY State of Mind”. Nas tossed the rulebook out on Illmatic and emptied his soul out on every beat as if he had an endless book of rhymes. Illmatic was also the introduction of Nas as a master storyteller. The vivid imagery inspired by his rhymes was like a Donald Goines book come to life within your imagination. You could close your eyes as you listen to any selection off Illmatic, and it was as if you were watching the life story of Nas growing up in the projects on the big screen. Illmatic also solidified Nas as a master at his craft in his late teens/early 20s. Nas had a laid-back-in-the-pocket, effortless flow where he would squeeze so many words within a bar that would perfectly catch that slightly off-beat pocket with a multi-syllabic precision. Nas took lyricism to another level, much like Rakim and others did before him and late 90s rappers like Pun, Eminem, and Canibus would do after him. Nas so lucidly captured NYC at that time that much of what he rhymed about at that time remains relevant today, rather he was talking about the violence in the hood, street politics, friends succumbing to the street life that led to an early grave or being imprisoned in the belly of the beast, the desperation sprouting from poverty, or police brutality. Illmatic was Nas at his most famished as an artist and every thought that had built up inside him was unleashed to the world with Illmatic.","_key":"099bdb1fa90b0"}],"_type":"block","style":"normal","_key":"997b8502fdf8","markDefs":[]},{"_type":"image","_key":"64b24b59ab76","asset":{"_ref":"image-4468d7f09fd96a0b980292b4712f99ebe801ee11-3900x1680-webp","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Illmatic has endured as the biggest triumph for Nas in his 30 plus-year career. Nas hit a homerun out the park with his initial step up to the plate. Illmatic was such a masterpiece that fans have shunned practically every Nas release since. Nas has other monumental gems in his portfolio, such as It Was Written, Stillmatic, Lost Tapes, God’s Son, Life Is Good, and most recently his albums with Hit Boy. However, in the eyes of people that control the message, none of those projects measure up to the genius of Illmatic. Illmatic was a gift and a curse for Nas because that is all some fans want to hear from him. I can understand this sentiment more as each year passes since the release of Illmatic on April 19, 1994. Never again will we hear Nas with so much to prove to the world. Illmatic was Nas at his hungriest, and it would be impossible for any artist to reproduce that sort of drive again. Nas knew exactly what he wanted to say and how he wanted to say it. With the help of AZ as the only guest feature, the production from rap’s Avengers-like production team, and cameos from his brother, Jungle, and close neighborhood friend, G-Wiz, Nas used his debut as the foundation for what would become one of the hip hop’s best stories ever told. So to everyone involved in the making of Illmatic, including the work behind the scenes from Faith Newman and MC Serch, I personally want to say thank you. Thank you for delivering an album that never gets old. That remains relevant to this day while sparking nostalgic memories in my coming-of-age years. That keeps me having the screw face and my head nodding like Biggie in the “One More Chance” video. The work of everybody mentioned helped create a body of work so important that it was inducted into he Library of Congress. That helped Nas become one of the first rappers to perform the album with an orchestra at the Kennedy Center in Washington, DC. That had Nas giving lectures at Ivy League schools. That inspired last year’s album of the year, MICHAEL, by Killer Mike. Illmatic is the album that everyone has attempted to duplicate in its 30-year run. Nasir Jones and company created an album that is up there with Run DMC’s self-titled debut, Paid In Full, Criminal Minded, It Takes a Nation of Millions to Hold Us Back, Straight Outta Compton, Get Rich or Die Trying, and other true classics. So tomorrow on that beautiful April 19th sunny Spring morning, treat yourselves to history by streaming or listening to this ageless classic on vinyl, tape, or CD. Happy 30th anniversary to one of hip hop’s most important pieces of art ever created.","_key":"bbe785996d300"}],"_type":"block","style":"normal","_key":"07ea04c74c12"}],"overview":"An Ode to the 30th Anniversary of a Classic","_rev":"ArRDb0yPn37izwXtSjVtJX","title":"Celebrating 30 Years of Illmatic","_updatedAt":"2024-04-18T21:04:52Z","slug":{"current":"celebrating-30-years-of-illmatic","_type":"slug"}},{"title":"Civil War: An Intense Journey Through Madness","content":[{"style":"normal","_key":"55d4e0eb175f","markDefs":[],"children":[{"text":"By Jamil Weeks","_key":"8c64245d75d20","_type":"span","marks":["strong"]}],"_type":"block"},{"asset":{"_ref":"image-9fafc851c4301ffd539f805cd352ed1b58818862-848x477-webp","_type":"reference"},"_type":"image","_key":"88eb30fd34b1"},{"_type":"block","style":"normal","_key":"32e9401104b5","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Republicans versus Democrats. Conservatives versus Liberals. Wealthy versus poor. In modern times, it seems as if the United States is as divided as it has ever been in my lifetime. With the current climate of discontent amongst Americans, a movie like Civil War seems to have arrived at the perfect time. Directed by Alex Garland, best known for directing Ex-Machina (2015) and Annihilation (2018), the movie depicts an internally war-ravaged United States that has descended into utter chaos. The war fractures the United States in separate secessionist movements looking to seize control of the government. As the audience, you see the war unfold through the eyes of four journalists who embark upon a dangerous journey from New York City to Washington, DC in search of the ultimate story. The reporters place their lives in jeopardy as they navigate treacherous roads where peril potentially lies around any corner. As they get closer to their ultimate destination, their risky trek mirrors Captain Williard’s trip down the river to find Colonel Kurtz in Apocalypse Now. Their car ride plunges the reporters down a dark path filled with brutality and depravity. The movie does not pick a side or try to make political statements. Instead, the movie focuses on the dynamic relationships between the reporters as they take the ominous ride to DC.","_key":"3574d6cab3bc0"}]},{"children":[{"_type":"span","marks":[],"text":"Do not come to the theater expecting a huge war film like Saving Private Ryan or Platoon, with epic war scenes. Alex Garland offers a more intimate look at war with Civil War. The actors who portray the reporters in the film are the heart of the story. The film stars Kirsten Dunst as Lee Smith, who is a war photographer. Lee has traveled the world reporting on the front lines of some of the world’s deadliest conflicts. Lee has seen it all, except a civil war in her own country. You can see the weariness in Lee’s eyes in each scene from all the carnage she has witnessed throughout her career. You also see how she and her colleagues have had to become emotionally detached in order to effectively do their job. Joining her is her right hand, Joel, played by Wagner Moura, and her mentor, Sammy, played by Stephen McKinley Henderson. The last reporter to join the trip is Jesse, played by Cailee Spaeny, who is a young reporter that idolizes the work of Lee. Jesse represents Lee when she was a young photographer just getting started. The relationship between the two starts off as contentious as Lee expresses to Joe her disapproval of Jesse tagging along knowing the threats that lie ahead. However, the two forge a bond as colleagues as Lee reluctantly shows Jesse the ropes of what it takes to be a renowned photographer. Garland does a phenomenal job fleshing out the main characters. You grow to care about them as learn more about who they are and worry about what the future holds for them as you get this ever-growing sense of impending doom as the story progresses. You see the war through their eyes as they descend upon the forefront of the battles capturing the intensity and savagery of war through their photo lenses. The fact that the audience is heavily invested in these characters through great storytelling raises the stakes of each battle the reporters find themselves in.","_key":"8d10d688645d0"}],"_type":"block","style":"normal","_key":"0d82d18506fe","markDefs":[]},{"_type":"image","_key":"cabb722cb53c","asset":{"_ref":"image-a902d0169099de4f78d068d0a53d239ea1b47f77-750x400-jpg","_type":"reference"}},{"_key":"09f62ddc41c7","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The battle scenes in the movie are brutal and bloody. Garland places you right with the journalists as almost a fifth member of the press following the soldiers as they exchange gunfire with opposing forces. You can feel the bullets whizzing past your ears and the power of each bullet that is fired with the masterful sound design. The battle scenes are a balance of deafening war sound effects to scenes devoid of noise to heighten the suspense of the scene. You almost feel like you have PTSD after witnessing some of the combat scenes in the movie. Credit must be given to Garland for making the audience feel like they have been placed amid flying bullets, bombs exploding around you, and gruesome acts of war violence. While most of the movie centers around the journalists with battles sprinkled in here and there, the third act is where all the character development pays off with a huge battle to take over the White House. Garland does a great job of making you feel the horrors that are unfolding before your very eyes. The scattered dead bodies on the battlegrounds. The explosions. The sound of gunfire erupting from military style rifles as if they are being fired from the theater seat right next to you. Garland attempts to make the war scenes as unique as possible with the addition of musical selections that seem to come out of nowhere at certain points during combat scenes as if Guy Ritchie was behind the camera. The music seems to be strategically placed by the filmmakers as almost a way to provide the audience with somewhat of a relief from the horrific events portrayed in the deadly skirmishes. While there are not a lot of war scenes in the first two acts of the film, when the battles do happen, they leave an impression on you.","_key":"ded3127b1b920"}],"_type":"block","style":"normal"},{"_type":"block","style":"normal","_key":"a0d331e8bb39","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The film is not a political film. Do not expect Civil War to force feed you from a particular ideological plate. What is refreshing about the film is that the film is a pure entertainment piece. However, with the current climate of American society, one cannot help but think of this film as an ominous warning of what our country could become if we continue down the path of fiery rhetoric and discord. Garland never fully explains why the Civil War started. You know the country has splintered into regional alliances looking to overthrow the government, but it is not known what each movement stands for politically. While some might look at this as a drawback, I feel it was the smart play to place the emphasis on the aftermath of what a civil war would look like. How our country would look and fundamentally change if we were at war amongst ourselves, rather than use the film as a political tool to fire up one segment of the country while offending the other. As a result, Civil War serves as a cautionary tale by giving Americans a glimpse into what our future beholds if we do not find some middle ground as a country to settle our differences.","_key":"1f457e354cc90"}]},{"_type":"image","_key":"8862e43d505b","asset":{"_ref":"image-4b24d51e355bc7c8e4c4caef031bc34b9a6ea886-640x360-jpg","_type":"reference"}},{"_type":"block","style":"normal","_key":"4ff64bb04679","markDefs":[],"children":[{"marks":[],"text":"Civil War is a must-see film, especially in IMAX. A dark and intense war drama that shocks you, entertains you, and makes you think. Kirsten Dunst delivers perhaps the greatest performance of her career as the lead character. The cast individually adds emotional, and sometimes disturbing, acting portrayals in every scene in the movie. Civil War is a savage and impassioned take on a bleak near distant future of America through a car ride from New York City to DC. I am not prepared to call this movie the film of the year. Currently, Dune 2 holds that title. What I am prepared to say is the film has riveting war scenes, captivating cinematography, considerable acting across the boards, an engaging story, beautifully crafted directing, and ear-piercing sound design. All these factors easily make Civil War one of the best films to be released so far in 2024. My only fear is that people from either side of the political aisle will attempt to hijack the premise of the movie to further whatever agenda they are trying to shovel to the American public. I recommend this movie for people looking to see an entertaining and thoughtful piece of art. Civil War is a movie every American should see, and hopefully that viewing is in a theater!","_key":"7056dcea90590","_type":"span"}]}],"_type":"post","_createdAt":"2024-04-16T01:20:56Z","_rev":"vo4AAIdNZYxMloyYXHCu8S","_id":"93ab4202-3325-4232-bdab-03c40b1c6dde","_updatedAt":"2024-04-16T01:23:04Z","slug":{"current":"civil-war-an-intense-journey-through-madness","_type":"slug"},"overview":"Civil War Review"},{"title":"Might Delete Later: Controversy Overshadowing the Music?","_createdAt":"2024-04-11T02:34:49Z","_id":"395f1a72-cd6d-4deb-8484-10b9f669418b","_type":"post","_updatedAt":"2024-04-11T03:05:42Z","content":[{"_type":"block","style":"normal","_key":"3e180f287b57","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"2fcf6fb557ce0"}]},{"asset":{"_ref":"image-ef22a99cc5dc395de6f205fe3d4344d2cb54ac5c-1280x720-jpg","_type":"reference"},"_type":"image","_key":"33f636d5688e"},{"children":[{"_type":"span","marks":[],"text":"The last couple of weeks have been a whirlwind for Jermaine Cole. He went from starting a rollout to arguably the most anticipated rap albums of the year to being swept up in a battle with Kendrick Lamar in a matter of days. Cole would later find himself to be the subject of ire by hip-hop purists for the apology that shocked the world at his own Dreamville Festival. Cole has become a polarizing figure, with half of hip hop fans excoriating his name on social media platforms with venomous slander as if a ring of rabid foam was forming in the corner of their mouths while their twitter fingers ran rampant. The other half, referred to as “stans”, praise Cole for staying true to himself and not allowing his spirit to be disturbed by a forced beef with a fellow comrade for others' entertainment. While everybody has seemingly weighed in on the matter, lost in the shuffle has been the music. Cole’s surpriste mixtape, Might Delete Later, dropped without warning last Friday and has shaken things up more than the recent New York earthquake. The 12-song mixtape was meant as an appetizer for The Fall Off, which is slated to drop some time this year hopefully. Instead, public dissension over Cole waving the white flag to Kendrick has taken center stage. Whether than weigh in on a tiring subject at this point, let us take time to bring it back to the music. Is Might Delete Later any good?","_key":"e383fdc9425b0"}],"_type":"block","style":"normal","_key":"f34ec05fd55c","markDefs":[]},{"_type":"block","style":"normal","_key":"8d7c9da6c951","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Might Delete Later features Cole rapping with a ferocious hunger that we have not seen since his pre-Roc Nation days when he proclaimed himself to be Young Simba. You can feel the energy Cole exudes coursing through your veins through each mixtape selection. Cole has spent over a decade building up momentum with each album, and has worked his way up the totem pole to the point where he was considered one of the greatest out of the current crop of rappers, at least in the mainstream. The music presented on Might Delete Later supports those claims, despite recent events sabotaging his impetus. Cole storms out the gate with fiery bars on the opening track “Pricey”, with lines like “breaking news, I’ve officially entered my prime/which is really interesting, this is the point where a rapper would typically start to decline “. Cole goes on to boast about his place in today’s rap game on “Crocodile Tearz” stating “it’s me, not two, not three/the uno, G.O.A.T., I need my fee”. On the Cam’ron-assisted “Ready ‘24”, Cole blisters over a remake of The Diplomats’ 2000s anthem “I’m Ready”, where Cole boldly proclaims himself the greatest in the game with the vigor of a young man. Perhaps the crown jewel of the mixtape is “Pi” featuring Daylyt and ironically TDE’s Ab Soul, where Cole absolutely blacks out in the booth spitting a certified verse of the year contender. Cole raps with a chip on his shoulder as someone who feels slighted by being in the shadows of Kendrick and Drake for most of his career. With this mixtape, Cole raps as if he is appalled that the world is just now realizing his greatness.","_key":"07b505beb8650"}]},{"_type":"image","_key":"f02f9f2147c9","asset":{"_ref":"image-11cfa81260bbcc25d7b393ed69c18423a09e52e6-1131x594-webp","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Cole’s argument for the crown crescendos with the closing reply to Kendrick’s shot at Cole on Metro and Future’s “Like That”. Cole reluctantly returns fire on “7 Minute Drill”. While the song was initially met with mixed reviews from rap fans, the song matches the energy of Kendrick’s verse and served as a warning to Kendrick of what was to come, at least before the apology. Cole delivers ominous rhymes while lowkey extending an olive branch to his opponent with lines like “Lord, don’t make me have to smoke this n**** ‘cause I f*** with him/but push come to shove, on this mic, I will humble him”. Cole does his best Jay-Z impression, quoting lines from “The Takeover” as he breaks down Kung Fu Kenny’s discography. Admittedly not the most original idea for a diss track. But “7 Minute Drill” was never meant to be the knock-out punch most rap fans were hoping for, like a “No Vaseline”. Instead, it was Cole sparring akin to Mayweather in the ring with defensive pugilistic disses. If the apology never happened, it appeared as if Cole was saving the real disrespect for an official name-dropping diss that would have probably ended up on The Fall Off. You could tell Cole’s heart was not really into the battle, comparing himself to Nino Brown on that rooftop about to pull the trigger on G-Money. Rather or not Cole reneges on his apology, the would-be battle between him and Kendrick was shaping up to be something special. As ambitious as the song was, it seemed like not even a Conductor Williams beat switch with the second verse was enough for Cole to definitively win that first round.","_key":"52867fb2dd42"}],"_type":"block","style":"normal","_key":"7d257218ee36"},{"_type":"block","style":"normal","_key":"6c19b847aeca","markDefs":[],"children":[{"marks":[],"text":"Outside of the braggadocious banter, Cole still manages to balance out the mixtape with records that caters to his day one fans while sprinkling in conscious rhymes throughout. On the laidback London drill record “H.Y.B”, Cole is joined by Bas and Central Cee where he arrogantly talks to his haters about if he was not faithful to his wife, he could easily steal their ladies from underneath them with ease. On the love ode “Fever, Cole opens his heart on this personal and honest record about craving a deeper love. Cole excels on records like “Fever”, reminding fans on how he built his career by rapping on the type of emotions that regular people can feel. Cole also excels at giving the listener pieces of himself, inviting us as the listener into his world. Songs like “Stickz N Stonez” highlight this as Cole raps about rising above the negativity from his environment growing up in Fayetteville, NC as he proclaims he is “reaching’ for a higher frequency”. On one of the project’s released singles “3001”, Cole questions the validity of materialism that consumes us in society, suggesting he has never felt freer since stripping himself of worldly possessions.","_key":"12c024f80f5b0","_type":"span"}]},{"style":"normal","_key":"61cf6c5c020d","markDefs":[],"children":[{"_key":"5ca8426ea85b0","_type":"span","marks":[],"text":"Might Delete Later is one of J. Cole’s best releases and shows that Cole’s talent is aging like fine wine after over 20 years since releasing his first song. Cole is as lyrically sharp as he has ever been and raps with an intensity of someone that has something to prove. The apology to Kendrick has since soured the momentum he was riding on for the past couple of years. Listening to this mixtape in the wake of his surrender to Kendrick this past weekend, one cannot help but look at some of his cocky claims to the throne differently. The swagger that saturated his bombastic lyrics ring hollow in hindsight to Cole’s controversial apology. It is a shame because Cole is rhyming as good as he ever has in his career. Might Delete Later should have been a benchmark in Cole’s career as a pre-celebratory release to tide the fans over before dropping The Fall Off. I still believe in J. Cole. Call me a stan. Call me a homer. But, I feel Cole on his best day can go toe to toe with anyone in the game, including K.Dot. Right now, it is open season on Cole with a faction of rap fans feeling betrayed by Cole like he was an illegitimate father that broke his promise after failing to show up to their soccer game when he said he would. I think this release will age well, and I expect good things from The Fall Off. The stakes for The Fall Off have risen. The album almost must be a definitive classic for Cole to get back in the good graces of his detractors. However, as a native of Fayetteville, I know what kind of grit people that come from my hometown are made of and remain optimistic about The Fall Off. The best is still yet to come from Cole and only time will tell how his apology ages."}],"_type":"block"}],"slug":{"current":"might-delete-later-controversy-overshadowing-the-music","_type":"slug"},"overview":"Might Delete Later Review","_rev":"22nfumeJEr9mw4OWaqoFvN"},{"_createdAt":"2024-04-04T02:03:54Z","_type":"post","_id":"997b05ff-b4fd-435b-9077-890123b05430","slug":{"current":"marciology-continues-roc-marci-s-underground-dominance","_type":"slug"},"overview":"Marciology Review","_rev":"PrR55A3MFxOhVMnn8IJtwd","title":"Marciology Continues Roc Marci’s Underground Dominance","_updatedAt":"2024-04-05T15:56:07Z","content":[{"_type":"block","style":"normal","_key":"8f89fc7231e8","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"1c075edb3e070"}]},{"_type":"image","_key":"09623b3b0047","asset":{"_ref":"image-3dae2a2e5515b8a49d8c2d6f446d722ae3f22493-1920x1920-webp","_type":"reference"}},{"_key":"98350808757c","markDefs":[],"children":[{"_key":"1d8642b03c1d0","_type":"span","marks":[],"text":"When it comes to albums by Roc Marci, it is essential to allow enough time for the music to sink in. Roc Marci albums sound like nothing else out there. I personally cannot judge a Marci album off just one listen. Time and time again, when I hear these abstract samples and beats as I listen to his albums, I think to myself “that’s strange”. Then like clockwork, the brilliance of Roc Marci hits me like a sudden epiphany. Roc is a double threat as an emcee and producer. With a keen ear, he creates music with a sound that seems partly inspired by 70s blaxploitation movies and partly inspired by the reality of the grimy streets of New York. Part of the reason I love listening to his albums is because I am guaranteed to have a unique listening experience. Roc remains uncompromising in the sound of his album. Never does he try to cater to a mainstream audience. Instead, Roc knows who his audience is and consistently delivers music they want to hear. The obscure samples. The dusty beats. The laid-back-in-the-pocket confidence and cadence. Marciology is no exception and proves what made Roc the godfather of the modern-day underground rap scene. Roc makes music you can vibe to again and again. He is a master of coming up with sounds that are simple but with enough layers to provide the appropriate depth for his drug dealer/pimp bravado-laced tales on wax. Marciology is a solid contribution to an already stacked discography from the Pimpire poet and is proof of why Roc Marci is one of the best lyricist/producers possibly ever in hip hop."}],"_type":"block","style":"normal"},{"_key":"aad8436e2e79","markDefs":[],"children":[{"_type":"span","marks":[],"text":"What is impressive with this album is how Roc uses modern day flows over underground beats. The opening title track on the album is a prime example of this as Roc glides over an eerie, unsettling dusty instrumental with, at times, a slowed down Migos-like flow. On “Bebe’s Kids”, Marci effortlessly raps with a double-time southern flow over a 70s inspired loop about how he is the father to the style of a lot of today’s rappers. Roc continues to spit with this type of flow on the closing track “Floxxx” over a fast, uptempo track that sounds like the type of beat you would hear musicians jam to when performing live. Songs like this represent the growth of Roc as a lyricist and an artist. Roc was not always a master of flows and on occasion was not able to successfully pull off rapping over certain types of beats with his flow pattern. On Marciology, Roc was hitting those pockets with precision like he was a pool hall hustler in Martin Scorsese’s The Color of Money. Roc schools his peers how you can have contemporary inspirations while not sacrificing the integrity of your core sound. You never get the feeling Roc is trying to sound like anyone else in the game. Instead, he is showing his listeners he can flip a mainstream flow as well as the hottest rappers in the game can while still staying true to who he is an artist.","_key":"f1825a4ae62c0"}],"_type":"block","style":"normal"},{"_type":"image","_key":"3e2578d2965f","asset":{"_ref":"image-920feaa565b42b5c9294f89e2511939b982fba2b-720x480-webp","_type":"reference"}},{"markDefs":[],"children":[{"marks":[],"text":"What makes Roc Marci albums so great is that they are truly his vision. Like his previous albums, Roc handles the bulk of the production himself. The songs on his albums are never grandiose or over-produced. Instead, they are the perfect complement to his vocals. This is especially true with the lead single, “Gold Crossbow”. Roc utilizes a simple piano loop with minimalistic drums as he masterfully raps “ten toes on burning coals/the burner’s close; *****s can’t touch me, I’m a germaphobe”. As a man that grew up as a big Wu-Tang fan, one cannot help but love the Rza-inspired loop over militaristic drums as Roc raps like a war veteran reminiscing about his street days when he was putting in work. Perhaps the best song on the album is the soulful “Went Diamond”, which sounds like the type of song The Delphonics would croon over as your parents conceived you back in the day. Here, Roc lets loose with a barrage of clever wordplay, metaphors, and divine flow like he was consumed with the Holy Ghost when rapping over this beat in the booth. Roc does find other producers to help hold him down with frequent collaborators, Animoss and The Alchemist, contributing two songs a piece to Marciology. Both Animoss and The Alchemist provide production that sustains the cohesive sound of the album with the throwback psychedelic, funk-laced instrumentals.","_key":"c7dce565902f0","_type":"span"}],"_type":"block","style":"normal","_key":"fe7e52897561"},{"markDefs":[],"children":[{"marks":[],"text":"Roc keeps it in the family by working with other past collaborators with the features on the album. You cannot have a Roc Marci album without at least one feature from Knowledge the Pirate. On the conceptual “Larry Bird”, Roc and Knowledge trade bars alongside GREA8GAWD about moving kilos, referred to as “birds”. CRIMEAPPLE joins Roc on the bar-heavy, guitar-laden “Killin’ Spree” serving up a masterclass in lyricism. On the haunting, drum-less Alchemist-produced track, “Bad JuJu”, Roc recruits Larry June as he raps about his grind to the top on a euphoric song that sounds like a leftover from The Great Escape sessions. Larry June was not the only Cali rapper Roc reached out to as Jay Worthy lends his talents on the soulful “On the Run”, where Jay speaks on betrayal and disloyalty in the streets. On the woeful soul loop on the song, “Higher Self”, Roc is joined by T.F. and Flee Lord as they drop jewels on how the lessons learned in life are more valuable than material things. Each one of these features shows the chemistry Roc has with these artists as they fill in the final pieces to the intricate puzzle Roc puts together with each album release.","_key":"f7ed96bd1c9e0","_type":"span"}],"_type":"block","style":"normal","_key":"e09948b3a625"},{"style":"normal","_key":"1f9524762562","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Roc Marci has built his career with a formula of taking creative risks in producing unique sonics to his album. Instead of deviating from that formula, he builds upon it with each release. Roc makes music for hip hop fans who love bars instead of Billboard. Roc is a master at blending superficial, extravagant imagery with down-to-earth understanding and street knowledge. Marciology is a masterpiece and one of Roc’s best albums since 2018’s Behold a Pale Horse, which I consider to be arguably Roc’s greatest album. The album may not be for everybody, but Marciology is like finding an oasis in a blazing hot desert to everyone lucky enough to have discovered Roc Marci’s music. The subject matter may be repetitive to those of us used to Roc Marci albums. However, with Roc being the gifted artist that he is, he always finds a way to make the sound of his album fresh. At the risk of bringing up a cliché, “if it ain’t broke don’t fix it”. Roc is the type of artist that always delivers high quality music that caters to his day one fans. Marciology is an early album of the year contender.The album title is perfect as Roc Marciano, himself, is the subject of study for aspiring lyricists and wordsmiths.","_key":"a9fc5aadff8f0"}],"_type":"block"}]},{"_updatedAt":"2024-04-05T00:12:18Z","content":[{"style":"normal","_key":"a7e5fa9756bc","markDefs":[],"children":[{"marks":["strong"],"text":"By Jamil Weeks","_key":"ca29a13093c10","_type":"span"}],"_type":"block"},{"_type":"image","_key":"8fafe0f5ffaf","asset":{"_ref":"image-9a5875f63b6f7d56f048394a78e994f02e18de94-2000x1000-webp","_type":"reference"}},{"children":[{"_type":"span","marks":[],"text":"Hard to believe the 30-year anniversary of Illmatic is upon us in 2024. Equally bewildering is how Nas has remained a relevant force in hip hop throughout the dedades. Nas has maintained his visibility through a combination of lucrative business ventures, his work on documentaries and television series, and new music that introduced him to a younger audience. Nas teamed up with Hit-Boy in 2020 to embark upon an improbable and unprecedented run. Together the pair made six albums, consisting of two separate trilogies, in a three-year span. Nas proved he was still a viable powerhouse this decade, creating further distance between him and his 90s peers. With Illmatic turning 30 in a few days, one cannot help but think of that infamous Scratch Magazine cover from 2006 with DJ Premier and Nas, with Nas sporting the tilted black army hat backwards with the matching black army jacket. Nas and Premo have been long-time collaborators but there has noticeably been a drought of the duo working with each other. The last time DJ Premier contributed to a Nas album was on the Stillmatic album in 2001. Both have worked together on rare occasions since then, most recently on “Beat Breaks’” off a DJ Premier EP. Premo was a key ingredient in creating that signature Illmatic sound, producing the iconic records “Memory Lane”, “Represent”, and the New York anthem “NY State of Mind”. After three years of Nas experimenting with a more polished, commercial sound with the Hit-Boy sessions coupled with the celebration of Illmatic’s 30th birthday, the duo seems destined to get back in the lab and create some new magic.","_key":"84455901ed740"}],"_type":"block","style":"normal","_key":"076791e7c39b","markDefs":[]},{"_key":"4993111e8ccc","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Rap fans have been eagerly anticipating the possibility of one of the best lyricist/producer combinations getting back together for an entire album since 2006. The chemistry is undeniable. Rather or not the overall Nas album was classic or lackluster, if Premo contributed to the album you at least knew Premo was going to lace Nas with a banger. The records they did together after Illmatic were just as stellar, where some of the records are arguably top 10 all time Nas records. Songs like “I Gave You Power”, “Nas Is Like”, “Come Get Me”, and “2nd Childhood” were all standout tracks on the Nas albums in which they were featured. Nas and Premo together is a perfect marriage of bars, concepts, and beats. You are guaranteed to get elite lyricism and song-making performances from Nas, with DJ Premier providing the perfect sonics and complimentary production. Each artist has created classics without each other and with each other. Perhaps this is a reason that rap fans have not given up on the long overdue collabo between the two. The duo has literally never let us down. The intrigue of what new material the two could create together today is too big of a question mark to leave unanswered.","_key":"9e344c903eed0"}],"_type":"block","style":"normal"},{"style":"normal","_key":"f6d7468bc09d","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"“Superhero material rap star status/Premier album still might happen…” – Nas on “30” from King’s Disease III (2022)","_key":"df176a4a2df90"}],"_type":"block"},{"_type":"image","_key":"9eb4724723ee","asset":{"_ref":"image-d795b332e300d34d89a623767c4abe2cb191ad5f-689x415-png","_type":"reference"}},{"style":"normal","_key":"cbd4904b1b23","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Nas is no stranger to reaching for new heights with his music. Nas has worked with the biggest producers in hip-hop, such as Trackmasters, Dr. Dre, Kanye West, Neptunes, and Timbaland. But every now and then, Nas has full circle moments by revisiting his signature sound. With Nas chasing a different sound with Hit-Boy the past couple of years, the time seems right for Nas to return to the dungeons of rap. Neither Nas nor DJ Premier have anything left to prove. However, that does not mean they cannot challenge themselves artistically to give the fans what they want while still creating a new sound. I would not expect a 2024 Nas/DJ Premier record to sound like a record they did in 1994. Most fans would be interested in hearing how DJ Premier could update his trademark boom bap sound to today’s musical climate while still being able to make a great Nas record. The complimentary vibe between Nas and Premier is the biggest question mark for a potential album. Nas and Premo have a track record of being able to bring the best out of each other. With slumping sales in general, growing dysfunctional behavior from social media antics by rappers, and a lack of quality musical output, Nas and DJ Premier could be the ones to swoop in and save the day 30 years after they came together to create arguably the greatest rap album in the 90s.","_key":"ddeffc9c724e0"}],"_type":"block"},{"_key":"90acdbea4b68","markDefs":[],"children":[{"marks":[],"text":"Hip-hop is no longer a young man’s game. Yes, hip hop is still for the most part dominated by youthful energy. However, the genre just celebrated it’s 50th birthday and the fanbase has expanded to an older demographic. Those of us who were teenagers when Illmatic dropped are now in our forties. There are still a lot of us who love and listen to hip-hop. We grew up on Nas albums. We grew up on Gang Starr, Group Home, and Jeru Da Damaja albums. Nothing could be better than these two coming together after a long hiatus, especially for those of us that were raised off their music. A Nas/DJ Premier EP or LP could be the equivalent of visiting a childhood friend for the first time in years and the two of you picking up right where you left off like you never skipped a beat. We have been deprived of the two working together for far too long. Nas and Premier need to come together for one last time for the culture. Can you imagine the excitement for us “old heads” if Nas or Premo announced tomorrow they were in the studio together? Social media would be on fire for a segment of hip hop culture. Hip hop podcasts would be set ablaze. The expectation and predictions for this album would generate endless content. The album could potentially give the rap game a jolt of energy for the older cats who feel uninspired by today’s rap music while putting younger generations of rap listeners on to their brand of rap. The album could be an important benchmark in both of their careers.","_key":"fe196acca1ad0","_type":"span"}],"_type":"block","style":"normal"},{"_key":"62f279effd26","markDefs":[],"children":[{"text":"“Rocking with Preem is nothing short of amazing…” – Nas on “Beat Breaks” from DJ Premier’s Hip Hop 50: Vol. 1 EP (2022)","_key":"d83d805113670","_type":"span","marks":["strong"]}],"_type":"block","style":"normal"},{"_type":"image","_key":"49b51a6d7859","asset":{"_ref":"image-719fdc10cf29fb8e0443b870268e62ddab5d8f39-750x422-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Folks, the album is coming. DJ Premier did the scratches on the ASAP Rocky featured “Wave Gods” off Nas's Magic album in late 2021. In the summer of 2022, Nas and Premo collaborated for the first time in years on a Hip-Hop 50 EP that DJ Premier made for Nas’s Mass Appeal records. Later that Fall, Nas hinted the album was still happening on King's Disease III…maybe. Late summer of 2023, Nas had a star-studded 50th birthday celebration where DJ Premier was in attendance. I could be reaching but I do not think all these recent occurrences are a coincidence. Instead, I believe those events are setting the stage for both artists finally giving the people what they want. I believe after the improbable run Nas had with Hit-Boy and 2024 marking the 30th anniversary for Hip Hop’s “bible”, the timing is perfect for the album to come out. Nas is still rapping at an elite level. Premier has continued to make music, most notably collaborating with Busta, Griselda, and Snoop in recent years. I am hoping we get a Nas and DJ Premier album with nine to twelve songs on them. Maybe feature AZ on a record as a symbolic ode to Illmatic. I would not be mad at a Griselda feature on the album either. I have to believe DJ Premier has spent the past decade or so stashing beats aside for Nas, just in case the album were to happen. DJ Premier knows how to make a Nas record that turns into a timeless piece of art. As we celebrate 30 years of Nas’s magnus opus, I am sincerely hoping we close out 2024 with a Nas and DJ Premier album. So, to both artists, the time is NOW. Do it for the culture!","_key":"ca24ecc5a6b00"}],"_type":"block","style":"normal","_key":"1e80c77ef210"}],"_createdAt":"2024-04-02T18:25:10Z","_id":"487fda30-a302-490d-936e-caa0e137652d","title":"Why the Nas and DJ Premier Album Needs to Happen","slug":{"current":"why-the-nas-and-dj-premier-album-needs-to-happen","_type":"slug"},"overview":"My Plea For the Long Overdue Collabo Between Nas and Premo","_rev":"8T5OYj1tNtjczJxF9fScgM","_type":"post"},{"_createdAt":"2024-02-26T21:27:04Z","_rev":"tfRoSlWFVUodOhRXA1cH4l","_type":"post","title":"Denis Villeneuve is a God: An Analysis of Dune Part Two ","content":[{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"9c1c38050f1b0"}],"_type":"block","style":"normal","_key":"a82afb185646"},{"_key":"9bf46e2ebf7e","asset":{"_ref":"image-8c13255d87d936a6114565758a3cd9465d9e6b8f-947x530-jpg","_type":"reference"},"_type":"image"},{"_key":"9873700b3b49","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Not even two months into 2024 and we already have a movie of the year contender. Do not read the title and think blasphemy. Over the past 10 years, Denis Villeneuve has emerged as one of the most brilliant filmmakers of our time, alongside Christopher Nolan. With cinematic masterpieces such as Prisoners, Sicario, Arrival, and Blade Runner 2049, Villeneuve has been behind some of the greatest films of the 21st century. His films leave no stone unturned in terms of delivering the ultimate movie theater experience. Acting, sound design, story, cinematography, score, visual effects, costume design, etc. Villeneuve’s current triumph is the sequel to 2021’s Dune Part One, with Dune Part Two. The three-year wait was well worth it as Part Two picks up where the previous film left off. With an all star cast, consisting of Timothée Chalamet, Zendaya, Rebecca Ferguson, Stellan Skarsgård, Javier Bardem, Josh Brolin, Austin Butler, Dave Bautista, Florence Pugh, and Christopher Walken, Villeneuve has ensembled the Hollywood equivalent of the 1992 Dream Team. While the more subdued previous film introduced us to the mythology surrounding the Dune franchise, the sequel builds upon this mythology as we follow the ascendance of our main character, Paul Atreides (played by Chalamet), in the ongoing feud between House Atreides and House Harkonnen over control of the spices found on the planet Arrakis. With House Atreides decimated in the first film at the hands of the evil, deceitful Baron Harkonnen, played by Skarsgård, Paul has joined the native inhabitants of Arakkis, the freman, to learn their ways.","_key":"2d7b3d51df0e0"}],"_type":"block","style":"normal"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Part Two is a blend of Star Wars, Game of Thrones, and Shakespearian plays. With help from the freman, Paul learns how to navigate the harsh terrains of the Arrakis desert. Slowly he starts to win over the freman, and the heart of one key freman, Chani played by Zendaya. The budding love story between Paul and Chani is the heart of Part Two as Chani takes Paul under her wing to teach him the ways of the freman. The dreams Paul had of Chani from Part One begin to come into fruition. The undeniable connection between the two characters is evident with every onscreen moment. Chani goes from viewing Paul as a little kid to falling desperately in love with him as his leadership skills are put to the test through the events of the film. You root for a happy ending for the pair, but ever present is a looming sense of doom that the never-ending quarrel from the Harkonnens will threaten this union.","_key":"d975607cdadc0"}],"_type":"block","style":"normal","_key":"4f33799b1f47"},{"style":"normal","_key":"b6540f27e99e","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Paul’s path to fulfilling the prophecy of leading the freman and last remnants of the House of Atreides to annihilate the Harkonnens starts by convincing the freman he is the Mahdi, the one who will lead them to paradise. The freman put Paul through a series of tests that measure Paul’s courage and judgement before they accept him as one of them. With some convincing from Stilgar, played by Bardem, the freman gradually become convinced that Paul is the Lisan al Gaib, or the off-world messiah. While Part One introduces you to the freman, Part Two plunges you into their world as you are introduced to new freman characters. An example is a freman fighter played by Rand Faris, who symbolized the faction of the freman who are skeptical of Paul being the Mahdi. Another notable new freman character is leader, Shishakli (played by Souheila Yacoub), in a gender-swapped role from the same character in the book.","_key":"1af5a671bf170"}],"_type":"block"},{"_type":"image","_key":"fb86049ecd0a","asset":{"_ref":"image-290a6b3847cce675f095df63b305ad196a1af18c-1200x628-webp","_type":"reference"}},{"style":"normal","_key":"bd0bb01c2772","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The freman are not the only new characters established in Part Two. We are finally introduced to the emperor alluded to in the previous film, better known as Emperor Shaddam IV (played by Walken). In Part Two, through the emperor and his daughter, Princess Irulan (played by Pugh), their alliance with the Harkonnens that led to the massacre of the House of Atreides in Part One is unraveled throughout the story. One of the scariest figures introduced in Part Two is Feyd-Rautha Harkonnen, played by Austin Butler. Feyd-Rautha is the youngest nephew to Baron and is described in the film as a pure psychopath. Feyd-Rautha kills without any sort of emotion and on a whim, heightening the suspense of each scene in which his character appears due to his deadly unpredictability. One last newcomer to the Villeneuve Dune franchise is Léa Seydoux, who plays another Bene Gesserit, Lady Margot, a character close to the emperor. Lady Margot plays a small but crucial role in Part Two as she exerts her control and influence over the Harkonnens from the shadows. Rather it is the returning stars or the newcomers, the acting is stellar across the board from the entire cast, outside of Dave Bautista who spends the majority of his screentime frantically screaming at his soldiers. Under Villeneuve’s direction, each character is fleshed out as you understand their motivations that drive the story and intensifies the more suspenseful moments in the film. Each character plays their role perfectly, rather it be incredibly menacing like Feyd-Rautha, or Paul and Chani being completely believable as a young couple enamored with each other in each scene with their electric chemistry, making the actors in Part Two one of the best ensemble casts in recent memory.","_key":"a6522c0a183a0"}],"_type":"block"},{"markDefs":[],"children":[{"marks":[],"text":"Even more impressive than the entertainment of the film are the technical aspects of Part Two. Villeneuve and cinematographer, Greig Fraser (Rogue One, Vice, The Batman), reunite from the first film to provide some of the most beautifully shot scenes you will ever witness in a motion picture. Each movie frame is rich with intricate detail. Legendary composer, Hans Zimmer, creates another memorable score for the film that is both beautiful and haunting given the action taking place within each scene. The visual effects are so good in this film that you can barely tell if there are CGI effects or green screen. Arrakis and the war that takes place on the planet look and feel real, even though it is obvious a fictional place with fictional events. Villeneuve effortlessly blends practical and special effects the way Spielberg used to in the 80’s and 90’s. The scope of the film is immense with grandiose wide shots of the desert and the Harkonnen army marching (reminiscent of Nazi rallies). The immersive sound design places the audience directly amid the action during the war set pieces.","_key":"df36e105e5fb0","_type":"span"}],"_type":"block","style":"normal","_key":"7d63d760793a"},{"asset":{"_type":"reference","_ref":"image-4aac422555eb971e9028735f73f11233c3d8bf62-1600x900-jpg"},"_type":"image","_key":"1280532fbc46"},{"style":"normal","_key":"a08a21e0f12d","markDefs":[],"children":[{"text":"One word best describes Part Two: escalation. Escalation in terms of the depth of the characters, the mythology, the action, and the stakes. Even in the way the movie is shot, with Villeneuve shooting the entire film in IMAX to capture the massive scale of the story. Villeneuve’s sequel perfectly builds upon the first film where the world of Dune was set up. Part Two serves as a revenge tale as Paul embarks on a quest to avenge the death of his father and his people as the conflict with the Harkonnens continues to mount. With this surge in the centuries-old dispute, Paul undergoes trials and tribulations in his quest to convince himself and the freman he is this messiah-like figure that will become a great leader. Chalamet takes his character to new places emotionally as this escalating feud takes its toll mentally on him, which is a part of his character’s growth into becoming the leader he is destined to be. While his growth may feel somewhat rushed, Chalamet’s superb acting sells his character’s evolution as a leadership figure amongst the freman in moving scenes where he delivers William Wallace-like speeches. Compared to the previous film, Part Two showcases more dazzling, but thoughtful action sequences that contribute to Paul’s character development.","_key":"087a8bda28fd0","_type":"span","marks":[]}],"_type":"block"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Dune Part Two is a modern-day movie treasure. Not since Spider-Man: No Way Home have I experienced such a spirited crowd reaction. The movie theater would explode with laughter during the funny moments, mostly provided by Bardem’s Stilgar character, as well as gasped and clapped during the climatic battle sequences. The movie is a complete movie delivering thrills, chills, laughter, fright, and sadness, running the complete gambit across the emotional spectrum. For the most part, the cast plays their roles perfectly, although there were certain characters you would have liked more screen time with, such as Feyd-Rautha or the emperor. Villeneuve covers all the bases as the characters play a high stakes game of chess over control of the spices in Arrakis. You will need to see the previous film to fully understand what is going on with this film. Villeneuve’s attention to detail in almost every shot is mesmerizing. He has managed to make a super-nerdy sci-fi film that can be enjoyed by anyone. Villeneuve has proven himself as an innovative storyteller by focusing on strong character progression with a thoughtful, well-written script. Part Two is a movie that needs to be seen on the big screen, particularly in IMAX. Using every aspect of film making to fully engross moviegoers in the world of Arrakis, Villeneuve proves why he is becoming one of the most important filmmakers of this generation. Much like the lead character, Paul Villeneuve has emerged as a leader in his own right and is on pace to become one of the greatest science fiction directors of all time.","_key":"8b28552224860"}],"_type":"block","style":"normal","_key":"4b4977c852fc"}],"slug":{"current":"denis-villeneuve-is-a-god-an-analysis-of-dune-part-two","_type":"slug"},"overview":"Dune Part Two Review","_id":"6ac42b5b-5f1c-4d92-a8ee-de5216f2540f","_updatedAt":"2024-04-04T02:07:47Z"},{"_rev":"jsoHbQe8xiL9GipEG4O9O4","_type":"post","_id":"4983c4db-266c-4257-bc78-6d9ba675ba30","slug":{"current":"is-eminem-rap-s-elvis","_type":"slug"},"_createdAt":"2024-02-05T00:04:22Z","title":"Is Eminem Rap’s Elvis?","_updatedAt":"2024-02-05T00:38:36Z","content":[{"_type":"block","style":"normal","_key":"7c405e33315f","markDefs":[],"children":[{"_key":"28230817252c0","_type":"span","marks":["strong"],"text":"By Jamil Weeks"}]},{"_type":"image","_key":"ec5fb7159a6d","asset":{"_ref":"image-50ec45205fddfac4c7c9d3fcd87c9f758a889f75-1080x600-jpg","_type":"reference"}},{"_key":"04d11733a39a","markDefs":[],"children":[{"text":"Eminem has a complicated history with hip hop culture. The complex dynamic between Marshall Mathers and hip hop centers around two things; the color of his skin and his dominance in rap music. Outside of the Beastie Boys, white people struggled to be taken serious as rap artists, due in large part to the rapid rise and fall of Vanilla Ice. White rappers were panned and written off for the the most part in the 80s and 90s. During Eminem’s humble beginnings in the underground Detroit rap circuit, Marshall grappled with the stigma attached to white rappers, forcing him to work twice as hard at his craft. From winning rap battle competitions to joining forces with New Jersey’s underground rap group, The Outsidaz, Eminem gradually started to chip away at that negative perception and gain respect. Once he got on the radar of Dr. Dre, who initially was shocked to discover Eminem was a white rapper, an alliance was formed that would shake up the hip hop industry. With Dr. Dre and Jimmy Iovine behind him, Eminem would go on to have one of the most successful careers in hip hop history. With that success came the scrutiny as the social construct of race that previously worked against him ironically became a driving force in his career. Comparisons to Elvis started to permeate internet forums and social media sites as many felt Eminem was undeserving of that success. Likening Eminem’s career to Elvis’s career, rather right or wrong, was a perception that overshadowed the success Eminem enjoyed. The decades long feud between Eminem and Benzino was rekindled once Eminem dissed him on “Doomsday Pt. 2” off the Lyrical Lemonade album. Benzino quickly returned fire with a freestyle and official diss record that has since set social media sites on fire. The name of that diss record? You guessed it, “Rap Elvis”. However, is this label fair to Eminem? Yes and no.","_key":"ae1c755b04ff0","_type":"span","marks":[]}],"_type":"block","style":"normal"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"The comparison to Elvis does make sense in a couple of ways. Like Elvis, Eminem grew up poor and gravitated to black music. The music that these artists created was ultimately inspired by black music artists. Both Elvis and Eminem would become dominating forces in music during their time. While Elvis was designated as The King of Rock and Roll, Eminem would be crowned as The Rap God. Both also had racist accusations hurled against them. With Elvis, it was rumored that Elvis told a reporter that the only thing black people could do for him was shine his shoes and buy his records. During the first round of the ongoing Eminem/Benzino saga, Benzino uncovered old Eminem songs from 1988 and 1993 where the rapper is heard dissing black women and referring to black people as “moon crickets”. While the validity of at least one of those records is in question of rather it was actually Eminem on the song, Eminem did acknowledge that he made the record dissing black women out of anger over a breakup as a foolish teenager. Both Elvis and Eminem have the perception of being culture vultures who took their style from black music and were able to reach heights their black peers could not because they were white artists. ","_key":"e7f8ca5903520"}],"_type":"block","style":"normal","_key":"7112bbf6e162"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"What is undeniably true about Eminem’s career is that being white has benefited his career. Like Tiger Woods attracted the attention of black people who normally would not tune in to watch PGA competitions on Sunday afternoons, Eminem attracted an audience of white fans who normally would not listen to hip hop. White audiences can relate to Eminem more than they can Biggie, Jay, Nas, or 2pac, who are artists that made music that reflected growing up in the inner cities. Factoring his relatability to this audience, the Elvis comparisons do have some merit. To Eminem’s credit, he did not take the Vanilla Ice route of fabricating his life to be more “street” or cosplaying blackness. Eminem’s music has drifted more towards a pop sound as he has evolved as an artist, which has also helped him maintain this mainstream audience. Elvis and Eminem were both artists who made music with black roots but commercially surpassed their influences. Eminem even compared himself to Elvis on a song “The King and I”, which was for the Elvis biopic movie soundtrack. The song serves as an anti-hater anthem where he defiantly shuns the vitriol from his critics. Acknowledging the privilege that Eminem has enjoyed in his success does not take away from his talent. Eminem played the hand he was dealt in life. His whiteness served as a hindrance to his career earlier on in his career. Eminem was able to flip that  in his favor and gain a sizeable fan base that has kept him blazing the charts for decades.","_key":"b06e0eb002a40"}],"_type":"block","style":"normal","_key":"8db2fc4f743e"},{"_type":"image","_key":"2f8b71e692ce","asset":{"_ref":"image-bfa0c91a9c325f0fd8014050d0bf66851db6a700-400x219-jpg","_type":"reference"}},{"style":"normal","_key":"86ce71d3ceca","markDefs":[],"children":[{"_type":"span","marks":[],"text":"However, there are also reasons why the Elvis comparison fails the smell test. Elvis was seen as a music artist who stole music and dance moves from black music artists of his day without giving those black artists their proper credit. Eminem has always given respect to those music artists that inspired his music. Eminem’s Grammys award winning speech is possibly the best acceptance speech ever given by a rapper. Marshall credited his influences by name, such as 2pac, Jay-Z, and Nas; but also mentioned heavily slept on rappers like Kurupt and Treach from Naughty By Nature. On “Til I Collapse” off The Eminem Show, he famously lists some of these same artists again. You can make the argument that Andre 3000 being regarded as a top five emcee started from Eminem name-dropping him on this song. Rather Eminem is acknowledging his influences in his music, in award winning speeches, or doing something as simple as wearing Public Enemy t-shirts during his concert performances, he seems to be very conscious of the Elvis analogies. Eminem has consistently exhibited a genuine respect and appreciation for hip hop as a culture. The influences of rappers like AZ or Masta Ace are just that. You can never accuse Eminem of stealing another rapper’s style. Eminem has developed his own unique style of rapping, experimenting with different flows and cadences that seem to mimic the rhythm of the beat he is rhyming over. Eminem’s style is distinct and the product of dedicated hard work.","_key":"b0d1a85976240"}],"_type":"block"},{"style":"normal","_key":"5b5a9cc3736a","markDefs":[],"children":[{"_type":"span","marks":[],"text":"I confess, I am not a huge fan of Eminem’s work. In fact, I did not even want to give him a chance when I first heard “My Name Is” back in 1999 because he was white. People who know me know that I am a big fan of lyricism. One of my college friends urged me to give The Slim Shady LP a chance. When I first heard that album, I was absolutely blown away by the bar work. Eminem was part of that late 90’s class of rappers that represented an evolution in rhyming, which also included Big Pun and Canibus. Off the strength of that album, I went back and listened to The Infinite EP. The Marshall Mathers LP solidified my fandom. Amid the deaths of Biggie and 2Pac, Jay-Z becoming more mainstream by the day, and Nas losing his way creatively, Eminem became my favorite rapper of that time. I was all aboard the Eminem bandwagon in the early 2000s. Where I feel Eminem lost me as a fan was around the time the underwhelming Encore came out. Since that time, Eminem has not put out an album I personally liked. Gone are the days when Dr. Dre and company, along with the Bass Brothers, were handling the production. Eminem’s music devolved into more of a generic, watered down pop sound for my taste. I would have a running joke for years about automatically checking out of hearing an Eminem song featuring Skylar Grey and being produced by Alex Da Kid. Fast forward to today, and it seems like Eminem seems more concerned with his rhyming technique than making a good song. For me it is disheartening hearing a rapper with his capabilities rhyming like a robot over down south trap beats. Even the albums I used to love in the late 90’s to early 2000s have not aged as well as other classics like Paid In Full, Death Certificate, or The Infamous. I feel funny as a forties plus year old driving down the street listening to a rapper with subject matter that involves decapitating nuns’ heads or killing his girlfriend and stuffing her body in the trunk. I still think Eminem is a highly talented rapper and I respect his lyrical skill set. Secretly, I am hoping he will drop an album without the gimmicks that I can gravitate towards again.","_key":"47d9fb683bad0"}],"_type":"block"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"While Eminem is not in my personal top 10, I cannot argue with anyone who places Eminem as one of the greats in the genre given his accomplishments. There is a respect I have for Eminem’s craft because of how gifted he is as a lyricist. Is Benzino correct in referring to Eminem as rap’s modern-day Elvis? The parallels between Eminem and Elvis are visible and cannot be denied. However, Eminem is his own man. Love his music or not, you cannot accuse Eminem of biting other rappers’ styles or not respecting the culture. Rather or not you are a fan of Eminem, you cannot deny Eminem puts a lot of work into the technical aspects of rapping. You can make the argument Eminem has played it safe by not battling some of the greatest emcees, but you also do not hear many of these greats call out Eminem either. The most respected lyricists in the game, from Rakim to J. Cole have all acknowledged Eminem’s greatness. While his catalog may be questionable to hardcore hip hop fans in comparison to his peers, Eminem has excelled in a genre through hard work and determination, with an assist from mainstream white America. In the end, the similarities between Eminem and Elvis are there but ultimately do not diminish his contributions to the genre. Eminem will be able to silence a lot of critics with an official rebuttal to Benzino’s “Rap Elvis”.","_key":"ed3f3e7c23b90"}],"_type":"block","style":"normal","_key":"3cfa5edcac67"}],"overview":"Analysis of Eminem and Elvis Comparison"},{"_rev":"hDpnd2eFf3yv7uDMFvdtPH","_id":"f96193ac-f461-489b-9e94-3cdab77636e3","title":"Benny’s Everybody Can’t Go: But Does Anyone Want to Go","_updatedAt":"2024-01-26T22:22:03Z","slug":{"current":"benny-s-everybody-can-t-go-but-does-anyone-want-to-go","_type":"slug"},"overview":"Everybody Can't Go Review","_createdAt":"2024-01-26T22:22:03Z","_type":"post","content":[{"markDefs":[],"children":[{"text":"By Jamil Weeks","_key":"dbfe62c3d1650","_type":"span","marks":["strong"]}],"_type":"block","style":"normal","_key":"d7294ed7e7c2"},{"_key":"642ab7c0b21c","asset":{"_ref":"image-b5d39bdd29f13e4b9e25b1b44209a9257dbf7e43-1000x1000-png","_type":"reference"},"_type":"image"},{"_key":"6fb5d02ef7ad","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Griselda has been one of the most powerful movements in the past 10 years. During that time, they have grown in popularity and visibility with each passing year. The only thing missing from the Griselda camp to place them in the same league as Death Row, Bad Boy, and Roc-a-Fella are hit records. Griselda created a signature underground sound but has made efforts in recent years to expand their sound methodically. Most notably was 2021’s Burden of Proof from Griselda’s golden child, Benny the Butcher. The album was produced entirely by Hit Boy and earned Benny his first gold plaque. The three headed monster, known as Benny, Conway the Machine, and Westside Gunn, grinded their way to major label deals to plant their Griselda flag in the music industry. In the case of Benny, he chose to sign with the iconic Def Jam Records to increase his audience and take his career to the next level. Benny stirred up interest in his project by promising his new album would be the hardest album released by Def Jam since DMX’s 1998 debut. Since that bold claim, Benny released a couple of singles that drew a mixed response from bloggers and fans familiar with his Griselda catalogue. Benny seemingly waged a war with “rap nerds” over the negative criticism received from the released singles like it was part of his album rollout. Still, the album remained one of the most anticipated albums of 2024. The wait is finally over. Benny’s Def Jam debut, Everybody Can’t Go, is finally here. The question remains if Benny is leading us to a place we want to go with this album.","_key":"fa742c5955ad0"}],"_type":"block","style":"normal"},{"children":[{"_type":"span","marks":[],"text":"The singles Benny dropped before the official release of the album drew ire from loyal Griselda fans. With Benny hyping up the album on social media and Def Jam sponsoring the project, many people were expecting energetic and impactful singles in the vein of Puff and Biggie’s “Victory”. What we got was the first single, \"Big Dog\", produced by The Alchemist. Many hip hop heads felt the feature sicario, Lil Wayne, overshadowed Benny on his own single, and they also loathed the hook. I felt it was a good choice for a first single to get people excited for the album. Unlike most critics, I loved the uncharacteristically up-tempo bounce vibe from The Alchemist instrumental and thought the hook was appropriate for a single with mainstream aspirations. The Hit Boy produced second single, “One Foot In”, did nothing to raise people’s expectations for the album. Despite Benny talking about balancing street life with rap career pursuits and featuring a verse from Stove God Cooks, the song failed to establish a firm buzz for Benny’s debut. Expectations for Benny’s album was too high for anything less than an instant classic song. The album was pushed back from late 2023 to January with Benny and company going back to the drawing board. Benny and Hit redeemed themselves in the eyes of rap listeners with “Bron”. Benny was in his bag rapping over a thunderous, bass-heavy Hit Boy beat while likening his ascendance in the rap game to Lebron James’s career. Suddenly, everything was right in the world again. With Hit Boy and The Alchemist going half and half on Benny’s debut, Benny had all the momentum leading up to his January 26 release.","_key":"37f6effd81740"}],"_type":"block","style":"normal","_key":"8c878001a90a","markDefs":[]},{"markDefs":[],"children":[{"_key":"0b83a354bb4d0","_type":"span","marks":[],"text":"Hit Boy is probably the most versatile producer in the game right now, and possibly ever. Hit is known for his capability of making beats for artists with virtually any style or rap. Following up on the success of Burden of Proof, Hit’s role was to show Benny’s adaptability over more commercial sounding songs. Outside of “Bron”, this formula is evident on “Back Again” where Benny recruits Snoop Dogg for the hook. The east/west connection showcases Benny’s artistry as he experiments with different types of flows making sure he hits those pockets like he was playing a game of pool. Another stellar Benny/Hit record is “Pillow Talk”. Featuring two impressive verses from Babyface Ray and Jadakiss, the song serves as a warning to watch who you place your trust in. Hit lends Benny some East Coast flavor on “How to Rap”, where Benny lays out an instructional guide for promising rappers on song making. For the most part, Benny and Hit carry their chemistry over from Burden of Proof for well-rounded production. However, Hit closes out Benny’s debut with the forgettable trap infused “Big Tymers”, which is Benny’s most blatant attempt to reach a younger demographic. The song sounds like a forced attempt to make a record catering to the radio. Nothing wrong with an artist trying new things if executed correctly. The Peezy-assisted song features Benny singing the hook and spitting with a more contemporary flow featuring the same tired themes of grinding and haters not wanting to see him do well. The only miss on the album, this Hit Boy track probably should have either been left on the cutting room floor or re-sequenced on the album instead so it would not be the last song you hear  on the album."}],"_type":"block","style":"normal","_key":"3efae9854739"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Benny is also no stranger to The Alchemist, as the pair have worked together on numerous occasions in the past. The Alchemist most notably co-produced half of Benny’s certified classic, Tana Talk 3. The Alchemist was tasked with keeping Benny’s day one fans fed by not letting that characteristic Griselda sound get lost in the Def Jam shuffle. Benny gets personal on the opening “Jermaine’s Graduation” where Benny reminisces on the struggles he overcame that shaped his inevitable success story. Fellow Buffalo native, Armanie Caesar, floats on the slowed-down bound record, “Buffalo Kitchen Club”. Armani brings some much needed energy for the ladies to groove with as both Armani and Benny rap with a rapid spit-fire cadence like many of today’s contemporary rappers. The arguable highlight of the album is “TMVTL” (Trust More Valuable Than Love). Here Benny flexes his storytelling talent as The Alchemist switches the beat after each verse. Another best song candidate is “Griselda Express” where Benny reunites with Gunn and Conway, bringing BSF affiliate, Rick Hyde, along for the ride. The posse cut features some the hardest verses on the album from Rick Hyde and Conway, who had the best verse on the song, with Gunn supplying the hook. The beat by Alchemist with the ear-piercing bassline and hard-hitting, thumping beat is a screwface-inducing record that will satisfy hardcore Griselda fans who are not particularly fond of the Hit Boy influence on the album. Would have made for a stronger closing track than “Big Tymers”.","_key":"44fc012289f60"}],"_type":"block","style":"normal","_key":"09ab8c955637"},{"children":[{"_type":"span","marks":[],"text":"The main problem with this album is Benny not showing enough growth on the album. Rather it be subject matter or failing to bring a sufficient amount of energy on certain songs, Everybody Can’t Go does not sound too much different from previous Benny albums. In a way, the album is a mash-up of the Tana Talk albums and Burden of Proof. You can make the argument that Benny’s previous efforts with both Hit and Alchemist were better than their work on this album. With this album being the first “baby” produced from the marriage between Benny and Def Jam, many were expecting more from both parties. Rather it be an album with a more grandiose sound or features from artists Benny would not normally collaborate with on a typical Griselda album, Def Jam did not seem up for the challenge with Benny's debut. News circulating that Def Jam was unable to clear records with Drake, Nas, and Scarface that were intended for this album left many people scratching their heads as to what advantage did Benny gain by signing to the legendary label. While the features on the album were great for the most part, Benny did not need Def Jam to score any of those cameos from those artists. Assumptions were that Def Jam was going to introduce Benny to an entire new demographic. As a result, the album undeservedly has an underwhelming quality to it despite there only being one lackluster song on the album. The album is nowhere near the quality of DMX’s It’s Dark and Hell Is Hot, and, thus, comes across as false advertising in terms or what was promised.","_key":"48bb6ff70e0e0"}],"_type":"block","style":"normal","_key":"902258ce006d","markDefs":[]},{"markDefs":[],"children":[{"marks":[],"text":"While Everybody Can’t Go may not deliver on the hype that was proclaimed prior to its release, the album is another solid entry into Benny’s outstanding discography. Seemingly a balance between mainstream and underground styles with production from Hit and ALC, the album offers something for everyone on the album while still maintaining a cohesion between the two worlds. Expectations may spoil the impact of the album, but in general the album should be well received by all who enjoy bars and beats. Lyrically Benny has not lost a step while still being able to flirt with different flows on certain records. Too early to tell if this will be a contender for album of the year, but so far it is a banger of an album to be released this early in 2024. The album has enough dope records to keep people coming back to listen over the next few months. Time will tell rather this album maintains its status as one of the year’s greats or gets buried underneath the avalanche of weekly releases as the year progresses. The sturdy enthusiasm surrounding the album should be enough to keep Benny’s name ringing on social media for the foreseeable future. Hopefully this will be the breakout album Benny was hoping for, and any success will propel him into a different space in the music industry. The album is a great introduction of Benny on Def Jam and will leave you wanting to know where Benny will go next, as well as who will be invited.","_key":"943c0132ce3f0","_type":"span"}],"_type":"block","style":"normal","_key":"4a2c8cc99677"}]},{"overview":"Is J. Cole Currently the Best Rapper Alive?","_type":"post","_id":"8a26496e-b807-4207-8d59-5938030c20d3","_createdAt":"2024-01-23T17:00:41Z","_rev":"hDpnd2eFf3yv7uDMFsr5Ar","title":"J. Cole: 2023’s MVP?","_updatedAt":"2024-01-23T19:04:00Z","content":[{"markDefs":[],"children":[{"marks":["strong"],"text":"By Jamil Weeks","_key":"069a5f36a9a70","_type":"span"}],"_type":"block","style":"normal","_key":"c0d02ca0278e"},{"_type":"image","_key":"30d827b5a8e7","asset":{"_ref":"image-170131ffe62dbff631ec505e6b68c8405ccf843c-1140x641-jpg","_type":"reference"}},{"children":[{"marks":[],"text":"J. Cole has come a long way. My admiration for his achievements is monumental. As someone who grew up in the same hometown of Fayetteville, NC (b.k.a. Fayettenam to its residents) and went to the same high school, Terry Sanford High, it makes me proud to see someone that came from where I came from make it out of the city to become a superstar in the rap game. What makes it so surreal is I grew up as a huge fan of hip hop culture, particularly the element of rap music, and wanted to be a rapper as a kid. I would stand in the mirror and rap my favorite songs, play the cassette tapes of my favorite rappers endlessly on my Walkman with the Super Bass feature turned all the way up, and even recorded my own rap \"album\" as a kid using a boombox, tape recorder with blank cassettes, and the instrumentals I would find on cassette singles I had in my possession. However, Jazzy J (the rap moniker I selected for myself) would not come close to reaching the heights Jermaine Cole has experienced. From platinum plaques to selling out Madison Square Garden and hosting his own Dreamville music festivals, J. Cole has built an impressive resume over the past 10 years. Cole's hard work has paid off as he has gained respect in both mainstream and underground circles. In 2023, he went on a vicious murder spree with guest features that would make a '97 Canibus jealous. In the past week, Complex Magazine crowned Fayetteville's own as the best rapper alive in 2023. Was this designation warranted, or were there other rappers more deserving of this title?","_key":"6730d226e0690","_type":"span"}],"_type":"block","style":"normal","_key":"7048a3e033d4","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"As biased as I am of J. Cole's career, I am also a student of the game. J. Cole did have an impressive list of high-profile features, from Burna Boy, Drake, Gucci Mane, Lil Durk, Lil Yachty, Summer Walker, and others. However, in social media circles (particularly \"hip hop twitter\"), the narrative began to circulate that J. Cole was ducking the \"real\" lyricists. Many feel emcees like Conway the Machine, Planet Asia, Ransom, RJ Payne, and Rome Streetz, would eat Cole alive like he was a plate from Fuller's Old-Fashioned BBQ. The general sentiment amongst the backpackers, rap nerds, and purists was that J. Cole did not want any linguistic smoke from this caliber of lyricists and was playing it safe by collaborating with the Lil Durks and Lil Yachtys. Fair assessment, but short sighted. J. Cole over his illustrious career has been featured on songs with Benny the Butcher, Jay Electronica, Jay-Z, Lil Wayne, Rapsody, Royce Da 5'9\", Talib Kweli, and Yasiin Bey. If he were trying to duck the competition, it would not make sense for him to collaborate with any of these respected artists. Not to mention sparring with some of the lyricists on his own Dreamville label, from Cozz to JID. J. Cole’s 2023 features seem to be an effort to drum up support for a potential highly anticipated album dropping this year by working with some of the hottest and buzzworthy mainstream rap artists more than ducking any competition. I personally would love for J. Cole to collaborate with more underground artists because it is my belief that J. Cole could very well go toe to toe with any rapper today, rather young or old.","_key":"a7b4879f17cd0"}],"_type":"block","style":"normal","_key":"ee6f59243eba"},{"children":[{"_type":"span","marks":[],"text":"Speaking of old, one of 2023's unsung heroes was rap veteran, Nas. 2023 was a great year for the iconic emcee. Nas sold out Madison Square Garden by himself, sold out Yankee Stadium in arguably the biggest Hip Hop 50 celebration arranged by his company (Mass Appeal Records) as a co-headliner, co-headlined a worldwide tour with Wu-Tang Clan, got placements on a couple movie soundtracks (Spider-Man Across the Spider-Verse and Transformers: Rise of the Beasts), made the cover of GQ Magazine, co-financed the first Hip Hop Grandmasters Awards recognizing Rakim and Scarface as the first inductees, dropped two albums (Magic 2 and Magic 3), was nominated for a Grammy for King's Disease 3, and was inducted into Billboard's Hip-Hop Hall of Fame. What is especially impressive about this was Nas had arguably the biggest year of any current rapper while celebrating his 50th birthday. Was Nas more deserving of being crowned best rapper alive in 2023? Well, there is definitely an argument there. However, you can argue J. Cole's features had more visibility. With Nas, as is the case with all the collaborations with Hit Boy,  he dropped his albums with little to no marketing. There were people literally unaware he had released albums this year. Complex Magazine is a mainstream media outlet, and Nas’s impressive run was largely ignored by most mainstream media. Fair or not, J. Cole's feature run was more talked about amongst the demographic that matters to mainstream media. Cole's verses on these features kept him at the forefront of conversations from that specific demographic. A publication like Complex Magazine is not in tune with the culture enough to acknowledge the impressive accomplishments of Nasir Jones. You can make the argument that Cole was the safe pick, as he is in that rare conversation of emcees that get respected in multiple rap circles. However, the admiration Cole does receive is proof of him being in the conversation as the best rapper alive last year, while not taking away from the stellar feats conquered by Nas in 2023.","_key":"50f119d04c5c0"}],"_type":"block","style":"normal","_key":"89e0591b7f21","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"J. Cole reaching these types of heights in his career is beyond impressive being that he comes from a city that has no built-in infrastructure for making it in the music business. Fayetteville is a small town that nobody would mistake for a big media market like Atlanta, Los Angeles, or New York City. You can make the argument that him being named Best Rapper Alive is the culmination of the extraordinary resume he has built since he first started blazing mixtapes at the tail end of the 2000s. All six of his albums have reached platinum status from the RIAA, with some of those albums containing no features. Cole has won awards for his music from Billboard, the Grammys, and Soul Train. Cole has worked with many of hip-hop’s biggest artists of the past 15 years and has held his own against them both as an artist and lyricist. Cole, along with Drake and Kendrick Lamar, have become the modern-day hip hop trinity taking over those spots from Biggie, Jay-Z, and Nas. The Dreamville festival in Raleigh, NC has featured some of today’s biggest artists sharing the same stage and has attracted a lot of business to the Triangle area in North Carolina. I have no doubt that J. Cole would be the undisputed contemporary GOAT if he was born in Brooklyn or Queens with all these achievements. Make no mistake about it, while it is up for debate, you cannot make the argument that J. Cole does not deserve to be named the best rapper alive given all that he has accomplished and where he comes from.","_key":"91e5813137280"}],"_type":"block","style":"normal","_key":"a43db2e70156"},{"children":[{"_type":"span","marks":[],"text":"Rather you agree with Complex Magazine or not, you cannot argue the ripple effect Cole created with his impressive verses on his 2023 features. For a mainstream magazine to recognize him as the best rapper alive with no albums released is just another bullet in the chamber to add to Cole’s legendary career. Sure, there are other artists, like Ransom or Nas, that dropped multiple projects last year that could be potential classics. While I am also a fan of those rappers and their work, I have to keep it real and confront the reality that those great albums did not move the needle of the culture outside of their fan base or hip hop circles. J. Cole has spent years putting in work to reach a level where he is recognized as one of the greats, rather you are young or an “old head”. Underground or mainstream. Cole has carved out his own empire and did it his own way. Cole is the posterchild for the regular dude. Cole is not draped in high end European fashion or engaging in materialistic gimmicks most rappers resort to for relevance. Instead, he dresses in outfits that could come off the rack of TJ Maxx. Cole also strays away from engaging in Wendy Williams-like tactics with celebrity gossip or exposing other artists through social media. Cole allows his music and his hard work ethic to speak for him. His career can serve as an example of how true talent and blood, sweat, and tears are enough to get you to where you want to be in the music industry. Cole has earned his spot. The only thing missing in his arsenal is that definitive classic album. Hopefully in 2024, he finally delivers that timeless album we all know he is capable of given his talent. Jermaine Cole may have let Nas down, but he made Fayetteville very proud!!","_key":"07035e2303cc0"}],"_type":"block","style":"normal","_key":"fa84ec1c06de","markDefs":[]}],"slug":{"current":"j-cole-2023-s-mvp","_type":"slug"}},{"_id":"fbfacff9-1ae7-41f4-be17-60635513f127","slug":{"_type":"slug","current":"the-kitchen-offers-an-emotional-entree-with-a-side-of-thrills"},"_rev":"W4s7NBhlG9obiTvybUJBpY","_type":"post","title":"The Kitchen Offers an Emotional Entrée with a Side of Thrills","_updatedAt":"2024-01-23T01:38:05Z","content":[{"_type":"block","style":"normal","_key":"e3f0ba837222","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"7b7ae5f40e2d0"}]},{"_type":"image","_key":"e0f7634065c7","asset":{"_ref":"image-50db02b2d9ca12a9603ef7d6405349e6e857b996-1000x563-jpg","_type":"reference"}},{"style":"normal","_key":"3389ea5e46a2","markDefs":[],"children":[{"marks":[],"text":"First time director, Daniel Kaluuya, joined forces with British filmmaker, Kibwe Tavares, for a desolate portrait of the future where the gap between the poor and rich is as wide as the Pacific Ocean in the new Netflix movie, The Kitchen. The bleak film centers around two characters, Izi and Benji, played by Kane Robinson and Jedaiah Bannerman, respectively. Taking place in London, the plot is about the poverty-stricken area of the city, known as “The Kitchen”. The Kitchen has become a haven for the unfortunate people who do not have the resources to relocate. However, the property has been purchased by wealthy companies and the Kitchen, thus, is deemed as private property. The people who still reside there do so illegally and at their own risks. Random police raids threaten to either separate family members from each other or for the residents to lose their lives with the brutal attacks from the police forces dispatched to the area. Through all the chaos and hopelessness, the two main characters manage to forge a bond. As Izi and Benji’s friendship grows stronger, the story reveals there is more to the nature of their relationship than meets the eye.","_key":"0b965ac157100","_type":"span"}],"_type":"block"},{"markDefs":[],"children":[{"_key":"8362d05ed4fb0","_type":"span","marks":[],"text":"The plot of the film is not a new story. The story of the loner who reluctantly takes in a youth only to gradually grow a soft spot for that child and be their protector. However, in The Kitchen, Robinson and Bannerman really sell the father/son dynamic in every scene together. With Izi, Robinson does a masterful job at depicting the internal conflict within himself. On one hand he wants nothing to do with being responsible for Benji. On the other hand, he cannot deny he has taken a liking to Benji and slowly starts to care for his well-being. The inner squabble he is feeling has him going back and forth between becoming the father figure Benji needs in his life to abandoning Benji in pursuit of his own selfish goals. As Benji battles his own internal demons, he ultimately comes to a crossroads where he must decide to either stay in the Kitchen to make sure Benji does not go down the wrong path or escape the neighborhood to better his own life."}],"_type":"block","style":"normal","_key":"071612b204c9"},{"children":[{"_type":"span","marks":[],"text":"When we are introduced to Benji, we learn he has suffered a tragedy with the passing of his mother. With this passing, Benji is seemingly left without an authority figure in his life to care for him. Almost simultaneously, he meets two older men on different trajectories in life. One is Izi, who works in a funeral home and is saving up enough money to move to a nicer place. The second is a character named Staples, played by Hope Ikpoku Jnr, who seduces a young Benji with the allure of street life. Like Izi, Benji is also wrestling in a mental tug-of-war of what direction to take in his life. While Benji is hot and cold in how he interacts with Benji, Staples comes across as solid taking Benji in, giving him food, offering companionship, and schooling him on how to survive. While feeding Benji propaganda on how to fight back against the system that is oppressing everyone in the Kitchen, Staples is the personification of a wolf in sheep’s clothing as he leads Benji down a self-destructive path. Bannerman’s masterful acting makes you feel tremendous empathy for Benji who desperately seeks a family in the wake of his mother’s demise.","_key":"f9f84a0b7cff0"}],"_type":"block","style":"normal","_key":"e1fa0eeb0c42","markDefs":[]},{"markDefs":[],"children":[{"text":"The Kitchen is an emotional rollercoaster as you experience the highs and lows of the friendship between Benji and Izi, as well as the residents of the Kitchen district. Community is a common theme in the movie. You see how the Kitchen residents come together to look out for each other forming their own counterculture. Despite being poor, they throw parties, dance in the street, make their own music, and develop their own rules that help them stay alive and fight back against the police force that is trying to force them out of the neighborhood one way or the other. Like Lord Kitchener, played by Ian Wright in the movie, states over the airwaves that keep the residents connected, the only way they can be defeated as a unit is individually. By sticking together, they are unstoppable. As the turmoil within their surroundings takes place, Lord Kitchener’s point is driven home as Izi and Benji form their own father/son-like bond and become like family. Despite them going their separate ways in certain moments in the story, they both are at their best when they are together taking care of each other. The two characters need each other, despite their denials at certain points in the film. Benji desperately wants Izi to assume that father position in his life despite Benji dabbling in the streets. Izi shuns assuming that role in Benji’s life despite his own life being incomplete in the absence of Benji. When the characters in the film go their own individual way, bad things happen in their community. The Kitchen serves as a critique of modern-day society, suggesting there is more power in unity.","_key":"e86b591b8cfe0","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"0facec18d5e6"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"The Kitchen was a fascinating watch. An intriguing look at what future society could look like coupled with the heartwarming and heartbreaking relationship between the two main characters makes The Kitchen a moving film. The open-ended conclusion makes you ponder the ultimate fate of Izi and Benji. The acting across the boards is superb and the story plunges you deep into the world of the Kitchen neighborhood. A movie that will make your eyes water from the powerful performances of the actors and the sentimental story. Both Kaluuya and Tavares doing a marvelous job of character development between the central characters as well as the supporting community members of the story. Clocking in at an hour and 47 minutes of runtime, the film is the perfect length with no filler in any of the scenes. The emotional scenes are well earned as the story properly cultivates the relationships between the characters in the film with an appropriate pacing in the storytelling. The film does not come across as “preachy” as the story takes precedent over the subtle messages on class warfare and poverty. While being a serious drama, the film does offer moments of levity with lighthearted comedic moments sprinkled throughout. As you get to know the residents, the police raids keep you in suspense of the outcomes of the characters. The Kitchen offers a little of everything on the menu, with drama as the main entrée and sci-fi, fantasy, and thriller as side dishes. The CGI compliments the story as the film seems like it was filmed in real locations instead of on a set with green screen. Check it out for yourself to find out why The Kitchen is a current top 10 most watched film on Netflix right now.","_key":"c1a86250b6e70"}],"_type":"block","style":"normal","_key":"3c1c596369c9"}],"overview":"The Kitchen Review","_createdAt":"2024-01-23T00:55:52Z"},{"overview":"Drake vs. Yasiin Bey","_id":"5391ea2b-645d-4a66-9d71-89b6573acdac","content":[{"markDefs":[],"children":[{"marks":[],"text":"By Jamil Weeks","_key":"5d05ca3fe3c40","_type":"span"}],"_type":"block","style":"normal","_key":"271c040dfab1"},{"_type":"image","_key":"4e3013ba51a7","asset":{"_ref":"image-74a3ea50088d83345f797e5ed076fb35ea69140d-3072x3072-jpg","_type":"reference"}},{"markDefs":[],"children":[{"marks":[],"text":"As hip hop culture rose to prominence in American society, rap music as a genre took center stage over the other elements of hip hop. With a primary focus on the MC in the wake of the legendary battle between Busy Bee and Kool Moe Dee at the iconic Harlem World back in 1981, the spotlight shifted from the DJ to the MC. Rap music gradually grew in popularity amongst the youth from the 80s to the 2000s, sprouting an endless sea of talented rappers across the United States and around the world. Soon rap music eventually replaced rock and pop as the number one genre of music. The success within the genre created a division amongst its participants based upon two opposing schools of thought; the purists vs. the capitalists. While the purists sought to preserve the culture against the culture vultures swooping in to cash in on the success of rap music, the capitalists aimed at bringing the genre to new heights by making it more accessible. The battle for the soul of hip hop music created an internal war waged between these two factions over the past few decades. The latest debate in this ongoing saga reared its ugly head once again with a recent interview by The Cutting Room Floor podcast on Yasiin Bey, a.k.a. Mos Def, when he spoke on popular Toronto rapper, Drake.","_key":"9a152ec6a2510","_type":"span"}],"_type":"block","style":"normal","_key":"9a4a3e9b6ee1"},{"_type":"block","style":"normal","_key":"5b40919e38f0","markDefs":[],"children":[{"_key":"9a38e068c5a20","_type":"span","marks":[],"text":"“Drake is pop to me. In the sense like, if I was at Target in Houston, and I heard a Drake song, it feels like a lot of his music is compatible with shopping.” – Yasiin Bey"}]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Ouch! The unflattering comment spewed from Yasiin represents the contempt some “purists” have for mainstream rap artists who they deem as ruining the culture. The implication from Yasiin, that has since sparked debates across social media platforms, is that the type of music pushed by artists like Drake is not authentic hip hop. Which begs the question, what is real hip hop?","_key":"a0c204cf6c980"}],"_type":"block","style":"normal","_key":"924d986354c7"},{"_type":"block","style":"normal","_key":"38e1a119f571","markDefs":[],"children":[{"_type":"span","marks":[],"text":"As someone who grew up in the 90s, “keeping it real” was a common phrase I heard uttered by rap artists and executives. Respect amongst rap peers hinged upon how truthful they depicted their lifestyles in their music. Real hip hop is a simple concept. If you are a rap artist and you represent who you are and where you come from, that would be categorized as real hip hop. Making music that comes from a genuine place within yourself and staying true to who you are as you find your own voice within the cluttered music industry is my definition of keeping it real. To many purists, Drake represents popularity over artistry. These traditionalists cringe at the painted nails, gold teeth, and watered down, formulaic music from Drake. Yasiin represents an artist with integrity who carries on the tradition of making music in the spirit of the truest essence of rap. A sincere lyricist that would not resort to using a team of ghost writers like Drake. The Brooklyn native is a highly respected lyricist in hip hop circles. The back and forth between the different viewpoints is an argument that dates back to a time when MC Hammer first came in the game. The purists attacked Hammer like a pack of rabid dogs back in the early 90s. Whenever a hip hop artist crosses over into mainstream pop territory, there is resistance from the hip hop community to protect the artform from outside influences. As Q-Tip eloquently stated on the iconic \"Check the Rhime\" in 1991, \"rap is not pop, if you call it that then stop\". Drake is the modern-day Hammer, as Yasiin reduced his music to elevator music.","_key":"c61b004fd1730"}]},{"markDefs":[],"children":[{"text":"Both artists, in their own way, have tried to elevate rap to a different level, but with two separate approaches. Yasiin was partially right. To “keep it real”, Drake does not make backpack music. Drake makes music for the clubs, stadiums, and the radio. It is pop music Drake is making. However, Drake's music ultimately falls under the ever-growing hip hop umbrella. Drake’s discography can best be described as hip hop music with pop tendencies. Drake is a respected spitter as well. Despite being known for using ghost writers, Drake himself has been a ghost writer for others. There was a time in hip hop where real hip hop meant making music for the streets, or “gangsta rap”. Drake benefited from having an artist like Kanye break that cycle where rappers could talk about things regular guys go through, such as relationships. In that respect, there is a certain level of authenticity to his music. Drake being able to make music that appeals to women has been a key ingredient in his success at climbing the charts. You can make an argument that Drake has helped keep hip hop relevant by consistently making music that gravitates to people who normally do not listen to hip hop. Drake’s approach to making music is the reason why he has become one of the biggest stars in music in the past decade, not just in rap.","_key":"8c843a3a806f0","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"21bc217a3ff0"},{"style":"normal","_key":"69124c2e8548","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The artist formally known as Mos Def has helped to elevate the genre as well, albeit on a smaller scale. Yasiin’s music can be described as more of an alternative form of conscious rap. As an artist, Yasiin has taken more artistic risks with his music than Drake. While this sort of artistic expression has not been rewarded on the charts to the degree of Drake’s music, there are some rap fans that regard some of his work as a solo artist and with Black Star as timeless music. Artists like Yasiin are the types of unsung heroes that push the envelope creatively, which helps to propel the music forward. Like Drake, Yasiin is a jack of all trades who can act and sing. Hailing from Brooklyn, Yasiin’s music has a more Boom Bap aesthetic in comparison to Drake’s more contemporary trap influences. While Drake may have a more straightforward approach to lyricism, Yasiin boasts a more complex rhyming style with poetic influences. His uncanny storytelling abilities and unique voice are why he is regarded as one of the greatest lyricists of the past couple of decades. Nobody would ever accuse Yasiin of selling out for record sales. Yasiin is seen as an innovative artist within the realm of conscious hip hop while Drake has recently been criticized for not evolving as an artist. Again, it comes down to the approach. Would you want the consistent sales or critical acclaim?","_key":"82dd74dfacd10"}],"_type":"block"},{"_type":"block","style":"normal","_key":"bfe1c8e97b19","markDefs":[],"children":[{"_key":"fdd6185d3d990","_type":"span","marks":[],"text":"The age-old argument in hip hop of rapper vs. MC can be applied to this Drake/Yasiin comparison. To many in hip hop, a rapper is an opportunist who raps to make money while an MC is a true artist who raps for the love of the art form. Would you rather be the mainstream rap star with the money and the fame or the respected lyricist with the respect and admiration? Ultimately it comes down to style. I will not lie; I am MUCH more of a Yasiin fan than a Drake fan because I am someone who appreciates the marriage of lyricism and art. In my view, Yasiin embodies the true spirit of hip hop, which is why he probably views Drake’s brand of music as microwave rap. However, there are others that share the opposite viewpoint from me. Maybe they do not want to hear music that inspires you to think or is bar heavy. Maybe they just want to listen to a song that makes you let loose and dance. To be able to consistently drop albums that chart at #1 is not an easy feat. While I may not be much of a Drake fan, I respect Drake as an artist and for doing his part to keep hip hop alive. Hip hop is highly competitive and sometimes that competition can be detrimental to the genre. There is enough room for both Drake and Yasiin to co-exist in the culture. Both are incredible talents, and both have made quality music."}]},{"children":[{"_key":"cb4b7a62c7d30","_type":"span","marks":[],"text":"Rap is a multifaceted genre of music. No matter what style of rap you prefer, at the end of the day it is all hip hop music. There is no style that is more “realer” than the other. I can understand where Yasiin is coming from given the type of music he makes. Drake is a superstar in music, but Yasiin REALLY does this. Anyone who has ever seen Yasiin perform live can attest to his talent. Yasiin is a true MC with his ability to move a crowd without the theatrics of a Drake stage show. Some would challenge Drake’s approach to making music. What risks has he taken as an artist? How did he innovate the game? Has he had a true influence or is he just riding the wave created by Kanye West? As mentioned before, there is a certain level of respect I have for Drake’s talent. While I somewhat agree with Yasiin’s point of view , I do appreciate the fact that Drake is not a studio gangster rapping about a lifestyle he never lived. You can criticize Drake for being a little too comfortable in his lane and not showing enough growth in his music. You may also share my opinion on his music and not be a fan of Drake at all. However, you cannot say he is not hip hop. If Drake is not hip hop, then neither is Missy Elliott or MC Hammer. Drake may not make groundbreaking classic records, but he has helped a ton of artists and opened doors by making the music more approachable. You may not like his music, but Drake is important to the genre. In 2023 when rap music was fading from the charts, Drake was one of the few rap artists keeping hip hop relevant in the mainstream with his successful For All the Dogs album. I appreciate good music, no matter what subgenre of rap music. Hip hop needs to be less divisive. Think about the possibilities if artists like Drake and Yasiin collaborated more often. You never know, that could be a good look for the culture. Salute to both Yasiin and Drake for their contributions to hip hop."}],"_type":"block","style":"normal","_key":"49204e11776a","markDefs":[]}],"_createdAt":"2024-01-15T01:40:45Z","_rev":"oUQO6AmlaW2C1litYZk6Fa","_type":"post","title":"What is Real Hip Hop?","_updatedAt":"2024-01-15T01:40:45Z","slug":{"current":"what-is-real-hip-hop","_type":"slug"}},{"_createdAt":"2023-12-28T20:35:04Z","_rev":"acH3dMfg20SqCsLv9BipQX","_id":"2795550c-27e7-4c40-abd6-c25723687d56","overview":"A Tribute to Griselda Records","_type":"post","title":"All Hail Big Griselda","_updatedAt":"2023-12-28T20:51:23Z","content":[{"markDefs":[],"children":[{"_key":"c30d3fa92ac00","_type":"span","marks":["strong"],"text":"By Jamil Weeks"}],"_type":"block","style":"normal","_key":"4427f0d9c4b1"},{"_type":"image","_key":"7ba3d8834ae1","asset":{"_ref":"image-0ca2c752290a34f673dfe12c6f94cae842365eb6-720x406-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Throughout the history of hip hop as a musical genre, there have been select crews/groups that have led powerful movements that defined a particular era in the game. In the 80s, there was the Juice Crew. In the 90s, the Wu-Tang Clan took the world by storm. In the 2000s, Dip Set bridged the gap between New York City and the South. In the 2010s, a Buffalo, New York trio took the underground by storm and continued the boom bap tradition created by the five boroughs. With their brand of gutter, dusty beats, Griselda became more than just a record label. These brothers gained a grassroots following that breathed new energy into the underground. Roc Marci is the godfather of the modern-day underground sound with his brand of psychedelic, 70s-infused records. Other notable underground legends, like Hus Kingpin and Planet Asia, also made key contributions to hip hop’s underground movement. However, Griselda picked up the ball in the mid-2010s to become the face of the underground. As the mainstream all but abandoned the vintage boom bap formula and became a haven for trap artists, Griselda kept the underground thriving while putting Buffalo on the map as a new headquarters for hip hop. Under the leadership of Westside Gunn, with Benny the Butcher and Conway the Machine being the flagship artists, Griselda has blossomed into a robust label for burgeoning lyricists. Some of today’s dopest spitters call Griselda home today, such as Armani Caesar, Boldy James, Estee Nack, Jay Worthy, Mach-Hommy, Rome Streetz, and Stove God Cooks. Griselda has been a major player in the past 10 years helping to carry the underground on their backs.","_key":"07a4950690050"}],"_type":"block","style":"normal","_key":"f51bb95ef890"},{"_key":"219f9ac41288","markDefs":[],"children":[{"text":"Westside Gunn and Conway have been making music going all the way back to the 2000s. However, for many of us, our official introduction to them was on Big Ghost Ltd’s, Griselda Ghost EP. Most people may remember Big Ghost from his blogging days where he had a parody Twitter account of Ghostface Killah. Around 2016, he took his talents in the musical arena, introducing many rap fans to artists like ANKHLEJOHN, CRIMEAPPLE, and Vic Spencer. Griselda Ghost was his first musical collaboration and proved to be a game changer. Like Wu-Tang, Griselda sounded like nothing out there and had a nostalgic, throwback sound to their music. For those individuals who championed that golden era 90s sound, Griselda kept their famished bellies fed. I spent the next couple of years going down a rabbit hole on platforms like Youtube listening to their music. Coincidentally, streaming becoming more prevalent in the digital age contributed to my binging of Griselda mixtapes. I started with Conway’s Reject 2, G.O.A.T., and The Blakk Tape. With in-house producers, Camouflage Monk and Daringer, Griselda created a sound that restored faith in a lot of rap fans who felt left behind by the current climate of hip hop. The fans who grew up on Kool G. Rap, Biggie, Jay-Z, Nas, Mobb Deep, Wu, Rakim, the LOX, Capone N Noreaga, Gangstarr, etc. Over the next few years, Griselda would relentlessly drop an onslaught of bar-heavy mixtapes and albums that would garner the attention from mainstream rappers, athletes, and entertainers.","_key":"237d572827350","_type":"span","marks":[]}],"_type":"block","style":"normal"},{"_key":"29259a5ab0bf","asset":{"_ref":"image-e8cd9e24d8c709cd2f0e104b243b1f96861018e6-3072x3072-jpg","_type":"reference"},"_type":"image"},{"style":"normal","_key":"e9f88cdc29ef","markDefs":[],"children":[{"text":"Griselda has amassed an exceptional body of work in recent years. However, there were three albums that solidified my Griselda fandom: Westside Gunn’s Flygod and Supreme Blientele and Benny’s Tana Talk 3. Many fans consider these three albums to be classics and are the benchmarks in the Griselda catalog. These albums did a couple of key things. For one, they established Gunn as a curator. Gunn became a highly sought after executive producer for up-and-coming artists following his work on these albums. Gunn may not be the most lyrically gifted artist in Griselda, but he has an uncanny ear for beats, introducing many of us to the likes of Conductor Williams, Denny LaFlare, and Sadhugold. Those three albums also catered to the 90s babies with beats from veteran producers like 9th Wonder, Pete Rock and The Alchemist. While most rappers began to distance themselves from that 90s sound, Griselda ran back towards those golden era producers, leading to future collaborations with DJ Premier, Large Professor, and Rza. These albums also helped establish Benny and Conway as two of the deadliest emcees of their era. For the past five years or so, Benny and Conway have consistently kept themselves in the conversation as being in the top five current rappers lists. Finally, these three albums brought the art back to the forefront of hip hop. From the album covers, to Griselda’s trademark sound, to the bars, Griselda’s influence began to permeate the mainstream. Suddenly, rappers started popping up with Griselda-like album covers. As the collective continued to pump out quality music, they started to get the co-sign from every major rap legend, from Jay-Z to Eminem to Nas. Just this past year, current elite mainstream rappers like Drake and J. Cole used that Griselda sound (thanks to Conductor and Alchemist) to gain momentum for their projects. Griselda’s art-first mantra was a refreshing departure from the business-first model of mainstream rap.","_key":"93574b808e320","_type":"span","marks":[]}],"_type":"block"},{"markDefs":[],"children":[{"marks":[],"text":"Rap legends from the 90s embraced Griselda as they ascended the success ladder. Before their sudden deaths, Prodigy and Sean Price were among the first rap vets to collaborate with Griselda. The unapologetic hardcore vibe of Griselda music gravitated rap veterans to the Griselda camp almost like a natural reflex. You can make the argument that Griselda helped breathe new life into the careers of many rap legends. Griselda carried that vintage hip hop torch that reinvigorated the boom bap aesthetic, creating a lane for new artists while simultaneously helping to extend the careers of rap veterans who mastered that sound. Griselda artists began to be featured on albums by Busta Rhymes, DMX, and Large Professor. The buzz circulating around the Griselda label grew so big that Eminem signed Gunn and Conway to Shady Records, while Jay-Z recruited them to Roc Nation to sign management deals with them. From co-signs to deals, Griselda gained the respect from your favorite rappers for not compromising the integrity of their music for the sake of sales.","_key":"915b818cfddc0","_type":"span"}],"_type":"block","style":"normal","_key":"818b73c9350b"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Under the Griselda regime, Buffalo has now become a hub for hip hop. The unofficial Griselda ally, El Camino, is a Buffalo artist who was featured on countless Griselda projects that he used to springboard his own rap career. The momentum Griselda achieved from consistently releasing quality music led to Benny and Conway landing their own labels, with B$F Records and Drumwork Music respectively, to extend the ever-growing Griselda Family tree. Benny and Conway used their labels to promote Buffalo artists, such as 7xvethegenius, Heem, Jae Skeese, and Rick Hyde. The B$F label exclusively featured production from the late great, DJ Shay, another Buffalo native. In addition to 7xvethegenius, Griselda promoted female artists just as much as their male counterparts. Outside of the trio, we were introduced to Keisha Plum, with her sinister brand of poetry. Griselda also featured frequent collaborations with Che Noir and signed Armani Caesar as the first lady of Griselda. Benny, Conway, and Gunn never forgot where they came from and put a big spotlight on the emerging talent from Buffalo. New York City was no longer the only city in the state of New York to be a major force in the game as rappers started popping up all over upstate New York, from Buffalo to Rochester to Syracuse.","_key":"33df36b32b8b0"}],"_type":"block","style":"normal","_key":"e039fcae5603"},{"markDefs":[],"children":[{"_key":"9055edcf688d0","_type":"span","marks":[],"text":"The success of Griselda can ultimately be measured in impact over sales. While they may not have scored that signature hit record or platinum plaque, you can argue that Griselda may have had the biggest influence in the game in the past five to 10 years. From rappers mimicking their signature style sonically to expanding their fan base from regionally to worldwide. Today, Griselda boasts three of today’s premier talents in Benny, Conway, and Rome. They have expanded their roster from Buffalo to Detroit and Los Angeles with the signings of Boldy and Jay Worthy. Their work with Sauce Walka will see them tap into the southern demographic. Gunn has even offered a departure in the boom bap style his music is known for with the experimental And Then You Pray For Me album that has dropped this year. Their hard work has paid off as Benny was able to sign a deal with the iconic Def Jam Records, which will be coming out first thing in 2024. There is a lot to still look forward to coming from the Griselda members. One cannot help but be happy for Gunn and company seeing how they rose out of the trenches to make history by officially turning Buffalo into fertile ground for cultivating new homegrown talent. The collective should be commended for spending decades building up their fan base methodically and organically. Like AZ eloquently stated, Griselda is destined to live the dream for all their peeps who never made it. R.I.P. to DJ Shay and Machine Gun Black. Long live Big Griselda!"}],"_type":"block","style":"normal","_key":"3dbe9e67e661"},{"_key":"12f3be701919","asset":{"_ref":"image-79f8462a9725571e313d502ac0b3fdddea44840f-2500x1646-png","_type":"reference"},"_type":"image"},{"children":[{"_type":"span","marks":[],"text":"","_key":"3552dd65230d"}],"_type":"block","style":"normal","_key":"ca4cc3b60071","markDefs":[]}],"slug":{"_type":"slug","current":"all-hail-big-griselda"}},{"_createdAt":"2023-12-28T00:39:12Z","_rev":"emBvI4m5emNGezC8Uvdv2F","_type":"post","_id":"af8244c9-771c-4ac6-9e8f-d653120ee5cc","title":"The Iron Claw: A Devastating Family Tale","overview":"The Iron Claw Review","_updatedAt":"2023-12-28T00:43:02Z","content":[{"children":[{"_key":"6e52a67d18830","_type":"span","marks":["strong"],"text":"By Jamil Weeks"}],"_type":"block","style":"normal","_key":"331d185a009d","markDefs":[]},{"asset":{"_type":"reference","_ref":"image-cfcc7841fc037333dbd7083a51cb558a3d2cb0ad-1200x675-jpg"},"_type":"image","_key":"c5c7c7179455"},{"style":"normal","_key":"9d4483165f36","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The Von Erich family name is well known in wrestling circles, particularly in Texas. The family of professional wrestlers developed the iconic submission move, known as the Iron Claw, which became the ultimate finishing move against their opponents. The Von Erich's gave everything to the sport of wrestling, to the detriment of many members of the family. Wrestling is not the only thing the family name is synonymous with by wrestling aficionados. Tragedy and the Von Erich's seem to go together as much as wrestling and spandex. So much that some in the family believe there is a curse on the family name. The rise and fall of this family is the subject of A24’s latest film, The Iron Claw. Starring Zac Effron as Kevin Von Erich, the movie centers around his character as he and his brothers join forces in the ring to take the wrestling world by storm. On their quest to have a member of their clan become the world heavyweight champion, the movie shows a series of unfortunate events that threaten to destroy the family from within. The Iron Claw is not just a wrestling movie, but more a film about family.","_key":"c77bdf49e54b0"}],"_type":"block"},{"style":"normal","_key":"6f34df07bed8","markDefs":[],"children":[{"marks":[],"text":"The Von Erich brothers are the heart of this film. In addition to Kevin, you have Kerry (played by Jeremy Allen White), David (played by Harris Dickinson), and Mike (played by Stanley Simons). Despite the turmoil surrounding the family, the bond between the brothers remains strong. You buy into the chemistry the brothers have with each other, which is a testament to the film’s director, Sean Durkin. No matter what disasters strike the family, the brothers always band together. When the family suffers through the bad times, the emotional gravity of those scenes weighs down like a ton of bricks. The first half of the film introduces us to the family and establishes the family dynamic. The patriarch of the family, Fritz (portrayed by Holt McCallany), rules the family with an iron fist. Fritz’ wife, Doris (played by Maura Tierney), is the meek mother who stays out of the way. As the brothers rise in the sport of wrestling, the connection between them remains tight. Despite the internal competition between them manufactured by Fritz, the love the brothers have for each other is truly touching. During the second half of the film when the family suffers through catastrophes one after the other, your heart breaks for them again and again.","_key":"5503f6137d900","_type":"span"}],"_type":"block"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"The downward spiral the Von Erich family takes originates from Fritz’s obsession with having a world wrestling champion in the family. Fritz, who was also a wrestler in his heyday, felt slighted by never getting his title shot. The bitterness inside him created a chip on his shoulder that drove him to push his sons to the limit. Fritz molded his sons with tough love so that they could overcome any obstacle in their path. While Fritz’s heart was in the right place, his misguided ambition for his sons’ future ultimately led to their downfall. Doris partially bears responsibility for the tragedies that rip the family apart. An example is when Doris turns a blind eye when Kevin asks for her to intervene when Fritz harshly pushes one of his brothers too hard. Fritz assumes a tyrannical role over his son’s lives, like J.K. Simmons’ character, Terence Fletcher, from Whiplash, since his behavior goes unchecked by Doris. On his quest to push his sons to greatness, Fritz inadvertently destroys the family from within.","_key":"7bba5acef8ae0"}],"_type":"block","style":"normal","_key":"c07012900b19"},{"_type":"block","style":"normal","_key":"69bbe06cea48","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The Iron Claw is arguably a top 10 movie of 2023, but the movie is not without its flaws. Despite the acting performances being top-notch across the boards, Aaron Dean Eisenberg’s portrayal of Ric Flair was by far the weakest. More of a nitpick but Eisenberg as Ric Flair was more of a caricature of Ric Flair than an accurate portrayal of the wrestling icon. Another weakness of the movie was how briskly the film moves with some of the events that are depicted. With so much story to tell, the movie seems to jump around more than one would hope. I would have liked to have seen some of the incidents that take place in the film rather than hear about them secondhand through dialogue. Last, there was a fifth brother that was not even in the film. Of course, filmmakers take certain liberties when making biopics, but to leave a family member out of the story felt like an odd choice. You would want these sorts of stories to be told as accurately as possible. Maybe the filmmakers felt it would have been too much for the audience to handle more tragedies of the poor Von Erich's. At the end of the day, these slight blemishes do not ruin the experience of watching this film.","_key":"00ac096755800"}]},{"_type":"block","style":"normal","_key":"3ddb7ec08d4c","markDefs":[],"children":[{"_type":"span","marks":[],"text":"There are times when you watch a movie, and it stays with you long after watching. The Iron Claw is truly one of those films. The final scene is a true gut punch that will make a person with the hardest of hearts struggle to not shed a tear. The movie is an examination of the price of fame and the lengths people will go through to realize a dream, whether that dream is their own or someone else’s. The movie is a moving, emotional journey of a family plagued with countless tragedies. The movie shows the dark side of wrestling as well as the American dream. Zac Effron is spectacular as Kevin in a standout role that should catapult his career as a serious actor. The immense pressure the brothers are faced with to realize their father’s dream is symbolized by their signature Iron Claw finishing move, which is when they place their hand on their opponent’s head and put all their strength into squeezing their skulls until their opponent taps out. The duress the father inflicts on his sons to be world heavyweight champion ultimately proves to be the brothers’ undoing. The Iron Claw is a MUST SEE.","_key":"32dd56d326a50"}]}],"slug":{"current":"the-iron-claw-a-devastating-family-tale","_type":"slug"}},{"slug":{"current":"2023-year-end-wrap-up","_type":"slug"},"overview":"The Winners of 2023","_rev":"emBvI4m5emNGezC8UiEgvt","_updatedAt":"2023-12-21T22:35:28Z","content":[{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"477a70e182ab0"}],"_type":"block","style":"normal","_key":"a8ff83a4a9bd"},{"_key":"e7b69ca54366","asset":{"_ref":"image-94b18fa7568eb7eca7f4ea3969783c2f7cf23251-3072x3072-jpg","_type":"reference"},"_type":"image"},{"_key":"9a8811f680d6","markDefs":[],"children":[{"_type":"span","marks":[],"text":"With hip hop turning 50 years old, 2023 proved to be a year most will not forget. The Hip Hop 50 celebrations were in abundance all over the country. A personal highlight of mine was going to The F.O.R.C.E. Tour, which was one of the best concerts I have ever attended. Despite the tributes and the nostalgia in the air, poor album sales seemed to put a dent in the celebratory mood of this year. A narrative that proved to be a consistent theme of 2023 was the waning state of hip hop as an artform. We even got the return of Andre 3000 with the polarizing instrumental album that threw most of us for a curveball. However, it was not all gloom and doom. There was some great music that came out this year that will be highlighted in this piece as the official soundtrack to 2023. A combination of veteran heavyweights and young contemporary talent that flooded the speakers with heavy rotation. These were the major players that kept my head nodding so much this year that I will need a neck brace going int 2024!","_key":"f565e7b5cde00"}],"_type":"block","style":"normal"},{"_type":"block","style":"normal","_key":"0688aa2c8914","markDefs":[],"children":[{"_type":"span","marks":[],"text":"","_key":"80e7d01c81d7"}]},{"_key":"0cd59f983dfc","markDefs":[],"children":[{"text":"Top 10 Albums of 2023 (In Alphabetical Order By Artist)","_key":"c7dcf93972c4","_type":"span","marks":["strong","underline"]}],"_type":"block","style":"normal"},{"markDefs":[],"children":[{"text":"AZ, Truth Be Told","_key":"0f1e89e8eaae0","_type":"span","marks":["strong"]}],"_type":"block","style":"normal","_key":"168e2fe453bf"},{"children":[{"_key":"8045912703050","_type":"span","marks":[],"text":"Rap used to be a young man’s game. With hip hop turning 50 this year, the continuing maturation of the genre has manifested in the top talent now belonging to the 30 plus crowd.AZ is the embodiment of this manifestation. With Truth Be Told, AZ teamed up with legendary beatmaker, Buckwild, as they both showed these young bucks they still have something to prove. Both underrated, AZ and Buckwild restored that old feeling for 90s hip hop heads with an updated but nostalgic sound reminiscent of the golden era of boom bap hip hop. The formula here is simple, dope rhymes over dope beats. MAN, does that formula still work. AZ rapped with the hunger of a young Anthony Cruz desperately trying to escape his grimy East New York dwelling. Truth Be Told was AZ’s testament about his career and what made him the is the legend he is today. The album serves as a reminder for those who may have forgotten how lyrically potent the Brooklyn native is when you place a mic in front of him. One of the standouts of 2023, Truth Be Told is a classic New York album from two artists who deserve more credit for their contributions."}],"_type":"block","style":"normal","_key":"a90dae64e40e","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Jay Worthy x Roc Marciano, Nothing Bigger Than the Program","_key":"19c27c8932360"}],"_type":"block","style":"normal","_key":"97ac336be08d"},{"style":"normal","_key":"db5b8f251150","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Roc Marciano, known for his coarse basslines and 70s funk-infused loops, is the modern-day godfather to the current underground sound. A double threat, Roc Marci qualifies himself as equally a skilled producer as he is an emcee. California and New York connect for Nothing Bigger Than the Program to continue the resurgent trend of rappers working with one producer for an entire album. Jay Worthy's easygoing style fits snugly over Roc Marci’s pimped out-style production. The production on the album can best be described as if Rza was born on the West Coast and addicted to LSD. West Coast prodigies like Ab-Soul, KoKane, and Kurupt lend their vocal contributions to this fluid album, as well as rap veterans like Bun B and Roc Marci, himself. The album boasts tales of paper chasing, but without being cliché in their approach. Nothing Bigger Than the Program is the perfect LA album, beautiful with a hint of lurking sinister menace. Roc Marci diversifies his portfolio as a producer while Jay Worthy adds another solid project to his budding underground rap career.","_key":"94f4cba443bd0"}],"_type":"block"},{"style":"normal","_key":"7d7f20b2f6e5","markDefs":[],"children":[{"text":"Killer Mike, MICHAEL","_key":"cc0e650604a70","_type":"span","marks":["strong"]}],"_type":"block"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Killer Mike dropped one of the most poignant, personal albums in hip hop this year. Blending hip hop with southern gospel, MICHAEL is the culmination of Killer Mike’s life summed up in one album. Killer focuses on the highs and lows he experienced on his journey to becoming the man he is today. Considered by many in hip hop to be the best rap album of 2023, MICHAEL is an emotional ride that serves as a motivator for the disenchanted people in this world that are down on their luck. The message is to never give up no matter what adversity you face. To realize the jewel you have inside you and to value your worth. Cool \u0026 Dre, DJ Paul, No I.D., and others contributed tailor-made instrumentals for Killer’s magnum opus. The album also features stellar guest features such as 2 Chainz, Andre 3000, Curren$y, EL-P, Jagged Edge, and Ty Dolla $ign. In a year that saw one of the premier southern artists drop a flute album, Killer Mike proved the South still has something to say.","_key":"e0bd40ed0b620"}],"_type":"block","style":"normal","_key":"fa25bdc1b577"},{"children":[{"text":"Larry June x The Alchemist, The Great Escape","_key":"951e08da9dd50","_type":"span","marks":["strong"]}],"_type":"block","style":"normal","_key":"0872fffe6aa0","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"When you think of California, you think of sunny skies, palm trees, and houses on hills. If you were to capture this sort of imagery in the form of sound, you would get The Great Escape. Larry June and The Alchemist teamed up together delivering smooth, laidback vibes perfect for riding in your car with the windows down on a balmy Spring or Summer afternoon. The Alchemist continues pumping out consistent bangers demonstrating why he is considered to be one of the most consistent producers in hip hop history. The sound of the album has a late 80s feel to it, consistent with the trademark sound Larry June is known for in his music. The Bay Area rapper continues his brand of aspirational raps for those individuals who are willing to grind their way to attaining the finer things in life. Getting assistance from other well-known Alchemist associates like Action Bronson, Boldy James, Curren$y, and Jay Worthy, as well as other hip hop heavyweights like Slum Village and Wiz Khalifa, The Great Escape’s replay value is immense. The chemistry between the two will leave you hoping to hear more from this Cali connection in the future.","_key":"2fc87d467b7a0"}],"_type":"block","style":"normal","_key":"7931b99bf60f"},{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Nas, Magic 2 \u0026 Magic 3","_key":"315ebef269b60"}],"_type":"block","style":"normal","_key":"c20809f7edb0"},{"children":[{"_type":"span","marks":[],"text":"Nas and Hit Boy teamed up again this year to offer us the final two chapters in their Magic series.These two albums mark the last time the dynamic duo will be working together on an entire album, at least for the foreseeable future. In mid-summer, Nas unexpectedly dropped Magic 2 seemingly out of nowhere. Met with mixed reviews at the time, Magic 2 was a departure from its boom bap predecessor, offering much more of a fun, playful trap music vibe than most had hoped. Since then, people have started to appreciate the album for what it is instead of what their expectations were for the album. Magic 2 was a nice warm-up to the finale, Magic 3. Nas and Hit Boy delivered a reflective and introspective album, proving why they are the best emcee/producer combo since Guru and DJ Premier. Magic 3 is arguably a top 5 Nas album and a potential classic in the making. It will be interesting to see how both albums age in the next five to ten years. The chemistry between Nas and Hit is so undeniable I suspect that Magic 2 and 3 will not be the last time we hear these two artists work together.","_key":"5cbfa2def4900"}],"_type":"block","style":"normal","_key":"1a52d77a9704","markDefs":[]},{"_key":"284b7027bd59","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Nick Grant, SUNDAY DINNER","_key":"edccdffd22c50"}],"_type":"block","style":"normal"},{"_type":"block","style":"normal","_key":"c4a04cb2145c","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Hailing straight from Walterboro, South Carolina, 2023 was a coming out party for Nick Grant. SUNDAY DINNER is a beautiful, soulful album combining thought-provoking bars over production with a strong southern influence. A fantastic blend of R\u0026B and hip hop with a melodic, modern-day sound, Nick Grant dropped an album that truly stands out from the other releases this year. Nick flames every beat with a blistering fury showing off his versatility in flows with heavy subject matter that does not overshadow the entertainment value of the album. In a year where rappers claim they lie in their music, Nick’s music seems to come from a genuine, honest place as he wears his heart on his sleeve through all 16 cuts on the album. SUNDAY DINNER is a fresh take on southern rap as Nick Grant carries on the tradition of the bar-heavy sound from the Carolinas. Nick Grant is an artist to be on the lookout for in the 2020s.","_key":"2c112ded09500"}]},{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Ransom x Nicholas Craven, Director’s Cut 4","_key":"43f5385b7c9e0"}],"_type":"block","style":"normal","_key":"659d31c700e4"},{"_key":"8fbcef6579fa","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Arguably one of the best duos of the 2020s is Ransom and Nicholas Craven. When these two get together, magic ensues. The fourth entry in their Director’s Cut series, their latest offering might be their best effort yet. Craven has an uncanny ability to provide the type of beats that put a spotlight on Ransom’s ferocious vocals with his soulful, drum-less loops. Ransom has emerged as this generation’s most gifted lyricists. One of the rare emcees that has never delivered a wack verse, Ransom is an exceptional talent that not only is a vicious wordsmith but has a commanding delivery that makes you feel the words he is spitting. Boasting features from Che Noir, Crooked I, Nick Grant, and Talib Kweli, DC4 is bar Heaven. Continuing the tradition of turning movie titles into song concepts, Ransom masterfully blends thought-provoking subject matter with an entertaining display of skill level. Even without the drums, each record on this album is a certified banger!","_key":"296208726ab10"}],"_type":"block","style":"normal"},{"markDefs":[],"children":[{"marks":["strong"],"text":"Rome Streetz, Noize Candy 5","_key":"d67b9c4311a30","_type":"span"}],"_type":"block","style":"normal","_key":"921bd5ca7664"},{"_type":"block","style":"normal","_key":"c01d3c4fd670","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Rome Streetz is one of those rising stars in the underground that can seem to do no wrong. Everything he touches is refreshing. His unbridled hunger and vigor continue with his latest in the Noize Candy series. With production from Conductor Williams, Wavy Da Ghawd, Sadhugold, Denny LaFlare, and others, Rome loaded another hollow tip in the clip to build on is his already impressive resume. Rome Streetz recruits Boldy James, Currensy, Joey BadA$$, Mafia Double Dee, and Rigz as features to trade bars with on the album but holds the rest of the records down for dolo. Rome put together a cohesive album with immaculate bar work. The New York emcee just might be the best of the new crop of hungry emcees. A dope lyricist that has shown the ability to make great songs. Noize Candy 5 was definitely a treat that sweetened ear drums in 2023.","_key":"5a5b04b0a29e0"}]},{"_type":"block","style":"normal","_key":"1a31c0698f15","markDefs":[],"children":[{"text":"Skyzoo \u0026 The Other Guys, The Mind of a Saint","_key":"6ece5728cd420","_type":"span","marks":["strong"]}]},{"markDefs":[],"children":[{"_key":"d9621a9c2e4a0","_type":"span","marks":[],"text":"One of the most slept on rappers in hip hop today is Skyzoo. Sky has quietly amassed one of the best discographies in the game over the course of his illustrious career. The year started off on a great note with the release of The Mind of a Saint. Drawing inspiration from the FX television show, Snowfall, Skyzoo teams up with producers, The Other Guys, for a conceptual album centered around the main character in the show, Franklin Saint.The album serves as an extension to the popular television show as Skyzoo assumes the role of Franklin narrating his own fictional life. With excerpts from the show sprinkled throughout the album, The Mind of a Saint is executed brilliantly. Sky’s verses add more context about the crack cocaine epidemic that transformed inner cities into war zones with escalating violence. Fans of Snowfall will certainly love this album as Sky builds upon the messages presented in the show about how young entrepreneurs used crack rock to climb the socioeconomic ladder. With references to the characters and storylines from Snowfall, this album is an unofficial soundtrack to the album that would make John Singleton smile with pride from Heaven. R.I.P. John Singleton."}],"_type":"block","style":"normal","_key":"f94450a4f6d5"},{"style":"normal","_key":"0d4182dbd326","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Honorable Mentions","_key":"8284dd59acfc0"}],"_type":"block"},{"style":"normal","_key":"26d906a57f83","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The following albums were in the conversation for top 10 contention but barely missed the cut. However, they are noteworthy enough to be mentioned and to be given a thorough listen, if you have not heard these albums already:","_key":"0157394196500"}],"_type":"block"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"*Apollo Brown x Planet Asia, Sardines","_key":"21f8d37950bc0"}],"_type":"block","style":"normal","_key":"f34d9703429b"},{"_type":"block","style":"normal","_key":"12e4a53c4697","markDefs":[],"children":[{"_type":"span","marks":[],"text":"*Jeezy, I Might Forgive… But I Don’t Forget","_key":"fcdf3b470062"}]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"*Paul Wall x Termanology, Start Finish Repeat","_key":"39ef483f749d0"}],"_type":"block","style":"normal","_key":"9f1156003faa"},{"style":"normal","_key":"4075de77b3ec","markDefs":[],"children":[{"_type":"span","marks":[],"text":"*RJ Payne, The Barber Shop (feat. C-Lance)","_key":"e26024216d030"}],"_type":"block"},{"_type":"block","style":"normal","_key":"da6cab3eb802","markDefs":[],"children":[{"_type":"span","marks":[],"text":"*Westside Gunn, And Then You Pray For Me","_key":"23d921d65fce0"}]},{"style":"normal","_key":"5da11ccfefd4","markDefs":[],"children":[{"_type":"span","marks":[],"text":"","_key":"627da3ee61ad0"}],"_type":"block"},{"_type":"block","style":"normal","_key":"e1244cf00233","markDefs":[],"children":[{"_key":"f35ffa7161c9","_type":"span","marks":["strong","underline"],"text":"Top 10 Producers (In Alphabetical Order By Producer)"}]},{"_type":"image","_key":"17894b245208","asset":{"_ref":"image-580271f2fa1a04889c6013471d5bcfc1660de6a1-3072x3072-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Apollo Brown","_key":"2a3deeabfed40"}],"_type":"block","style":"normal","_key":"639e025d0616"},{"markDefs":[],"children":[{"marks":[],"text":"An innovator of the independent hip hop movement, Apollo Brown joined forces with Planet Asia to deliver one of the year’s most underrated projects. Known for blending of East Coast and Midwest influences in his music, Apollo is consistently reliable for his quality production that immerses you in the world of the artist he builds his beats around.","_key":"fc9a4a74a4e10","_type":"span"}],"_type":"block","style":"normal","_key":"83a35d9ac94f"},{"style":"normal","_key":"9d959de63b93","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Buckwild","_key":"2a5f08be3e1d0"}],"_type":"block"},{"style":"normal","_key":"b3f8b1bdd8b4","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Arguably the most underrated producer in the game, Buckwild lent his noteworthy talents to AZ’s comeback record. With thunderous drums over gritty samples, Buckwild brought back that forgotten gritty New York sound prevalent in the 90s. The DITC architect is still a formidable force in the game.","_key":"5e1fee7604ac0"}],"_type":"block"},{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Cartune Beatz","_key":"93d21d991aa60"}],"_type":"block","style":"normal","_key":"04bf02fb4672"},{"markDefs":[],"children":[{"marks":[],"text":"Providing Lloyd Banks with some of the grimiest beats of his career, Cartune Beatz was the catalyst for Lloyd Banks return to hip hop over the past few years. His work on Banks’ COTI 3 and Halloween Havoc IV mixtape, as well as the collaborative Paul Wall and Termanology album, Cartune is a rising star from a production standpoint.","_key":"ed58e145d9080","_type":"span"}],"_type":"block","style":"normal","_key":"2a6bf5604f0e"},{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Conductor Williams","_key":"01ca15d951f90"}],"_type":"block","style":"normal","_key":"e7b5ade4a773"},{"style":"normal","_key":"72d8ecec88ab","markDefs":[],"children":[{"text":"With his filtered beats, Conductor has been a staple of the Griselda sound for the past few years.His work with the Griselda camp has not gone unnoticed as he gained mainstream exposure on Drake’s For All the Dogs album. He has also worked with Little Brother and Conway, in addition to putting out his own instrumental album.","_key":"82dc46e577a40","_type":"span","marks":[]}],"_type":"block"},{"_key":"167432f59c97","markDefs":[],"children":[{"text":"Hit Boy","_key":"d55d717ddb2c0","_type":"span","marks":["strong"]}],"_type":"block","style":"normal"},{"style":"normal","_key":"246f453efd16","markDefs":[],"children":[{"_key":"abb4394c5d810","_type":"span","marks":[],"text":"Probably the most versatile producer on this list, Hit Boy is a master of many styles. Putting out his own solo album flexing his range as a producer and his reach in the industry with Surf or Drown, Hit Boy has been one of the hardest working producers of recent years. Hit also produced albums for Nas and made history by putting out an album with his father, Big Hit."}],"_type":"block"},{"_type":"block","style":"normal","_key":"66fccec75e8c","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Nicholas Craven","_key":"e4ca51207acc0"}]},{"_key":"638b978a799a","markDefs":[],"children":[{"text":"The poster child for drum-less loops, Craven proves that style of production is highly effective when done right. His 2023 resume includes teaming up with lyrical juggernaut Ransom on multiple projects and working with Boldy James. Craven is part producer, part composer on wax.","_key":"7334e5b9ae2b0","_type":"span","marks":[]}],"_type":"block","style":"normal"},{"markDefs":[],"children":[{"_key":"2323897101b00","_type":"span","marks":["strong"],"text":"No I.D."}],"_type":"block","style":"normal","_key":"c8de7a63ffc8"},{"children":[{"text":"Providing the bulk of production on arguably the best rap album of the year, No I.D. helped to craft Killer Mike Grammy's-nominated album, MICHAEL. Known for his work with Common, Jay-Z, and Nas, his contributions to Killer Mike’s latest was one of the highlights of 2023 giving the ATL rapper the perfect canvas to bare his soul.","_key":"a10efbac1f0d0","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"3a660ab03ba8","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"PA Dre","_key":"b693e608fb80"}],"_type":"block","style":"normal","_key":"8aecee18fe87"},{"children":[{"_key":"a6dbd2ece4de","_type":"span","marks":[],"text":"Known for being the in-house producer for RJ Payne, PA Dre has done extensive work with RJ Payne and other underground talent, such as M.A.V. and A.P. Da Overlord. PA supplied beats for Payne's The Barber Shop, a project that showcased the growth of both artists.  "}],"_type":"block","style":"normal","_key":"13565d2d3679","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Roc Marciano","_key":"22f33f2264370"}],"_type":"block","style":"normal","_key":"a2f00bdcdf3c"},{"children":[{"_type":"span","marks":[],"text":"The Hempstead, Long lsland dual threat continues to impress as being one of the few producers that knows how to hold down an entire album. Known for his “dusty” underground sound, Roc Marci paired with Los Angeles rapper Jay Worthy in 2023 to deliver the type of head nodding, screwface-making production that made you feel like you caught a contact after listening to Nothing Bigger Than the Program.","_key":"5b9264aec2490"}],"_type":"block","style":"normal","_key":"5d556143bb6a","markDefs":[]},{"_type":"block","style":"normal","_key":"eb9422810b9a","markDefs":[],"children":[{"text":"The Alchemist","_key":"301271a409b50","_type":"span","marks":["strong"]}]},{"children":[{"_type":"span","marks":[],"text":"Alan the Chemist may be the hardest working man in show business.With stellar projects from himself, Earl Sweatshirt, and Larry June, The Alchemist shows no signs of slowing down. One of the few producers who works organically with rap artists he develops business relationships with, Alchemist has taken his career into his own hands to put out music on his own terms.","_key":"75f31e1e7c9b0"}],"_type":"block","style":"normal","_key":"7e0c00cbbb1a","markDefs":[]},{"_type":"block","style":"normal","_key":"2835e4b202e6","markDefs":[],"children":[{"_type":"span","marks":[],"text":"With the year drawing to a close, I can say 2023 was a stellar year for hip hop. Great music. Memorable shows. A lot to look forward to in 2024. With ASAP Rocky, Benny the Butcher, J. Cole, Juicy J, Kanye West \u0026 Ty Dolla Sign, Lil Wayne, Schoolboy Q, and TI all slated to drop new material next year, 2024 will be a very interesting year. 2024 marks the 30-year anniversary of classic albums like Illmatic, Ready to Die, and Southernplayalisticadillacmusik. Who knows, maybe the 30th anniversary of hip hop’s bible might inspire Nas to deliver the long-awaited collaborative album with DJ Premier. Maybe the backlash Jay-Z received from his absence from Hip Hop 50 celebrations will inspire him to drop another album. With the increasingly pessimistic view of the dwindling state of hip hop, I contend that hip hop is in a great place. There is something for everyone, no matter what demographic. The music highlighted in this article was the music that carried me through the hard times and that uplifted me through the good times. Hip hop is very much alive and thriving. Wishing all my viewers a Happy Holidays and prosperous 2024!","_key":"93e50f26ef040"}]},{"_key":"18c60b73b30c","markDefs":[],"children":[{"_key":"4b45d4745c6a0","_type":"span","marks":[],"text":""}],"_type":"block","style":"normal"}],"_createdAt":"2023-12-21T19:34:21Z","_type":"post","_id":"ac7014ac-dd5a-4c00-bb88-cdc3a28ddacc","title":"2023 Year End Wrap-Up"},{"_id":"407f59a0-9d5f-456a-9334-5d23fd45ae29","slug":{"_type":"slug","current":"leave-the-world-behind-brilliant-but-polarizing"},"_rev":"acH3dMfg20SqCsLv8jeCWv","_type":"post","title":"Leave the World Behind: Brilliant But Polarizing","_updatedAt":"2023-12-13T22:37:03Z","content":[{"style":"normal","_key":"ba423f1692fd","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"251bd34bed1c0"}],"_type":"block"},{"_type":"image","_key":"bcee334f9108","asset":{"_ref":"image-8e34dde778c085e462d71cdf7569b030eff2775d-1000x562-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"As the year draws to a close, Netflix is doing their best Santa cosplay by delivering a gift that has become the subject of social media chatter. The present in question is the Sam Esmail-helmed Leave the World Behind. With Barack and Michelle Obama being listed as producers of the film, this movie was already the subject of controversy upon arrival. Agenda-based critics of the movie have already slapped the “woke” tag on the film, which has alienated a segment of moviegoers from the jump. For the more casual moviegoer who likes their story and conclusion spoon-fed to them, the movie has also gained some pushback. Leave the World Behind is a social commentary wrapped inside an apocalyptic psychological thriller about an unexpected family getaway that slowly devolves into chaos. When watching the film, you need to go into the experience with the mindset of catching the subtle nuances of the acting performances and the hidden messages the filmmakers are trying to convey to their audience. Thus, the reason for the divided reception amongst those who have seen the film. A common criticism I have read online is how many find the ending to be abrupt and anti-climactic. Many people feel the ending cheated them out of a satisfying conclusion. I am not here to say those people are wrong in sharing this opinion. However, I fear those individuals may have missed the point of the film.","_key":"532d98a3238f0"}],"_type":"block","style":"normal","_key":"f4968e601226"},{"_key":"f9173df06794","markDefs":[],"children":[{"marks":[],"text":"Leave the World Behind follows a family as they look to literally leave the world behind. In one of the earlier scenes in the movie, Esmail has a scene that shows what could be considered as the modern-day family dynamic. The camera slowly pans over every family member in the vehicle as they make their way to their family getaway. The wife, played by Juila Roberts, as she talks on her smartphone. Her husband, portrayed by Ethan Hawke, as he fiddles with the touchscreen music player to find his favorite song. The kids in the back seat with their faces glued to their smartphones and tablets. Here you have a family that is supposed to be bonding as they spend quality time with each other but each one is too distracted by the technology of their choice. The scene is an example of how people have become overly reliant on technology to help us get through our day to day. As things begin to slowly unravel and the characters are deprived of different types of technology (phones, TV, Wi-Fi) they depend on daily, the film depicts just how clueless certain characters are. Ethan Hawke’s character gets lost trying to go down the street from their house rental without the aid of GPS. His daughter in the film, played by Farrah MacKenzie, is on the verge of depression now that she cannot watch the series finale to her favorite show, Friends. The characters in general seem to be helpless without communication. The story in part is just as much of an examination of how crippled our society would become without technology as it is a thriller about the end of the world.","_key":"eedd458d8b3d0","_type":"span"}],"_type":"block","style":"normal"},{"markDefs":[],"children":[{"marks":[],"text":"Another theme explored with the movie characters is human nature. The movie begins with Julia Roberts’ character, Amanda, boldly proclaiming, “I f***ing hate people”. Throughout the course of the movie, Amanda qualifies that statement in how she deals with two strangers who unexpectedly show up to their vacation rental in the middle of the night, who are portrayed by Mahershali Ali and Myha’la Herrold as a father/daughter pair. Her treatment of these two characters shows racial undertones and a general mistrust of most people. Amanda has a similar view of people as the Joker from The Dark Knight in that they both do not believe people are inherently good. In Amanda’s case, she believes we all live under an illusion where our preoccupation with technological devices masks the true nature of who people really are. With this line of thinking, the filmmakers seem to think that humans are our own worst enemies. A point that is driven home when you notice the difference in behavior between humans and animals. When the crisis in the movie intensifies, you see animals, like deer and flamingos, band together in big groups in response to the danger. In the case of our human characters, in most cases they turn on each other. The message is not entirely grim, as there are examples in the movie of certain human characters, who were once at odds with each other at one point, who end up coming to each other’s aid. In this capacity, the movie serves as a warning that if we do not put a check on how we treat each other that this behavior can ultimately be our own undoing.","_key":"d8f7432e61d10","_type":"span"}],"_type":"block","style":"normal","_key":"e905d09b9cfb"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"The spread of disinformation is also analyzed in the film. The confusion created by the characters not knowing what is happening or who the true enemy is adds to the mystery of the film that keeps the story compelling. The film points out that oftentimes the real enemy is staring at their own reflection in the mirror. Through the dissemination of conflicting information, that can result in a general distrust amongst people, which can lead to conflict. You see this often in politics today where our political system is partisan to the point where agendas get in the way of the real facts. In the movie, the characters start to unravel through the confusion of not knowing exactly what is going on. Drones are used to spread pamphlets in different cities to confuse people on who is attacking them. Is it the Iranians? The Chinese? Koreans? Russians? Are different countries teaming up on the United States? Or is it a more sinister plot. Again, the cautionary nature of the film serves as a reminder of how misinformation can be exploited to turn people against each other.","_key":"2f14b94b63240"}],"_type":"block","style":"normal","_key":"9979f2d5c98d"},{"style":"normal","_key":"c36e826e4e8f","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Whether you enjoyed the film or not, I personally found the premise of Leave the World Behind to be terrifying. What makes the film so scary is how believable it appears based on the current state of dysfunction in our society. The tribalistic nature of people has left many in a state where facts no longer matter. Dysfunction has become the new normal and lines are being drawn in the sand more than at any point in my lifetime. Leave the World Behind is a fictitious reflection of where our society can ultimately end up if we are not careful. Some people do not like how the movie leaves us with unanswered questions about the characters and their outcomes. In my opinion, that is what makes the film brilliant. The film is meant to spark endless debates and make up our own minds on whether the characters survive or not. Do not allow politics or ideological differences to hijack your viewing of this film.  Maybe this film is not for everyone, but I think the film has great replay value. You pick up on certain things you may have missed on a previous watch. There is so much symbolism and Easter eggs in the film that Leave the World Behind becomes a provocative rewatch. Reviews for the film are all over the place. People either feel it is a brilliant work of art or complete trash. At the end of the day, you should give the film a try and decide for yourself. When you do watch, do not leave your thinking caps behind.","_key":"c97efc949e530"}],"_type":"block"}],"overview":"Leave the World Behind Review","_createdAt":"2023-12-13T22:37:03Z"},{"_rev":"OWUi5DAdAq2EkYKY2h7h84","_type":"post","title":"Is AZ’s Latest the Truth or Cap?","slug":{"current":"is-az-s-latest-the-truth-or-cap","_type":"slug"},"overview":"Truth Be Told Review","_id":"48435162-2181-4a8a-8aaf-6591c4c22349","_updatedAt":"2023-12-03T22:28:06Z","content":[{"_type":"block","style":"normal","_key":"ee24784425ad","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"8393c1a191180"}]},{"_key":"1f4e26ad4f7a","asset":{"_ref":"image-f2219a6c271086fff71e1e373a0fa326fe258aeb-1200x1200-jpg","_type":"reference"},"_type":"image"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"AZ is one of hip hop’s unsung heroes. Securing a record deal off one classic verse on Nas’ classic debut, AZ has since quietly released an impressive body of work that speaks for itself. An artist who many within hip hop circles feel should garner more respect, AZ has resurfaced since the pandemic blessing the rap game with new music.  Following up on his follow-up to his underrated Doe or Die 2 from 2021, the East New York native teams up with the legendary and equally underappreciated, Buckwild, for Truth Be Told. The formula here is simple; dope rhymes over dope beats. Two masters of their craft doing what they know best and reminding the fickle rap audience who they are. Truth Be Told is a history lesson for those who wrote AZ off as a washed up rapper. AZ provides us his truth on his career, his upbringing, and what makes him the man he is today in a personal love letter to his fans. Buckwild provides AZ the perfect canvas to paint his vivid pictures with hard hitting drums over smooth melodies. You can feel the energy surging through AZ’s vocals on every track. AZ proves his flow is ageless and rhymes with a sharp delivery throughout the 28-minute runtime. No gimmicks or grandiose production on this album. Just bar work from a reinvigorated Anthony Cruz.","_key":"637d28d159400"}],"_type":"block","style":"normal","_key":"4770954ef742"},{"_type":"block","style":"normal","_key":"b95bd99b73a9","markDefs":[],"children":[{"_type":"span","marks":[],"text":"One thing is for sure, AZ is back to smack doubters in the face with his latest drop. Songs like “Reintroduction” and “Still Got It” boast AZ’s departure from his humble real-life tendencies with braggadocios rhymes. AZ makes the case for why you should address him as rap royalty laying out his illustrious career where he sparred with rap’s heavyweights on “One of the Greatest”. The record is a storytelling song summing up his ascension in the 90’s rap game reminiscent of Nas’ “Last Real N**** Alive” from God’s Son. The album's crown jewel is the first single, “The GOAT”, where Buckwild uses his signature drums over a beautiful sample of Bit ‘A Sweet’s “Speak Softly”, which Hit Boy also used on “Fever” off Magic 3. Truth Be Told is AZ’s resume on wax with records like “The GOAT”, impressively breaking down his career to the point where his claims to the throne do not seem so far-fetched. On his second single “This is Why”, AZ shows why he has been the flyest since 1994 with Buckwild supplying him with a slow tempo late 80s themed beat. AZ is definitely talking that talk with this album. ","_key":"b69894ab86830"}]},{"markDefs":[],"children":[{"marks":[],"text":"The album is not saturated with famous guest appearances. AZ holds this album down singlehandedly for most of the LP. However, the guest appearances are impressive. AZ trades ferocious bars with Pharoahe Monch on “Go Time” over an up-tempo Buckwild beat proving he does not shrivel to elite competition. AZ manages to hold his own against the lyrically murderous Pharoahe as if he has rediscovered the fountain of youth by channeling his trademark 90s flow. On “How We Get It”, AZ heads Uptown to recruit Fat Joe for a DITC reunion with Buckwild. A motivational record where the two rap veterans spit ambitious rhymes about attaining success while securing the bag. These rap legends took a back seat to Mumu Fresh, who is the highlight feature on the album. With a razor-sharp flow, Mumu gives the laidback Buckwild instrumental a verbal buck 50. For all the people complaining about the content of today’s female emcees, Mumu’s guest verse will transform that ice grill to a smile from ear to ear. As great as the guest features are on these songs, they do not overshadow AZ on his own records as AZ sounds as good as he ever has since his prime in the 90s rap scene. AZ's ability to hold his own against stellar competition proves why he is one of the greatest to ever touch the mic.","_key":"4af4a06840d50","_type":"span"}],"_type":"block","style":"normal","_key":"63d0e8c77090"},{"markDefs":[],"children":[{"marks":[],"text":"The production from Buckwild on Truth Be Told is NYC inspired. You close your eyes while listening to the beats and it transports you to the streets of Brooklyn. You can almost hear the horns honking on the busy streets or the subways sliding along the train tracks from destination to destination. The funky, boom bap infused beats are the soundtrack to AZ’s New York laden dialogue. The sample-heavy tracks laced with thunderous drums are kryptonite to rap enthusiasts who are smitten with the drum less loops that are prevalent in rap today. The nostalgic vibe on the production is the perfect sound for an introspective AZ reflecting on his career and the struggles he overcame in both the streets and the music industry to last 30 years in the game. Buckwild is also making a statement with this album proving that he is one of the best producers in the game, especially in New York City. For those of us that grew up on 90s rap, Truth Be Told sonically restores that feeling of growing up in the cassette tape era with AZ effortlessly spitting over DITC flavored beats.","_key":"03ab040572530","_type":"span"}],"_type":"block","style":"normal","_key":"3457d9fbf34f"},{"_key":"ed2f6733e48c","markDefs":[],"children":[{"marks":[],"text":"While Truth Be Told may not be an astronomical groundbreaking album, the album sparks nostalgia for hip hop heads who are “stuck in the 90s” and need a new fix. The only thing that would have made this album even better would have been appearances from one or all The Firm members. With AZ, Cormega, and Nas dropping albums in the past three years, one can only dream of a future collaboration with all three artists together, whether it be a song or even an EP. Truth Be Told proves true talent has no age limit. While Andre 3000 uses his as the reason for his stifled creativity, AZ’s pen overflows with venomous lyrics upon the pad with the hunger of an adolescent. While this album may not be as great as AZ’s definitive debut, it is an album that leaves you wanting to hear more from AZ in the future. AZ excels with the one producer format. The possibility of AZ doing another full length project with one producer, like The Alchemist or Havoc, or even going outside his comfort zone for a mainstream sound following in the footsteps of Nas and Hit Boy is something to anticipate in the future. For AZ fans, this is a must have album as the barrage of bars has high replay value capabilities. AZ proves Truth Be Told is indeed not cap.","_key":"1d96fb0df1b50","_type":"span"}],"_type":"block","style":"normal"}],"_createdAt":"2023-12-03T21:15:12Z"},{"overview":"An Analysis of Die Hard As A Holiday Film","_type":"post","title":"Die Hard Is NOT A Christmas Movie","_createdAt":"2023-11-29T06:04:20Z","_rev":"01fz37KtvhMj2e8zIUn3Rj","_id":"1cc1407a-7ac3-42ad-bbb5-8b1ce375cb90","_updatedAt":"2023-11-29T06:05:09Z","content":[{"_key":"10f123ec8c74","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"14a14310d32f0"}],"_type":"block","style":"normal"},{"_type":"image","_key":"1b3cc4214237","asset":{"_ref":"image-f44cab7fbf68f489f64cf08353091b51bdfdb8d0-1000x562-jpg","_type":"reference"}},{"_type":"block","style":"normal","_key":"4fb4bbc6bb9e","markDefs":[],"children":[{"marks":[],"text":"With Christmas around the corner, Americans across the country are beginning to partake in the annual holiday traditions. Christmas parties with ugly sweaters, family and friend gatherings, shopping, Christmas jingles, and, yes, holiday movies. I grew up on classic Christmas films like A Christmas Story, National Lampoon’s Christmas Vacation, How the Grinch Stole Christmas, and Scrooged. Watching films like these with family members is what gets most people in the Christmas spirit. Over the past decade or so, I have witnessed another timeless movie from my childhood mistakenly being categorized as a Christmas movie. The film in question is the John McTiernan directed action tour de force, Die Hard. I have often found it puzzling how each year this movie is increasingly becoming the centerpiece of Christmas festivities for many households. Die Hard is the new Miracle On 34th Street. As for myself, I have often clashed with people over the notion that Die Hard is a holiday film. Hundreds of heated debates later, I am here to set the record straight once and for all on why Die Hard is NOT a Christmas movie.","_key":"749f0fdee2c10","_type":"span"}]},{"children":[{"_type":"span","marks":[],"text":"A true Christmas flick has a story that centers directly around the Christmas season. The holiday drives the narrative of the story, rather it’s about dysfunctional or estranged family members coming together through the Christmas spirit or some sort of redemption for the protagonist directly linked to Christmas. In Die Hard, the movie happens to take place during Christmas. Die Hard is a movie that could have taken place during any holiday, whether it is July 4th or Thanksgiving. If you strip away all Christmas elements from the film and place it during another holiday, it is still essentially the same movie. A high octane action thriller about survival against insurmountable odds. Die Hard is a story about a cop who finds himself taking on an international terrorist organization single-handedly. The central story literally has nothing to do with Christmas. Christmas is merely window dressing in Die Hard. Yes, Christmas give the lead character, John McClane, a reason to visit his estranged wife, who is living on the opposite side of the country. Yes, there is a redemption for McClane as he ends up winning the love of his wife back in the end. However, the holiday spirit is not the focal point for McClane’s redemption. Instead, McClane’s vindication is the extreme lengths he is put through in his quest to save his wife from the terrorists. Die Hard is a movie about heroism in a high stakes game of durability and endurance, not involving themes revolving around a disillusioned, grumpy individual who finds the Christmas spirit.","_key":"7b12b8e568fe0"}],"_type":"block","style":"normal","_key":"537a44803453","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Most holiday films are marketed as such. Movie studios usually release these films around the time of year Thanksgiving and Christmas comes around. Makes sense to release a movie about Christmas DURING Christmas, right? You would think moviegoers would not flock to a holiday film in droves during the middle of the summer. Yet, Die Hard is a film that was released during the summer of 1988 on July 22, making it more of a summer blockbuster than a holiday film. Maybe the readers of the blog will consider this point splitting hairs, but what time of year a film is released says a lot of the initial intentions of the filmmakers to me. Christmas is the ultimate spending holiday. A true Christmas movie would most likely be timed to be released around the holidays to entice money-hungry advertisers for strategic product placement. Money is what drives Hollywood. The summer releases are usually big for comedy and action films. Die Hard may be a movie that has been adopted as a Christmas film, especially amongst younger audiences, but that does not necessarily mean it is a traditional Christmas film.","_key":"50e9e98220d70"}],"_type":"block","style":"normal","_key":"fd650ea1579f"},{"style":"normal","_key":"26d9a0a29580","markDefs":[],"children":[{"text":"A key aspect to most Christmas films is branding. Holiday films are typically family-oriented and wholesome. Die Hard is far from from that, depicting scenes of graphic and bloody violence, obscene language throughout, and drug use. McClane’s bloody, dirty, ripped up wife-beater has become iconic. By the end of the film in the climatic face off with the sleek villain, Hans Gruber, McClane is so bloody it almost looks like he was bathed in his own blood. I would imagine 20th Century Fox studio executives probably did not think this level of gore would be suitable for most families and, thus, why it was not marketed as a Christmas film. Every household is different, but I imagine there are many families with younger children who are not roasting marshmallows and drinking hot chocolate while watching Die Hard with their five-year-olds on Christmas Eve. Christmas films are meant to bring family members together to watch stories centered around tales of morality and absolution. They are not meant for watching movies with high death body counts where there are scenes showing people getting their brains blown out of the back of their skull. Generally, Christmas films are lighthearted, comforting, and, yes, cheesy. Die Hard is a no holds barred, intense cinematic experience that keeps you on the edge of your seat.","_key":"939edca865580","_type":"span","marks":[]}],"_type":"block"},{"markDefs":[],"children":[{"text":"In closing, I do acknowledge Die Hard does contain elements of a typical Christmas film. A holiday inspired original score by Michael Kamen in moments of the film, Christmas decorations in Nakatomi Plaza, and Christmas songs in the soundtrack. I get why people think of Die Hard as a holiday film. I stand with the people who, rightfully so, look at Die Hard as a film that happens to take place during Christmas instead of a traditional Christmas motion picture. Die Hard is a film where the story could take place during literally any time of the year and that would not change the essence of what this film truly is. McClane’s story arc literally has nothing to do with the Christmas spirit. Die Hard is more of a love story than a Christmas story. The lengths a man will go through to protect the woman he loves from danger. A summer action extravaganza whose legacy is measured in how it changed the way 80’s action film heroes looked and how movie villains in action films were treated. A film that should be regarded as a genre-defining all time great action film as opposed to a great holiday movie. I will maintain this position until my last day on this earth, and I suspect I will ultimately find myself on the winning side of that argument.  So to all the people who agree with this sentiment, in the words of the great John McClane, \"welcome to the party, pal!\"","_key":"85f9ce2090880","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"5992f5215b91"}],"slug":{"current":"die-hard-is-not-a-christmas-movie","_type":"slug"}},{"overview":"Ageism in Hip Hop","_updatedAt":"2023-11-22T19:49:31Z","content":[{"children":[{"marks":["strong"],"text":"By Jamil Weeks","_key":"ed94dbdb163c0","_type":"span"}],"_type":"block","style":"normal","_key":"e34340df16c3","markDefs":[]},{"_type":"image","_key":"64b0136ae7a3","asset":{"_ref":"image-093a8546190e0ade07da71f7b1588498077c7c6b-550x396-jpg","_type":"reference"}},{"markDefs":[],"children":[{"marks":[],"text":"“So age don’t count in the booth, when your flow stays submerged in the fountain of youth” – Rakim from “Classic”","_key":"039f29737b930","_type":"span"}],"_type":"block","style":"normal","_key":"4463072311b0"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"With the release of a surprise album from Andre 3000, twitter fingers have lit up social media platforms. If you were like me a couple of days ago, waking up to news of a new Andre 3000 album was like being a child waking up on Christmas morning to presents under the tree. Rap fans have been clamoring for a solo rap project from Andre since Outkast broke up 17 years ago. Before the release of his latest experimental album, we were treated to glimpses of Andre’s brilliance through his many features. These blistering cameos on his contemporaries’ albums left people to speculate on a full album that many feel could have classic potential. Once news began to circulate that Blue Sun was not a rap album, but instead an instrumental album with no vocals, disappointment seized me like the IRS on a broke 90’s rapper. Then, frustration kicked in upon reading his justification for not making a rap album.","_key":"8679f5c6a4ea0"}],"_type":"block","style":"normal","_key":"f15266155499"},{"children":[{"_key":"9f2781bbb8410","_type":"span","marks":[],"text":"“I’m 48 years old. And not to say that age is a thing that dictates what you rap about, but in a way it does. And things that happen in my life, like, what are you talking about? ‘I got to go get a colonoscopy.’ What are you rapping about? ‘My eyesight is going bad.’ You can find cool ways to say it, but….” – Andre 3000, from GQ Magazine (2023)"}],"_type":"block","style":"normal","_key":"381bb8eed44e","markDefs":[]},{"_type":"block","style":"normal","_key":"62a8ff1d8b72","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Andre is no stranger to using age as one of the reasons he has hung up the mic. I get it. Hip hop traditionally has been a young man’s game driven and dictated by young energy. However, in 2023 hip hop as a culture turned 50 years old. There are many old heads, like me, who have literally grown up with rap music their entire lives. I was born in 1979, the same year the first rap single “Rapper’s Delight” was released by The Sugar Hill Gang. As hip hop has gradually taken over the mainstream throughout the decades since its inception, there has been an audience that has grown with the music. Fast forward to today, there is a market for the 30+ age bracket that still will fork out their money for albums, concert tickets, and merchandise. Veteran rappers like 50 Cent, Nas, and Wu-Tang Clan are selling out shows in big venues domestically and internationally. The last 10 years have seen an increase in the output of music from rappers in their 30s, 40s, and 50s. When Andre uses age as an excuse not to make another rap album, it does not pass the smell test.","_key":"fce1838fe4390"}]},{"_key":"cdfa741219a5","asset":{"_ref":"image-90b1487e8ea4edcc68e9557696c6c92b350b7817-828x462-jpg","_type":"reference"},"_type":"image"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"When Andre claims he does not know what to rap about at his age, I think about what we have witnessed with Nas and Hit-Boy for the past three years. Since 2020, Nas has released six albums between the ages of 47 to 50. Nas embraced his elder statesman role on those albums, looking to bridge the gap between the old school influence and contemporary styles. The subject matter ranged from health, nostalgia, politics, relationships, finances, etc. A wide range of topics were covered in those six albums. ","_key":"2828a2e934e00"}],"_type":"block","style":"normal","_key":"06d9779889f6"},{"style":"normal","_key":"91bd37d702e5","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Inspiration is all around us with recent worldly events. Rather it’s police brutality, dysfunctional politics, the future of AI, emerging wars in the Middle East, inflation, rise in crime, homelessness, opioid crisis, political correctness, etc. When you hear Andre on his features, it is hard to fathom this is a man who cannot find anything substantial to rhyme about with his brilliant mind. Especially puzzling since Andre has been one of the leading innovators in creativity from both an artistic and fashion standpoint in hip hop. Neither Andre nor Nas NEEDS to release an album. They are both legends who have made major contributions to the game. In the case of Nas, he seems to be in a place where he really enjoys making music after finding chemistry with Hit-Boy and being able to independently release music on his label, Mass Appeal. Andre 3000 does not seem to have that passion or infrastructure set up where he would enjoy making another rap album. So why use age as an excuse when one of his peers has proven you can be an older artist and still release quality music? Rappers like AZ, Billy Danze, Ransom, Griselda, Kool G. Rap, and others have proven older rappers are capable of still producing a quality product.","_key":"7cb887fafb2e"}],"_type":"block"},{"_type":"block","style":"normal","_key":"de9260b1b597","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Rap music is the only genre that puts a ceiling on the careers of artists based on age. Musicians from other genres are free to enjoy long, fruitful careers well into their elderly years. In rap, once you reach a certain age, you are looked at as desperate or out of touch if you are still rapping. Certain demographics deem older rappers as irrelevant. One of the most disappointing spectacles witnessed this year was Swizz Beats having to tell the crowd at the BET Hip Hop Awards to stand up and give a round of applause for pioneer, Marley Marl. There seems to be a disconnect in hip hop culture between different generations. ","_key":"345cc812a71e0"}]},{"_key":"3c3e8ef443a0","markDefs":[],"children":[{"_key":"5df9a94ca8c5","_type":"span","marks":[],"text":"Since his retirement from albums, Andre has done several interviews about not wanting to be a 50-year-old rapper. Andre owes hip hop nothing. However, if Andre is uninspired to make an entire full-length album because he has lost the passion, I do not understand why he keeps bringing age into the equation. Through his various features over the past decade, he has shown that he has the capacity to pen elite, conceptual verses. Just this year, Killer Mike released the Grammy nominated single “Scientists and Engineers” featuring a beautiful Andre 3000 verse. The flow from Andre sounded timeless and proved he shows no signs of slowing down from a talent perspective. If Andre has lost the hunger for rap or does not want to deal with the crooked music industry, that is completely understandable."}],"_type":"block","style":"normal"},{"style":"normal","_key":"55a313f04b55","markDefs":[],"children":[{"_type":"span","marks":[],"text":"I feel Andre using his age as an excuse not to rap again is a cop out. There is a whole mystique surrounding his career. Many feel if he were to drop a solo album, it could be a game changer. Some people have Andre in their top 10. As the year goes by and Andre continues to do features, the anticipation for a solo LP intensifies. Maybe he feels he cannot live up to the expectations deep down inside. Selfishly many of us in the South desperately want Andre to pick up the pen and pad again for a solo album to destroy the myth perpetuated from those north of the Mason Dixon line that southern rappers are not lyrical. We feel an Andre album could shift that narrative and inspire more southern lyricists to be propelled to the forefront. Andre has left the door open to a possible album. Maybe this instrumental album is a gateway to him finding the inspiration to release more music, opening the possibility of a vocal album. If that day never comes, I fear Andre may be phased out of top 10 consideration from disillusioned fans. I sincerely hope I am wrong. Still holding out hope that one day Andre delivers that elusive solo LP and proves the South still has something to say.","_key":"e957a55ef2bd0"}],"_type":"block"}],"title":"Is Hip-Hop Still a Young Man’s Game?","slug":{"current":"is-hip-hop-still-a-young-man-s-game","_type":"slug"},"_createdAt":"2023-11-18T01:33:59Z","_rev":"01fz37KtvhMj2e8zIMv5Ag","_type":"post","_id":"009c2eb5-01c9-468d-b082-1bf09ecb0a12"},{"_createdAt":"2023-11-13T18:56:01Z","_rev":"f10qyKqCGKFLaTrvdjonBG","_id":"735da784-7c6a-4de2-bbcc-72cdbc1b10cc","slug":{"current":"the-h-n-i-c","_type":"slug"},"overview":"A Tribute to Prodigy From Mobb Deep","_type":"post","title":"The H.N.I.C.","_updatedAt":"2023-11-23T01:11:45Z","content":[{"_type":"block","style":"normal","_key":"91e0c4037fca","markDefs":[],"children":[{"text":"by Jamil Weeks","_key":"f316ceb233e2","_type":"span","marks":["strong"]}]},{"_type":"image","_key":"9cebb47aa84c","asset":{"_ref":"image-bcd5535223d6de7ef01e15abd1714c0947ff8611-500x561-png","_type":"reference"}},{"markDefs":[],"children":[{"_key":"a3ec331fd5b80","_type":"span","marks":[],"text":"When you think of 90’s hip hop, the first artists that probably come to mind are 2Pac and Biggie. You may also think of rap legends like Ice Cube, Wu-Tang Clan, Outkast, Snoop Doggy Dogg, etc. However, one name that should definitely ring bells as not only one of the greatest of the 90’s, but also of all time, is Albert Johnson b.k.a. Prodigy from Mobb Deep. With the recent celebration of his birthday, I thought about the impact that Prodigy had on my life. I remember being a teenager and watching the “Shook Ones Pt. 2” and “Survival of the Fittest” videos on Rap City after school. I will never forget the feeling of hearing The Infamous for the first time. I was literally floored as I listened to that album on my Walkman. I recall being immersed by the grimy instrumentals and street slang that permeated through the headphones into my ear drums. My jaw dropped. My eyes widened. The hairs on the back of my neck stood tall like a current of static electricity passed through them. Through the tough bravado you could hear the pain in Prodigy’s voice. Pee spoke from the perspective of a young kid who had PTSD from being exposed to too much at an early age. There was a certain level of authenticity that Prodigy brought to the table as he questioned the hearts of wannabe thugs and gangsters. I never looked at Prodigy as glorifying the streets but more so providing cautionary tales with a genuine rawness. I grew up a big fan of Prodigy while he was alive, and now I am here to give him his flowers posthumously."}],"_type":"block","style":"normal","_key":"cc213b8d8318"},{"markDefs":[],"children":[{"marks":[],"text":"No style of hip hop was more prevalent in the 90’s than what the media labeled as “gangsta rap”. The West Coast dominated the charts and were the primary cultivators of this sub-genre of hip hop. With Mobb Deep’s brand of “dun language”, they became pioneers of reality rap in the East. They were the East Coast’s answer to NWA and Death Row. When you heard rappers talk about their exploits in the streets, you always took it with a grain of salt. However, when I heard Prodigy’s bars on The Infamous, I believed him. Prodigy’s style was not nearly as complex as some of the 90’s greatest lyricists, like Nas, Biggie, Big L, etc. Prodigy had a much more straightforward approach to his subject matter. No glitz. No glamour. No clever punchlines. Prodigy’s crime-riddled verses read more like a Scared Straight documentary. Depicting the mentality of the streets in a candid, unflinching manner, Prodigy painted a picture of New York streets in a way no rapper has done before. Prodigy became America’s worst nightmare when he got in the booth. A nightmare birthed from the lawlessness of the “Old New York” of the 70’s and the crack cocaine epidemic of the 80’s that had transformed New York City into a war zone by the time Prodigy picked up the pad and pen.","_key":"3f657143a7220","_type":"span"}],"_type":"block","style":"normal","_key":"1000adbc1541"},{"children":[{"_type":"span","marks":[],"text":"Prodigy, as a solo artist and part of the iconic duo, Mobb Deep, carved out his own legacy amongst the heaviest of competition. With the releases of Mobb Deep’s The Infamous, Hell On Earth, and Murda Muzik, Prodigy and Havoc had arguably the greatest three album run ever in hip-hop. Prodigy’s raw vocals took center stage on most of the Mobb Deep records. On The Infamous, Prodigy immediately stood out as the group’s front man with his commanding presence on each record. Prodigy took off on Hell On Earth. There was a significant elevation in Prodigy’s lyricism, especially on the title track to Hell On Earth. Prodigy left Earth on that album so much that he was a legit top five emcee at the time. Keep in mind in ’96 you had Nas Escobar, Jay-Z’s debut, Death Row Pac, a polished Biggie, Andre 3000 starting to find himself as an artist, and the emergence of Lauryn Hill. These were some of the illest wordsmiths at the time who were all hungry and in their prime. Prodigy was going toe to toe with all of them. Holding his own on records with rap giants like Raekwon, Ghostface Killah, Nas, Kool G. Rap, LL Cool J, and Lil Kim, Prodigy proved he deserved to be in the discussion with rap's cream of the crop. In addition to his exceptional work as part of Mobb Deep, Prodigy also has an impressive solo catalogue. HNIC and Prodigy’s collaborative album with The Alchemist, Return of the Mac, are both certified classics. Bandana Pee’s solo catalogue post-jail bid was also impressive as he brought a more conscious tone to his music before his tragic passing. Prodigy has a body of work that stands the test of time and can be put up against anyone else’s discography in hip hop.","_key":"94e8e8423a090"}],"_type":"block","style":"normal","_key":"95ed917ea6d3","markDefs":[]},{"_type":"block","style":"normal","_key":"f6f4e3bdd5f3","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Iron sharpens iron is a common mantra that dates to biblical times. Prodigy is definitely battle tested in the competitive sport of emceeing. Over his 24-year career in rap, Prodigy racked up beefs with 2pac, Keith Murray, Lakey the Kid, Nas, Saigon, Tru Life, and even fellow Mobb Deep member, Havoc. His most publicized feud was with 2pac. Pac famously taunted Mobb Deep on the legendary “Hit Em Up”, mocking Prodigy’s sickle cell anemia. Mobb Deep responded with the vicious, “Drop a Gem On Em”, which many people consider one of the most underrated diss records of all time. Though Pac is not mentioned by name, when you hear Prodigy reference “robberies in Manhattan” and ending the verse with “what, you think you can’t get bucked again, once again”, everybody knew exactly who he was talking about. Prodigy may not have won all his battles, but rappers knew that if you called Prodigy out that he would respond. Prodigy was determined to protect that Infamous flag at any cost. To be the best, you must go at the best. Prodigy’s squabbles with some of rap’s elite provided us with some of the most memorable moments in hip hop, rather it be his indirect involvement in the East Coast/West Coast war, or Jay-Z throwing him on that Summer Jam screen.","_key":"ba8da71acdcf0"}]},{"markDefs":[],"children":[{"marks":[],"text":"Prodigy also had one of the most distinct voices in hip hop. When you thought of New York rap, especially in the 90’s, you could hear Prodigy’s voice in your head threatening to punch you in the face so hard he stabbed your brain with your nose bone. Pee epitomized that raspy, talking-out-the-side-of-the-mouth, no nonsense New Yorker when he spewed his vocals. He had a voice that instantly grabbed your attention and held your mind hostage as he delivered his street gospels. Prodigy’s voice would be endlessly sampled by his peers looking to validate their street credentials. His distinctive vocals were an extension of his pen and became an essential part of the Mobb Deep DNA that seized control of hardcore 90’s rap. Prodigy could be hardcore without having to raise his voice or bring a high level of energy, like Onyx. The bleak imagery from his words paired with the conviction in his voice were all he needed to leave an indelible impression on the listener. Prodigy was the talk of New York, which is a reason why he is a trailblazer in hardcore east coast rap music.","_key":"37fcc5416d020","_type":"span"}],"_type":"block","style":"normal","_key":"527bb3abfd1e"},{"children":[{"_type":"span","marks":[],"text":"Nobody represented the most famous projects in the world of Queensbridge more than Prodigy. Despite being from Hempstead in Long Island, Prodigy was accepted by many in Queensbridge as one of their own. Queensbridge contributed a lot to hip hop culture. Marley Marl, who invented sampling, was the first super producer in hip hop. In addition to crafting classics, like In Control Vol. 1, Mama Said Knock You Out, and Paid In Full, Marley joined forces with the acclaimed radio DJ, Mr. Magic, to create rap’s first radio show. Roxanne Shante was the first Queen of Rap and helped to popularize diss records with the Roxanne wars. Tragedy Khadafi, part of the legendary Juice Crew and the Godfather to the 90s QB sound, was highly influential in the careers of Nas, Mobb Deep, and Capone N Noreaga. MC Shan was part of the Bridge Wars in the 80’s squaring off with the South Bronx’s KRS-One and his Boogie Down Productions crew. After that famous battle, it was up to the 90’s rappers to restore the Queensbridge name back to prominence. That is exactly what Prodigy helped to do, alongside Cormega, Nas, Havoc, and Capone, as well as others like Killer Sha, Baby Sham, and Screwball. Prodigy soon became one of the leading voices of QB, by dropping world renowned albums and shooting videos and films right there in the neighborhood.","_key":"5f54fccae6560"}],"_type":"block","style":"normal","_key":"66d8c3f3d7b4","markDefs":[]},{"style":"normal","_key":"c33cfc0d7238","markDefs":[],"children":[{"_type":"span","marks":[],"text":"June 20, 2017 remains as one of the saddest days in hip hop with Prodigy's sudden death. Pee had so much more left in him to contribute to the culture. Shortly before his passing he showed how ahead of his time he was by being one of the first rappers to collaborate with future underground kings from the Griselda Records camp. Despite his passing, Pee’s legacy lives on through his timeless music and his influence on today’s rappers. His partner in crime, Havoc, continues to make music, as do members of the spin-off Mobb Deep group, The Infamous Mobb (especially in the case of Big Twins). Contributing to the QB legacy that spawned some of the greatest talents in the history of the genre, Prodigy etched his name as one of the greats. Whether its one-time rivals like Jay-Z and Nas both giving Prodigy the proper acknowledgement as one of the best to touch the mic, newcomer Flee Lord doing a tribute album, his QB peers, like Cormega, DJ L.E.S., and Havoc, doing tribute shows, Prodigy truly left his mark on this planet. Personally, I placed Prodigy in my top 10 favorite emcees of all time because that is how much I was captivated by his music. R.I.P. to the late great, Albert Johnson.","_key":"694e2d7d28a30"}],"_type":"block"}]},{"overview":"MICHAEL Review","_rev":"P8iX8yLNzdMX2eS89eMwxi","_type":"post","title":"MICHAEL: Album of the Year?","_updatedAt":"2023-11-13T15:28:49Z","content":[{"markDefs":[],"children":[{"marks":["strong"],"text":"By Jamil Weeks","_key":"3cc3777555ba0","_type":"span"}],"_type":"block","style":"normal","_key":"68bfa43278b3"},{"_type":"image","_key":"4ac1ed40bebb","asset":{"_ref":"image-d6c870af89de1d95a5713f66e7e0dbd38d110f50-980x653-webp","_type":"reference"}},{"_key":"8c8b7c9262c0","markDefs":[],"children":[{"_type":"span","marks":[],"text":"In a year where rap album sales are down and people are beginning to question the state of the hip hop music genre, Killer Mike proves there is still quality music being made with album-of-the-year-contender, MICHAEL. The album is a thoughtful self-examination of his life translated onto 14 amazing records. Oftentimes, people look at the success of celebrities without a real appreciation for the journey it took to reach such plateaus. The hard work, sacrifice, self-doubt, and obstacles one has to overcome to attain success. On MICHAEL, Killer Mike reflects deeply on his life pouring his soul into each heart-wrenching track. Heavyweight producers like Cool N Dre, No I.D., and DJ Paul provide the soundtrack for Killer Mike’s life journey. MICHAEL is a moving story about Killer Mike battling his two main enemies throughout the course of his life, the devil and himself.","_key":"c0260a03aba60"}],"_type":"block","style":"normal"},{"style":"normal","_key":"f9b6a811898f","markDefs":[],"children":[{"text":"Make no mistake, MICHAEL is Killer Mike’s testimony. Anyone who grew up in the church, especially in the South, can appreciate the sound from MICHAEL. The style of music on this album can best be described as gospel trap hip hop. Most tracks featured on the album are rich with harmonic singing from choirs and soloists, organs, and pianos over trap music-like production that makes you want to tap your feet and clap your hands as if you are in Sunday service. Killer Mike is on his pulpit testifying before the congregation while delivering his fiery sermon on wax. Religion is a consistent theme on Michael as the subject matter centers around temptation from the devil, the power of prayer, and leaning on God during hard times. On songs like “HIGH AND HOLY”, Killer Mike reminds us that despite whatever mistakes we make in life there is always a shot at redemption if you get right with God. “DON’T LET THE DEVIL” is a symbolic song where Killer Mike uses metaphors to urge his audience to resist the devil’s urges to throw you off the path you were destined for in life. Conceptually this is what makes MICHAEL stand out from other formulaic rap albums released this year. The subject matter coupled with this black southern gospel sound serves as the perfect pairing. Killer Mike wrestles with his own sense of morality as he maneuvers through the harsh realities that surround him. There is a real soulful vibe to the music as Killer Mike uses his personal pain to inspire people.","_key":"46afc5bd99a30","_type":"span","marks":[]}],"_type":"block"},{"markDefs":[],"children":[{"text":"MICHAEL is very introspective as Killer Mike discloses some of his own personal demons he has fought. Rather it be grappling with his own pride on “Shed Tears” or addressing the guilt from a teenage abortion of his first child on “SLUMMER”, the album touches on how we can get in our own way and block our blessings. The album is in part a coming-of-age story where Killer Mike points out how black children, like himself, are groomed for self-destruction. The mistakes you make can lead to devastating path of crime or the penitentiary. Take a song like “NRICH”, where Killer Mike talks about the mentality that young black males develop keeping them mentally in shackles. The activist in Killer Mike further expands on this idea with “TALK’N THAT S***”, an anti-hater anthem, where he addresses our youth’s “hood politics” while encouraging them to embrace the leaders within themselves. The idea of holding ourselves accountable so that you can be the best version of ourselves is a theme that rings throughout the LP.","_key":"1f29073922c90","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"27da879d72f8"},{"children":[{"_type":"span","marks":[],"text":"In part, this album is a celebration of triumphing over the setbacks you face in life. Emotional pain is a concept explored on “MOTHERLESS”, a song about the loss of his mother and grandmother. If you have ever suffered a personal loss, you know how it can be paralyzing from the emptiness you feel. The touching track features Killer Mike talking to his deceased family members explaining to them how far he has come since their passing, as well as exposing his own grief. Despite the defeats suffered in life, having resilience when you feel your back is against the wall is a topic Killer Mike tackles on “TWO DAYS”. With the help of Ty Dolla $ign, Killer Mike expresses how he still aspires to be successful in a world where nobody seems to want you to win. The highlight of the album is “SCIENTISTS AND ENGINEERS”, featuring the legendary Andre 3000, where both artists rap about wanting to maximize their life experience through deeper intellect. A creative way to engage our youth of not settling for the bare minimum in life. On a deeper level, Killer Mike is also saying what type of mentality you should adopt to truly be successful. The verse from Andre 3000 will leave you scratching your head as to why he will not deliver us an official solo album or reunite with Big Boi for one last Outkast album. ","_key":"5a22de8412150"}],"_type":"block","style":"normal","_key":"c74d5d27d02c","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"In a time when most mainstream rap is centered around flaunting one’s financial status, MICHAEL is a refreshing departure from that trend. Instead, Killer Mike speaks directly to the average person. The people that are struggling with bills, drug addiction, self-confidence, and people who are generally trying to find their way in this world. MICHAEL is a motivational autobiography from someone who has overcome their trials and tribulations and has gained wisdom from lessons learned to face tomorrow’s battles. A personal album that is relatable for anyone who is going through misfortune or trying to make sense of life. MICHAEL is intimate, emotional, and entertaining, as it should be since Killer Mike is giving you a glimpse into his own voyage through the course of his existence. Congratulations to Killer Mike for getting nominated for Best Rap Album of the Year at the Grammys. MICHAEL is truly an album that people can listen to and gain something from it. Full of jewels, the album is about navigating through life’s ups and downs and ultimately finding your place in this world.","_key":"1d9743389a7b0"}],"_type":"block","style":"normal","_key":"876349fef1d9"}],"slug":{"current":"michael-album-of-the-year","_type":"slug"},"_createdAt":"2023-11-13T03:51:22Z","_id":"769ebce8-206f-4acf-b0ce-5f03a8515275"},{"_createdAt":"2023-11-09T16:49:48Z","title":"The Creator: An Underrated Masterpiece","content":[{"style":"normal","_key":"f160e8c146be","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"by Jamil Weeks","_key":"f4bd7b7f82b3"}],"_type":"block"},{"_type":"image","_key":"94ef36c3a567","asset":{"_ref":"image-e18ef270fbeba45b37b1df7077d0926f7343baf8-834x1200-jpg","_type":"reference"}},{"children":[{"_type":"span","marks":[],"text":"With the explosion of artificial intelligence in the tech world, the timing is perfect for a film like the Gareth Edwards-helmed, The Creator, to be released in theaters. Starring John David Washington, an ascending Hollywood star (BlacKKKlansman, Tenet, Malcolm \u0026 Marie), The Creator stages a futuristic war between humanity and AI. After a nuclear explosion, humans place the blame solely on AI beings and vow to hunt them down until the threat is eliminated. Washington’s character, Joshua, is recruited by the government to help hunt down a menacing AI weapon. However, things take a turn for the worse and Joshua soon finds himself on the other side, becoming the hunted. People worry of an AI takeover, rather it be jobs or even a war. The movie feeds into this sort of paranoia of what role AI will play in our future. The face of AI in this movie is Madeleine Yuna-Voyles, who makes her acting debut as Alphie. Alphie becomes the focal point of the plot’s existential crisis concerning whether or not she is a genuine danger to humanity.","_key":"668405896a6a0"}],"_type":"block","style":"normal","_key":"8a9cd5bf32f1","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Where the film excels is with the two leading stars. The chemistry that ultimately develops between their characters is the heart of the film. Sent on a mission to eliminate Alphie, Joshua pivots and becomes her protector as he uses Alphie for his own agenda. Along the way he gradually comes to the realization that these AI entities are more than just programmed machines. Joshua eventually acknowledges the emotions, dreams, and hopes of their existence. The nature of their relationship transforms the pair from being enemies to having an almost father/daughter dynamic. Their budding connection pays off in the third act when the war scenes between the humans and AI reach a crescendo with both of their lives dangling in the balance. Washington is at his best in the more emotional scenes in the film as you completely buy in to the bond forged between Joshua and Alphie.","_key":"8fc2acd594c90"}],"_type":"block","style":"normal","_key":"56dde3c54d57"},{"_type":"block","style":"normal","_key":"b2d9ee6fe83f","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Other notable performances in the movie come from Ken Watanabe as the AI soldier Harun, Gemma Chan as Joshua’s love interest, Maya, and Allison Janney as the villainous Colonel Howell. Harun’s bravery as Maya’s loyal protector helps Joshua understand that these AI beings have a soul, bringing Joshua's character arc full circle. Watanabe delivers a powerful and heartfelt performance as Harun that adds credibility to the film. Maya is Joshua’s wife who serves as the chief human ally to the AI race. Although Chan’s scenes as Maya are limited, Chan makes the most of every scene she is in. You feel the depth of the love Maya and Joshua have for each other, which becomes the catalyst for Joshua’s motivation in the story. Janney, as the relentless Colonel Howell, is everything you want in a villain. An unlikeable character who will resort to any lengths to accomplish her mission. Howell pursues Alphie and Joshua throughout the film in a desperate chase to kill Alphie, who she deems an imminent danger to mankind. The performances from these actors, as well as the lead stars, provide the much-needed emotional gravity to heighten the suspense of the action sequences in the movie.","_key":"4d786eda612e0"}]},{"style":"normal","_key":"2981f8825fc2","markDefs":[],"children":[{"_key":"b4c4fc28b6e20","_type":"span","marks":[],"text":"Gareth Edwards deserves his flowers for The Creator. Best known for his work as the director of 2014’s Godzilla and Rogue One: A Star Wars Story, Edwards managed to build a realistic futuristic world on a limited budget. Flaunting superior CGI effects than most $200 million plus movie productions, one cannot help but be in awe at how lifelike the AI robots and future societies look in The Creator. Edwards proves he is a master at the technical visuals in each frame, giving the audience a visceral movie experience. You are in that world during the two hour and 15-minute runtime. The eye-popping optics in each scene only amplifies the story. When you place a film like The Creator in the hands of a filmmaker who has a background in writing, cinematography, and visual effects, the results prove to be magical. With a less capable director, the movie could have easily turned into a clichéd, generic sci-fi movie. Despite the many influences this film draws from, Edwards’ signature touch on the story and characters manages to offer moviegoers a unique visual experience."}],"_type":"block"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"The Creator does have a couple of drawbacks. Where the film falters a bit is in the storytelling. Edwards, to flesh out some of the main characters, resorts to brief, Christopher Nolan-style flashbacks as Joshua goes on the run with Alphie. These flashbacks happen randomly on occasion, so it becomes confusing rather you are watching a scene in the present or watching a moment in the character’s past. Speaking of fleshing out, the film could have devoted a little more time to some of the key characters. A knit pick of a criticism, but sometimes films do benefit from a longer runtime if it will be beneficial to the story, especially in the case of Maya. Maya is such an integral part of the story. The film would have benefited from more scenes with her and Joshua as you can feel the kinetic vibes between Chan and Washington in the few scenes they have together.","_key":"356ecc6eb02e0"}],"_type":"block","style":"normal","_key":"aa5376cfbc9a"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"As great of a movie that Edwards gave us, it is a shame this movie did not do better at the box office. Great films are movies that make you laugh, cry, think, and keep you on the edge of your seat. The Creator is an action-packed, visually stunning masterpiece with heart. The movie is still in theaters, so it is not too late to go support this film. A film that can be enjoyed by the whole family, as well as appreciated by the casual moviegoer and cinephile alike. The movie has action, adventure, science fiction, and drama that entertains you with subtle undertones of social messages about our society that are not overdone at the expense of the story. I highly recommend The Creator as one of 2023’s most underrated and underappreciated films.","_key":"ee85c23491420"}],"_type":"block","style":"normal","_key":"5f923b29c32d"}],"slug":{"current":"the-creator-an-underrated-masterpiece","_type":"slug"},"overview":"The Creator Review","_rev":"6tBtT7HSXJBZgGx8QeCmyh","_type":"post","_id":"2dfdb90a-8b4f-4420-8102-338c1954d4f6","_updatedAt":"2023-11-12T21:55:50Z"},{"overview":"Ladies of Hip Hop","_createdAt":"2023-11-03T02:39:26Z","_rev":"lRZ54YVKpJaKWrGZ7RV27N","_id":"c7e51328-eb5c-4c76-b15d-a28831cda494","content":[{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"6483ccb859dd0"}],"_type":"block","style":"normal","_key":"83b69dd8ff3f"},{"_type":"image","_key":"a796fef40932","asset":{"_ref":"image-f4e87c81b093c589bbf78899390266210a06e411-3072x3072-jpg","_type":"reference"}},{"_key":"c171ad7e11f1","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Female rappers have never had it easy in the male dominated music industry. The disrespect they receive is partially because of the perception they do not write their own rhymes, despite ghostwriting being prevalent amongst all rappers since hip hop’s inception. Also, in the past, male gatekeepers have had controls of their career choices, from style to fashion. This kind of distorted intuition is why they were seen as inferior to the male counterparts and not taken seriously, despite having successful rap acts like Salt N Pepa, Queen Latifah, and MC Lyte. As hip hop gradually began to expand its reach, more female rappers began to surface. In the 90s, Lil Kim became a pioneer in taking control of her own sexuality and turning the tables on her male peers in rap. With her explicit brand of lyricism from a woman’s perspective, she would become the blueprint for a lot of today’s mainstream female rappers. You also had the success of Lauryn Hill, who was the antithesis of artists like Lil Kim and Foxy Brown. In the mainstream, this variety in styles between the two rappers provided balance. Fast forward to the present, and some of the most successful hip hop artists are women. Even though women are beginning to dominate rap on the charts, the scrutiny of the messaging and imagery have taken center stage in hip hop related debates.","_key":"4b69ac9ae23c0"}],"_type":"block","style":"normal"},{"children":[{"_type":"span","marks":[],"text":"Anyone who follows hip-hop know how much criticism female rappers face daily on various social media platforms. The highly sexualized imagery and lyrics of today’s mainstream female rappers have been met with sharp resistance from those who feel these types of artists are poisoning our youth, particularly young girls, with negativity in their music. I get it, because you want the youth to be raised with certain standards. In addition to the audience, you also must consider people in the music industry who are pushing this particular brand of hip hop and why. Personally, I feel any artist should be able to make whatever type of art they wish, as long as it’s coming from their heart. Nobody should be able to decide what music people should or should not consume. I do, however, take issue with people that complain about certain artists, such as Sexy Redd, Sukihana, Ice Spice, Meg the Stallion, etc., but ignore the female rap artists who consistently drop quality music. Why focus so much time and energy on what you do not like and not promote the artists you feel have true talent? Since I have a platform, I figure I would highlight some of these emcees that everyone who claims to love hip hop should know. ","_key":"94f09a30c0060"}],"_type":"block","style":"normal","_key":"c1196b52973b","markDefs":[]},{"children":[{"_type":"span","marks":["strong"],"text":"7xvethegenius, Buffalo NY","_key":"0376e912ddd10"}],"_type":"block","style":"normal","_key":"9f3874fff0f1","markDefs":[]},{"children":[{"_type":"span","marks":[],"text":"Hailing from one of the poorest cities in America is one special emcee whose music provides a glimmer of hope despite the harsh surroundings of her hometown. 7xvethegenius is a ferocious emcee, with a smooth flow that fits snuggly on any beat she blesses. Her music is a blend of neo-soul and contemporary hip hop with an old school spirit. Signed to Conway the Machine’s Drumwork label, she brings a more artistic, positive influence on her music that distinguishes her from the grimier reputation that the Buffalo rap scene is known for by rap aficionados. As her name suggests, love is a common theme in her music, from her debut (7xve is Love) and her follow-ups (Self 7xve, and Self Lxve 2). All it would take would be one of her famous freestyles, whether it be from Shade 45 or On the Radar Radio, to inspire hip hop heads to go digging through her catalogue like DJ Premier digging through vinyl at the local mom and pop record store. 7xve dropped the Genius Tape with DJ Green Lantern this year showing no signs of slowing down. Keep your eye out for 7xvethegenius as her star will only shine brighter in the coming years.","_key":"1b60ab4150d80"}],"_type":"block","style":"normal","_key":"776be32d046f","markDefs":[]},{"markDefs":[],"children":[{"text":"Che Noir, Buffalo, NY","_key":"15cd586045c60","_type":"span","marks":["strong"]}],"_type":"block","style":"normal","_key":"3915502040a3"},{"_type":"block","style":"normal","_key":"5715e534a284","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Buffalo boasts another incredible lyricist contributing to the culture with Che Noir. Che has been on records with some of today’s most incredible emcees, such as Ransom and 38 Spesh, and held her own. In my opinion, she is arguably a top five current emcee. Not only is she gifted with the bars, but she also is a conceptual artist and talented producer. You can hear the influence of Nas in her music with her storytelling and introspective bars. Known for having a variety of styles, Che grips the listener either by being direct in her approach on a song or by being abstract in her subject matter. Boasting a razor-sharp flow that would make members of the Wu-Tang grin with glee, she brings a nostalgia in her music that those who grew up on 90s rap can appreciate.  Putting in work for years, the highlight of her career was the underground classic, As God Intended, produced by the brilliant but underrated Apollo Brown. Che also released stellar follow-ups like the self-produced After 12 and the underground favorite Food For Thought. Che will continue to break new ground showing female rappers can get in the mud with the fellas too while still being a lady.","_key":"c67d9621f1620"}]},{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Rapsody, Snow Hill, NC","_key":"13e3d59fb22f0"}],"_type":"block","style":"normal","_key":"cbeee2d56e8c"},{"children":[{"_key":"f9acf3a172c60","_type":"span","marks":[],"text":"Rapsody is probably the most well-known of the four artists mentioned. Under the tutelage of 9th Wonder and the Soul Council, she has slowly begun to creep onto the radar as one of today’s most gifted wordsmiths. Working alongside such incredible lyricists as Black Thought, Busta Rhymes, and J. Cole, she has been able to show the fellas she is no pushover when it comes to the mic devices. Rapsody’s style is a beautiful blend of soul, R\u0026B, and hip hop that gains the attention of mainstream audiences while keeping the underground fed. You can hear the Lauryn Hill influence infused in her music, with her complex style of wordplay and metaphors. From NC State to Roc Nation, the Grammy’s nominated artist has risen to prominence by drawing on her own personal experiences in life to paint pictures that inspire others. While most rappers are vocal about money being their sole motivation for embarking on a career in rap, Rapsody has insisted that she does it for the love of the culture. Such a claim is backed up by the music she creates and is a reason why she continues to work alongside some of the biggest artists in the industry. One of her most noteworthy releases includes her Roc Nation debut with Laila’s Wisdom, as well as her follow-up album, Eve. Her career shows no signs of slowing down as she recently released her latest single, “Asteroids”, produced by the versatile Hit Boy. In the next five years, it will be interesting to see what heights she reaches. Word to Snow Hill."}],"_type":"block","style":"normal","_key":"63c6a16f152a","markDefs":[]},{"_key":"6cbedd4f1aa4","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"Sa-Roc, Washington, DC","_key":"741fc4237b300"}],"_type":"block","style":"normal"},{"markDefs":[],"children":[{"text":"Last, but not least, is the rose that grew from the concrete of Southeast DC. The socially conscious, Sa-Roc, whose stage name pays homage to hip hop pioneer, Sha-Rock, brings a more esoteric approach to her music. Penning poignant rhymes, her music is highly expressive and seemingly meant as more of a vehicle for change. Infusing activism in her music, her music draws similarities with poetic genius Gil Scott Heron. A career spanning 15 years, Sa-Roc has gradually gained more notoriety amongst her peers as she is considered one of the most important voices in hip hop. Her powerful stage presence has placed on stages with legendary emcees such as Common, De La Soul, and Rakim. The Goddess of rap is known for her blazing delivery as much as her elevated style of lyricism. Whether she is on stage or in the booth, she delivers commanding performances that leave a lasting impression on you long after the song has ended. The Sharecropper’s Daughter, her Rhymesayers label debut, is a highly recommended project that gives you a glimpse into her influences and upbringing while exploring themes of overcoming trauma. Other notable releases include albums like Babylon and Nebuchadnezzar, which display her prolific brand of artistic articulation. For those rap fans desperately seeking music from more creative minds, look no further than the poetical and intellectual Sa-Roc.","_key":"e71ead4410270","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"bf570efebdc0"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Rather it’s a feature, freestyle, song, album, or show, the musical output from these talented ladies will shatter your perception of the female rapper. I selected each one of these artists because they can get on a record with ANY male artist and arguably have the better verse. Their ability to convey their emotional pain on wax and turn it into beautiful art is the reason their music should be pushed to the forefront of hip-hop. These women have been a part of the hip hop scene for years and are just now starting to gain the recognition they deserve. Beyond the deviation from the typical hip hop subject matter (sex and money), their ability to be relatable is the common thread these artists all share. These four emcees can transform how female rappers are viewed since all four consistently rap like the rent and utilities are due with every verse. If you have grown tired of artists like Cardi B or Coi Leray, my hope is that the energy you put into tearing those artists down you use to run the numbers up on artists like the women highlighted in this article. For those that appreciate artistry blended with lyricism, support them by pulling up your favorite streaming service and listening to what these young ladies have to say.","_key":"87b9258ce51f0"}],"_type":"block","style":"normal","_key":"6734a7b05aca"}],"slug":{"current":"the-ladies-got-something-to-say-if-you-bother-to-listen","_type":"slug"},"_type":"post","title":"The Ladies Got Something to Say: If You Bother to Listen","_updatedAt":"2023-11-03T03:19:46Z"},{"overview":"The Killer Review","_rev":"4Hh4y4CnsSsZGWvpkq2Dy5","title":"Does The Killer Miss Its Mark?","_createdAt":"2023-10-31T03:23:25Z","_type":"post","_id":"20ad13fb-919d-4385-8cd3-239b836fbd0b","_updatedAt":"2023-10-31T12:21:18Z","content":[{"children":[{"_type":"span","marks":["strong"],"text":"by Jamil Weeks","_key":"f42ad08e341c"}],"_type":"block","style":"normal","_key":"863e32b60619","markDefs":[]},{"_type":"image","_key":"4cd43e8849f3","asset":{"_ref":"image-c955ea3a2831108f9ba649427a588ca2009ef7fa-1013x1500-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"David Fincher’s, The Killer, stars Michael Fassbender in a tension-filled thriller and bloody tale of murder. Known for his stylistically dark and gritty visions, Fincher adds his unique twist on assassin films. The movie follows Fassbender’s character as he embarks on a mission of revenge after a hit gone wrong. The Killer pairs Fincher with one time collaborator Andrew Kevin Walker, who wrote Seven. Everything you love about Fincher films you will find in The Killer. The lush cinematography. The uneasy and sinister undertones of the Trent Reznor and Atticus Ross score. The plunge into the seedy, bleak world of unsavory individuals. Yet despite all the things we have come to enjoy about Fincher films, his most recent effort proves to be a mixed bag.","_key":"fc19e6bd29cb0"}],"_type":"block","style":"normal","_key":"4fc552aac3ac"},{"style":"normal","_key":"eaafa02e3f25","markDefs":[],"children":[{"marks":[],"text":"Do not watch this movie thinking you are going to see a James Bond or John Wick film.With The Killer, Fincher takes a more grounded, sobering approach to the assassin tale, choosing to focus more on the hitman’s process of murdering his victims than on the action. In fact, this film is not even an action film, although it has some action elements in it. Fincher takes his time telling the story, which seems intentional. Fincher strips away the sensational aspects of a typical action thriller, which oddly makes for a more interesting watch. You never know what direction the film is taking you, which is how the film holds your attention throughout the nearly two-hour runtime. Fassbender’s character, who is nameless in the story, is calculating and methodical in how he dispatches his targets. Fincher depicts the discipline of the killer’s murderous campaign with meticulous detail as if the killer’s methods mirror his own style of filmmaking. Maybe that was the point of the film, to show a master at his craft, thus symbolizing Fincher’s approach to filmmaking.","_key":"fdc8a87458110","_type":"span"}],"_type":"block"},{"_type":"block","style":"normal","_key":"4f9f734e71a5","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The best thing about this movie is Fassbender. The movie would have been a disaster if the lead role had been placed in the hands of a less talented actor. Fassbender is asked to subtly convey emotions often with facial expressions and body gestures. Yet despite his character’s lack of dialogue, Fassbender’s chilling portrayal as the cold-blooded executioner still manages to be captivating. A tough feat, considering the emotionless nature of the character he is portraying. There’s no character arc. Just a man with an unyielding determination to complete his mission. Some might find this straightforward approach to filmmaking jarring. The inability to pin down this character’s sense of morality, if he has any at all, would normally leave you feeling disconnected from the character. Fassbender keeps you intrigued as his character struggles to maintain his cool despite the dangerous situations he encounters. In a strange way, you find yourself rooting for him to succeed in his mission even if you disapprove of his actions.","_key":"dd5ab189355b0"}]},{"style":"normal","_key":"cf26b26411f8","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Outside of Fassbender’s one man show, there are two scenes in this movie that are the clear highlights of the film. One involves a brutal and bloody fight sequence. Absent of fancy choreography, the scene shows an all-out brawl between Fassbender’s character and one of his targets. You can literally feel each punch and flinch with each crushing body blow as the two battle it to the death in the ultra-violent confrontation. The realistic depiction of the fighting keeps you on the edge of your seat. The scene is reminiscent of the warehouse fight scene between Denzel’s Robert McCall and the big Russian mafia goon from The Equalizer movie. The second scene involves a face-off between Fassbender and another assassin, played by Tilda Swinton. Swinton steals the scene as the pair sit across the table from each other engaged in a witty but deadly contest of trying to outsmart the other. Another nailbiter of a scene that keeps your eyes glued to the screen as Swinton’s character tries to talk her way out of certain death as Fassbender responds with an ice-cold glare. What makes these riveting scenes so superb is both the suspenseful buildup and the ensuing satisfying outcomes.","_key":"84eed674b2260"}],"_type":"block"},{"style":"normal","_key":"bc51342712f2","markDefs":[],"children":[{"text":"My major gripe with the film is the ending. Without providing any spoilers, I would say the ending of the film is rather uneventful. Imagine playing a game like Kung Fu, where you are on a mission ultimately to get to the “top guy”. You manage to fight your way all the way to the final boss, only for nothing to really happen. You enjoy the journey in getting to the final boss, but the anticlimactic conclusion leaves you wondering what the point of the whole journey was. This type of disappointment is what describes my experience watching The Killer. The film takes its time building up to what you anticipate will be this grand ending. However once you reach the grand finale, there is no big payoff. No shocking revelations. No real consequences for the protagonists’ heinous actions. Most of Fincher’s films stick with you long after the credits roll, but here the hollow ending ultimately makes this film forgettable.","_key":"a12d12cfe5d50","_type":"span","marks":[]}],"_type":"block"},{"children":[{"_type":"span","marks":[],"text":"While The Killer may be a slower burn than most modern-day filmgoers are accustomed, this movie is a wet dream for cinephiles. The Killer is a movie designed for people who obsess over the more technical aspects of film, like sound design and lighting. I would only recommend this film to hardcore Fincher fans. With unconventional storytelling, the film may be hard for most people to watch in a theater.  Within Fincher's filmography, I would say The Killer has a replay value similar to The Game.  A film you might forget about years from now but may watch if you are bored and happen to come across it running on TNT if you are bored.  Most of the film will have you on the edge of your seat wondering what Is going to happen next. Ultimately, the conclusion leaves you with an underwhelming feeling, despite the fantastic performance from Fassbender. The Killer releases on Netflix on November 10.So if you have nothing to do on a lazy Sunday afternoon, give the film a try and decide for yourself if the movie hits or misses.","_key":"13504d3d07160"}],"_type":"block","style":"normal","_key":"4f5b8f15683b","markDefs":[]}],"slug":{"current":"does-the-killer-miss-its-mark","_type":"slug"}},{"_createdAt":"2023-10-27T04:14:14Z","_type":"post","_id":"c05c134f-b25f-41e7-b96b-c383c499d379","title":"And Then You Pray For Me: Masterpiece or Mid?","_updatedAt":"2023-10-28T14:22:09Z","content":[{"_key":"ac9289d2d246","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"by Jamil Weeks","_key":"69faabdb3a30"}],"_type":"block","style":"normal"},{"_type":"image","_key":"46bc193e2ccd","asset":{"_ref":"image-5a2342f180b58c17dd9f1ffd401094bedc375a27-2560x2560-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Westside Gunn is an anomaly in hip hop. Priding himself on being more of a curator than a rapper, Gunn has carved out his own niche in the rap game that has him standing in a class of his own. As the unofficial leader of the GxFR campaign, Gunn’s projects, whether it be mixtapes or studio albums, are some of the most anticipated releases from the Griselda movement.His latest effort, And Then You Pray For Me, is no exception. 2023 has been a relatively quiet year for Griselda. However, Gunn has plans to shake up the industry with his usual brand of grimy, spooky tunes, just in time for Halloween. The difference is that with And Then You Pray For Me, Gunn uncharacteristically shifts gears to expand the sound of Griselda to reach a wider audience.","_key":"9dbc4627531e0"}],"_type":"block","style":"normal","_key":"d5871f70c617"},{"_key":"d836b815c3fc","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Gunn has throwback, underground sound that is reminiscent of golden era 90’s rap music. And Then You Pray for Me is no exception.Featuring production from Beat Butcha, Daringer, Rza, Denny LaFlare, Conductor Williams, and others, Gunn continues delivering that signature gutter sound that has become the standard for the Griselda brand we all know and love. The album opens with “Mama’s Primetime.Here Gunn rhymes about the obstacles he has overcome while maintaining his integrity over hard-hitting drums and trademark eerie melodies. The boom bap throwback nostalgia continues with records like “Suicide in Selfridges”, “FLYGOD 2X”, and “The Revenge of Flips Leg”, which features Rome Streetz performing surgery over a head-nodding Conductor Williams beat. Gunn seems at his most comfortable on these records, as this is what we love about Westside Gunn. Likening himself to a living God in the flesh and spitting the type of braggadocios rhymes that leave haters punching the air like Tre in Boyz N the Hood. Westside also proves that when he really puts forth the effort, he is not a bad lyricist.","_key":"e379cddf44a40"}],"_type":"block","style":"normal"},{"_key":"6a9990e53113","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Like his previous efforts, amidst the sinister vibes of the album is a balance of deep, soulful production where Gunn unveils his versatility as an artist and a curator. Even though this is a Westside Gunn album make no mistake, the star of the album is Stove God Cooks. On the heartfelt drum-less “Kitchen Lights”, Gunn and Stove paint a picture of their tough upbringing and the harsh realities of street life. The duo continues to impress on “House of Glory” (a beat that sounds tailor-made for Ghostface Killah), where they recruit the Zig Zag Zig Allah, Rza. Despite the subject matter being cliché (haters and success), the chemistry between the pair is undeniable. And Then You Pray For Me makes you wonder what an entire Stove album executive produced by Gunn would sound like. The album concludes with the title track, where Gunn allows KayCyy the opportunity to close out the record. Everything is seamlessly tied together with religious themes of using the power of prayer and faith to remain strong throughout life’s torrential storms.","_key":"f72d4edadc380"}],"_type":"block","style":"normal"},{"children":[{"marks":[],"text":"Where the album begins to lose steam is when Gunn deviates from the proven Griselda formula. In the case of this album, one should approach the music with an open mind. To be fair to Gunn, he has never been a stranger to taking risks, as proven with songs like “French Toast” from Pray For Paris. Here, however, the album incorporates more of a trap sound than Griselda fans are accustomed to hearing. Part of the appeal to Griselda, particularly amongst “old heads” like myself, is Griselda has restored the feeling that most of us felt has been missing since the 90’s. The trap sound present through most of the album may throw people off. Nothing wrong with growth as an artist, but it’s all in how the experimentation is executed. Songs like “Kostas”, “1989”, “Disgusting” and “LL Bool Gunn”, sound like left over Rick Ross and Jeezy records from the late 2000s.On those records, Gunn raps noticeably off-beat, which makes for a laborious listen. On a positive note, those records do pass the car test, as each trap-inspired beat seeks to blow out your speaker with the precision of a drown explosive. As the master curator, Gunn recruits artists like Benny the Butcher, Rick Ross, and Jeezy that know how to attack those pockets to salvage those records. Upon first listen, the initial reaction you might have might be to cringe. With more listens, I find that feeling subsides and you begin to have fun with these types of records.","_key":"cf79a7a925150","_type":"span"}],"_type":"block","style":"normal","_key":"c155f6f58cb0","markDefs":[]},{"_key":"3904d88b9c83","markDefs":[],"children":[{"_type":"span","marks":[],"text":"While And Then You Pray For Me may not be the best Westside Gunn project, the album does get better with more listens. But therein lies the problem. Will the average Griselda fan genuinely give this album a chance to digest before judging? The replay value is there as the album has enough quality music to keep the streets fed. Most Gunn albums need time to take it all in, and his latest effort is no different. With music like this, the knee jerk reaction is to trash the album because of expectations for what we, as the listeners, wanted the album to sound like sonically. People from the South might gravitate to this album more than their neighbors North of the Mason-Dixon line. Not the perfect project and certainly not the note we expected for this reportedly being the final Westside Gunn studio album. Gunn attempted to satisfy both boom bap and trap fans, which I fear may have left some within his fan base disappointed and disillusioned. However, it is my belief that this album will age better than most people think. I pray (pun intended) people ultimately judge this album by the artist’s intended vision whether than their own assumptions. Long live big Griselda!","_key":"7961bc3568a00"}],"_type":"block","style":"normal"}],"slug":{"current":"and-then-you-pray-for-me-masterpiece-or-mid","_type":"slug"},"overview":"And Then You Pray For Me Review","_rev":"xjV26r95LyXpcLBMk59vBZ"},{"_id":"a26d90cc-b0fe-4098-bb23-563bfc896569","overview":"The Importance of Super Hero Movies","_rev":"904mL5SdWNgHGZgJPpxO4G","_type":"post","content":[{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"by Jamil Weeks","_key":"64960b09f748"}],"_type":"block","style":"normal","_key":"490b827fa3bd"},{"_key":"eed4c88eadf0","asset":{"_ref":"image-90da9aa51bee7164fee3ae49e892ca9d2c4ee5c8-800x550-jpg","_type":"reference"},"_type":"image"},{"markDefs":[],"children":[{"_key":"84930b15a0380","_type":"span","marks":[],"text":"Literary heroes have been celebrated throughout history, going as far back as Beowulf. Our fascination with these characters lies in their heroism and how they triumph in the face of adversity. We watch in awe at what these heroes are willing to endure, whether it be tragedy or sacrifices, to preserve our way of life. These figures, brought to life by brilliant writers, are in part a commentary on society and can define the virtues and ideals of the culture. They reflect our values because they stand for truth and justice. X-Men used mutants to comment on racism and prejudice in society. Captain America was the embodiment of American values. It can be said Batman, in a way, is a commentary on poverty and social reform. For these reasons, these characters have persevered in pop culture for decades through various forms of media."}],"_type":"block","style":"normal","_key":"2349d20ad876"},{"_type":"block","style":"normal","_key":"bac431281bed","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Some of my earliest memories of life involve waking up on Saturday mornings to watch Spider-Man and His Amazing Friends or re-runs of The Incredible Hulk television show starring Bill Bixby and Lou Ferrigno. Some of my fondest memories were when my father would take me to Edward McKay’s Used Bookstore in my hometown of Fayetteville, North Carolina. It was there I learned to love comic books. My introverted personality would leave me locked away in my room completely immersed in the heroic tales of these comic book figures. Rather it be the comic books, animated TV shows/movies, or video games, these stories would become a big part of my life as I grew from a boy to a man.","_key":"23bd49dcfb220"}]},{"_key":"89baacf61c80","markDefs":[],"children":[{"_type":"span","marks":[],"text":"As technology evolved, these stories began to be translated to both the small and big screens. From Richard Donner’s Superman and Tim Burton’s Batman, over time Hollywood found a way to turn these films into blockbuster events. Gradually the popularity of these films dramatically increased as filmmakers began to figure out how to properly convert stories from comic book lore into movies that the public could grasp. However, once the popularity of these films began to peak, there was a backlash from cinema purists. Every few weeks or so, I would go on social media or read an article about a filmmaker or actor expressing their disdain for the superhero genre. A notable critic of these films has been the cinematic guru, Martin Scorsese. Scorsese, the ringleader, suggested that these types of polarizing motion pictures were not cinema. DC and Marvel films gradually went from beloved to polarizing and would become the subject of ire for pretentious cinephiles who grew weary of the stranglehold over the box office these films would enjoy for decades.","_key":"5b73a56dfa380"}],"_type":"block","style":"normal"},{"style":"normal","_key":"878a4f7eb782","markDefs":[],"children":[{"marks":[],"text":"Well, I got news for Martin Scorsese, Francis Ford Coppola, Jodie Foster, and anyone else in Hollywood who has a problem with the comic book movie genre: superhero films ARE cinema. Movies can be used for a variety of purposes. They can be used to make us laugh, make us think, make us cry, etc. When placed in the hands of capable minds, these films can not only be great, but also gripping and revolutionary. With Christopher Nolan’s The Dark Knight, Nolan proved how you could innovate comic book films by taking a mature, grounded approach. These films could be more than just vehicles to entertain us or to sell toys to provide big bags of cash for major Hollywood studios. They could comment on the human condition and make subtle critiques of society. They could be character studies. Or they could blend genres, like Logan in the X-Men franchise, mixing superhero and Western elements to make a powerful and poignant drama that adults could appreciate. These films could turn villains into anti-heroes, like Thanos from Avengers: Infinity War, presenting us with philosophical moral dilemmas about what is the greater good. Marvel Studios found a way to create an entire cinematic universe, where individual films got to tell their own unique stories while still being connected to one single narrative. Marvel Studios reinvented the concept of blockbuster films, introducing a new form of storytelling in cinema.","_key":"6998bcc69ac70","_type":"span"}],"_type":"block"},{"style":"normal","_key":"ebfb76ef4a0f","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Beyond being innovative, these films are also temporary escapes from the realities of everyday living. With all the stress that comes with life, movies are a way for us to turn off our brains for two plus hours and just enjoy a fun film. The superhero genre is a means to help us get through hard times. That is part of the appeal to these movies. Sitting in a theater with a tub of buttered popcorn, washing it down with your favorite soft drink as you watch your favorite superhero fight evil, eccentric villains for high stakes is a way some people alleviate stress. The entertainment value these movies provide is priceless. The drama. The suspense. The fantastic spectacle. The audience reactions on opening night. Blockbusters are not a new phenomenon. Modern day movie audiences enjoy DC and Marvel films much like previous generations enjoyed Star Wars or Indiana Jones movies. Films that blend action, science fiction, fantasy, and adventure with creative storytelling to dazzle us in ingenious ways. Nobody is going to tell me George Lucas and Spielberg, architects of the blockbuster film, are not cinema. So why are superhero films getting so much flack these days?","_key":"8ea540c0096e0"}],"_type":"block"},{"style":"normal","_key":"0bd8bbe02391","markDefs":[],"children":[{"marks":[],"text":"One trend I have noticed is that a lot of these comic book movie detractors seem to come out ever so often with a scathing tongue lashing for DC and Marvel when they have a new film about to be released. It is as if bashing the superhero genre is a part of their promotional campaign. Let’s get back to Scorsese, who remains a staunch critic of Marvel. The irony of his criticism is that in his 2020 film, The Irishman, he used de-aging technology that was pioneered by Marvel films. To add insult to injury, one of Scorsese’s closest colleagues, Spielberg, INVENTED the modern-day blockbuster. Then there is Michell Rodriguez, who is widely known for her appearances in the Fast and Furious franchise films. While promoting her film, Dungeons and Dragons: Honor Among Thieves, she criticized Marvel films as not being innovative given the quantity of the films. This is despite her appearing in a franchise with over 10 films spanning over 20 years. The pious nature of these sorts of comments is enough to make my eyes roll so far back in my head they might pop out of their sockets!","_key":"8516352996880","_type":"span"}],"_type":"block"},{"children":[{"marks":[],"text":"Nostalgia is one of the most powerful tools that drives moviegoers into theaters. A reason why superhero films are important is because they connect us to our pasts. When I watched the airport scene in Captain America: Winter Soldier, it was like reliving my childhood as that kid waking up excited for Saturday morning cartoons. Some of the stories I grew up reading in comic book form are now being loosely translated into films, sparking endless fond memories of people, places, and events from my past. Superhero films are more than just entertainment for some people, but also a means for reflection of our own personal journeys. It may sound crazy, but these types of moments can bring comfort to people going through rough patches in their physical journey. DC and Marvel films are just as important as any other type of movie in that regard, by mentally transporting us back in time to happy days that, in turn, bring us joy in the present moment.","_key":"0d76ca5306f60","_type":"span"}],"_type":"block","style":"normal","_key":"7fdf7b47690a","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Art is subjective. What is one man’s classic is another man’s trash. At the end of the day everybody’s opinion should be respected. Whenever you present a piece of art for public consumption, some will gravitate towards it while others will reject it.I feel much of the hate from comic book critics is misplaced anger. Scorsese’s gripe with these films has more to do with major movie studios choosing to pour more money into developing comic book films than the traditional films we all grew up on. Maybe there needs to be more variety in the types of films being pushed by Hollywood. But that does not mean that comic book films are not cinema. Scorsese is a talented filmmaker, boasting a successful career that has spanned over 50 years. It is unfortunate that a person of his talent, and others like him, resort to tearing down another person’s art to prop up their own. Scorsese’s talent is so immense, it should stand on its own. Regardless of how he may feel, there are millions of people like me who love these films and will continue to do so for however many years we have left on this earth.","_key":"a25cc09085e00"}],"_type":"block","style":"normal","_key":"0c96a61f1fe1"}],"slug":{"current":"why-comic-book-films-are-cinema","_type":"slug"},"_createdAt":"2023-10-25T02:18:36Z","title":"Why Comic Book Films ARE Cinema","_updatedAt":"2023-10-25T03:56:19Z"},{"content":[{"_type":"block","style":"normal","_key":"5dabdca275e8","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"by Jamil Weeks","_key":"c08549ddbc1c"}]},{"asset":{"_type":"reference","_ref":"image-7a709a8b5f11c087c0e2f333d707757317941da6-1000x539-jpg"},"_type":"image","_key":"e04e43a91e89"},{"_type":"block","style":"normal","_key":"43b88475fff5","markDefs":[],"children":[{"_key":"8f8cbbd912700","_type":"span","marks":[],"text":"Back in the early 2000’s, a powerhouse combination almost shook the very foundation of hip hop. In what seemed like a dream scenario, the God Emcee, Rakim Allah, from the East Coast signed to West Coast master architect, Dr. Dre, under the Aftermath umbrella. Both artists demonstrated they could make classic music on their own. But the two forces combining to make an entire album together? It would have been like discovering plutonium by accident! Imagine Rakim rhyming, with his smooth, laid-back-in-the-pocket flow, over melodic, hard-hitting Dr. Dre instrumentals. The potential impact on the music genre could have been earth-shattering, as lyricism was beginning to fade from mainstream hip hop with the rise of the South in the early 2000s. Also keep in mind, a major east coast and west coast artist working together on a game changing project would have been a monumental moment for healing within the hip hop community after the deaths of 2Pac and Biggie."}]},{"_type":"block","style":"normal","_key":"967b68063459","markDefs":[],"children":[{"marks":[],"text":"During the late 90’s, Rakim set out on his own to release albums as a solo artist, after the break-up between him and Eric B. While releasing two critically acclaimed solo projects in the late 90s, those two albums failed to garner the type of buzzworthy attention to keep Rakim in the discussion as one of the biggest artists of that era. Meanwhile, Dr. Dre was reaching new heights in his career and popularity, as he released the successful follow-up to The Chronic with 2001, signing Eminem, and building up his robust roster for his Aftermath Entertainment label.Dr. Dre had already begun diversifying his portfolio by working with East Coast artists in the mid-90s.The Firm album flop left a sour taste in Dre’s mouth, and pulling off an album with Rakim could have helped to alleviate the bitterness.","_key":"4ae5ffabbcd90","_type":"span"}]},{"_type":"block","style":"normal","_key":"6a2154631ca4","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Once word began to spread that the 18th Letter and the Doctor were working on new material, titled Oh My God, it instantly became one of the most anticipated projects in the early 2000s. 2001 was a critical and commercial success, as were the Eminem Aftermath albums, which were pushing the creative boundaries of the genre. With Dr. Dre overseeing the collaboration, Rakim not only had access to Dre, but also with the production team of Aftermath (Denaun Porter, Mel-Man, Scott Storch, Mike Elizondo, etc.). In addition, there were also rumors circulating that DJ Premier would be contributing production on the album. Can you imagine the possibilities?Dr. Dre and Premo doing an entire Rakim album?! I remember scouring every issue of The Source and XXL Magazines during that time. There were rumored track lists surfacing on hip hop forums all over the internet. People were salivating for this album to drop like Homer Simpson over a six pack of Duff Beer.","_key":"45ddc1cf90b70"}]},{"children":[{"_type":"span","marks":[],"text":"Unfortunately, the pairing turned out to be a bad match-up. Dre and Rakim could not get on the same page creatively. Rakim was trying to evolve as an artist and saw his signing to Dre as an opportunity to take his career to the next level. Rakim would hear a beat from Dre, and both would have a different perspective on what the direction of the song should be. According to Rakim, Dr. Dre wanted Rakim to make “gangsta” music more rooted in the streets.Makes sense as hardcore street music was Dre’s bread and butter, and a proven formula that worked out well for his career. Rakim wanted to go in a different direction and make music that was going to be more elevating than violent. Dr. Dre had a different reason for why the dream pairing did not work. Dr. Dre indicated that Rakim was taking longer than he anticipated to do songs.Whatever the case may be, the short-lived duo ended up parting ways in 2003 due to creative differences. Hip hop was robbed of what could have been a colossal juggernaut of an album.","_key":"1d43f99c89e70"}],"_type":"block","style":"normal","_key":"cb3472cc5b85","markDefs":[]},{"_type":"block","style":"normal","_key":"09bd43923478","markDefs":[],"children":[{"marks":[],"text":"To this day this failed collaboration remains one of the biggest disappointments in the history of rap music as a musical genre.At the end of the day, all we got was a glimpse of what could have been between the two legendary and iconic artists. In 2002, Jay-Z released “The Watcher Part 2” off his Blueprint 2 album produced by Dr. Dre and featuring Rakim. That same year Rakim teamed up with another Aftermath artist, Truth Hurts, on “Addictive” which was produced by DJ Quik and reportedly had uncredited additional production from Dr. Dre.These two songs prove that the two could have made some real magic together if they both could have gotten on the same page.Supposedly, a lot of the beats that were intended for Oh My God ended up on 50 Cent’s Get Rich or Die Trying, an album that would sell over 10 million albums.I always wonder what Rakim would have done with beats like “Heat”, “If I Can’t” or “In Da Club”. How different would the landscape of hip hop be in terms of lyricism still being a staple in mainstream hip hop had Oh My God been released and well-received? Would the trajectory of 50 Cent’s career have shifted? At the end of the day, we still got a classic Aftermath album from 50 Cent and Rakim continues to tour and be widely regarded as one of the best and influential emcees. But despite the silver linings, the scrapped Rakim/Dr. Dre aftermath album remains as one of the biggest What If moments in hip hop.","_key":"87097d3b2d940","_type":"span"}]}],"slug":{"current":"what-if-rakim-and-dr-dre-s-aftermath-album","_type":"slug"},"_createdAt":"2023-10-23T23:05:58Z","_type":"post","_id":"13156225-b588-466c-a3c8-32c9377cd5d0","_updatedAt":"2023-11-05T16:08:13Z","overview":"Here I discuss the scrapped Rakim/Dr. Dre Aftermath debut","_rev":"h9gndD2P4keuz4rjsCGtIr","title":"What If: Rakim and Dr. Dre's Aftermath Album"},{"_rev":"Lh7rhBNTpK2mkuYCdIHQs6","_type":"post","title":"Does the Magic Continue with Nas and Hit Boy's Finale?","overview":"Magic 3 Review","_createdAt":"2023-10-22T22:13:17Z","_id":"50e7ee26-e6cd-40e4-affd-699fbbe27e84","_updatedAt":"2023-10-22T22:13:59Z","content":[{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"by Jamil Weeks","_key":"0a8de95a74fa"}],"_type":"block","style":"normal","_key":"2d5124ff7143"},{"_type":"image","_key":"2adb7304438c","asset":{"_ref":"image-e088acd953d3a845b96e27f50ec74706373bfc23-640x640-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_key":"f2a75c1a5c350","_type":"span","marks":[],"text":"When it was first announced back in 2012 that Nas was doing an entire album with Hit Boy, as a lifelong Nas fan I feared this would be THE album where I stopped checking for any new material from the Queensbridge emcee. Nas had gone on a six-year hiatus from making music after releasing 2012’s Life Is Good album, only to drop a lukewarm, rushed project with Kanye, followed by a lackluster sequel to his Lost Tapes series. To add insult to injury, instead of delivering the album his fan base desperately wanted to hear (YOU guys know that album), he decided to give us an album nobody wanted with Hit Boy. Then I saw the track list and, initially, I panicked. Lil Durk? Big Sean? Fivio Foreign?! "}],"_type":"block","style":"normal","_key":"3c253eb4b145"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Then I saw Brucie B and The Firm (a reunion I thought I would NEVER happen) and decided to listen to the album with an open mind. Little did I know that this album, 2020’s King’s Disease, would be the first installment in the Nas/Hit experiment that would breathe new life into Nas’ career and showcase Hit Boy’s versatility in beat making and producing. Since 2020, Nas and Hit have gone on a legendary and unprecedented run, bridging the gap between generations and Nas extending his already legendary career as one of the greatest lyricists and artists in hip hop. However, as Nas so eloquently rapped back in the day, “nothing lasts forever”.","_key":"d24096e1ce6e"}],"_type":"block","style":"normal","_key":"c7bb17b12d07"},{"_type":"block","style":"normal","_key":"64ba69bad32e","markDefs":[],"children":[{"_type":"span","marks":[],"text":"With Nas and Hit Boy’s latest offering, Magic 3, both artists conclude their fantastical run with their sixth studio album in three years. What is special about this run is seeing these two artists develop an undeniable chemistry together organically. There is a certain purity in seeing two talented artists collaborate to make the kind of art that has timeless potential. Nas sounds reinvigorated and you feel the energy coursing through the frenetic Hit instrumentals. Hit Boy is a master sorcerer in crafting the perfect canvas for Nas to experiment with different flows and styles. Whether it’s East Coast boom bap, or down south trap, or New York drill, or west coast g funk, etc., ","_key":"f7931b4b8a3b0"}]},{"children":[{"_type":"span","marks":[],"text":"Hit can provide any style of beat for Nas to display his verbal wizardry. Hit has been able to make songs that highlight Nas’ strengths (his cinematic and vivid stories, his prophetic introspection, and his brand of poetic, cerebral lyricism), while providing him with a more contemporary style that is more relevant to today’s hip hop scene. Their work has also seen Nas collaborate with stars young and old, from Brucie B, Charlie Wilson, and EPMD to Fivio Foreign, Lil Durk, and A Boogie Wit Da Hoodie. ","_key":"e467a076911b"}],"_type":"block","style":"normal","_key":"24fedf52274b","markDefs":[]},{"_key":"f2212812c5c6","markDefs":[],"children":[{"text":"Nas has found new life injected into his career after teaming up with Hit Boy. Nas won his first grammy for King’s Disease in 2021 and has garnered critical acclaim and a general positive response from hip hop media and fans alike. Now this magical run has finally come to an end with Nas with the release of Magic 3, which is coming off a successful year of selling out the Garden by himself, touring the world with Wu-Tang Clan, placements on two movie soundtracks, being inducted into the Billboard Hall of Fame, co-headlining and helping to organize arguably the biggest celebration for the 50th year anniversary of hip hop by selling out Yankee Stadium, and releasing Magic 2 just two months before this final album. Nas is getting his flowers while Hit is being introduced to a new audience of hip hop listeners. ","_key":"a1c47459bb72","_type":"span","marks":[]}],"_type":"block","style":"normal"},{"children":[{"_type":"span","marks":[],"text":"Now let’s get to the most important part of this review, is Magic 3 any good? It’s always hard to drop a climatic franchise finale. George Lucas was unsuccessful with Return of the Jedi. Christopher Nolan failed with The Dark Knight Rises. Francis Ford Coppola struck out with The Godfather Part III. Thankfully in the case of Nas and Hit, the conclusion to their six album run ends on a poignant and intimate note. Nas runs rampant over soulful Hit Boy instrumentals, far from the grandiose, stadium-made production of Kings Disease 3. Magic 3 showcases Nas doing what he does best, being introspective and painting vivid pictures, that if you close your eyes, you can see as clearly as a film on an IMAX screen. ","_key":"714f127d9ef60"}],"_type":"block","style":"normal","_key":"544c8dadad98","markDefs":[]},{"style":"normal","_key":"4d73c4a6fa20","markDefs":[],"children":[{"marks":[],"text":"The highlights of the album begin with “Fever”, an up-tempo celebration of Nas’ illustrious career and milestone 50th birthday over a tribalistic, thumping beat. Nas refuses to take his foot off the gas pedal with “TSK” as Nas takes Floyd Mayweather-like jabs at critics and challenges his peers to “get back to the art, not the trends”. Conceptually, Nas is at his best on the emotional “No Tears” as he takes turns having a conversation between his older and younger self. On “Never Die”, Lil Wayne delivers arguably the best verse on the album, as he gets revenge on the QB poet for the homicide he committed on Carter 4’s “Outro”. The brilliance of Nas’ storytelling capabilities truly shines on “Based On True Events, Pt. 2”, where he channels his inner Donald Goines to tell us a live street tale as if the listeners are gathered around a campfire. Things only get better as Nas wraps up the album reflecting on his journey navigating through the music industry on “Japanese Soul Bar”, while also leaving the door open for future collaborations with Hit on “1-800-NAS\u0026HIT”.","_key":"4f4a2113fe3c0","_type":"span"}],"_type":"block"},{"markDefs":[],"children":[{"marks":[],"text":"As consistent as Magic 3 is for the majority of its 46-minute length, there are some misses. Make no mistake, there is not one wack record on the album. However, songs like “Pretty Young Girl” is where the album loses a little steam, as the Queens lyricist desperately searches for his dream woman over a 9th Wonder-like beat. Another example is “Blue Bentley” that has Nas juggling multiple women as he struggles with the complexities of his own fame in an era where women have developed a male approach to dating. While Hit Boy supplies Nas with a ridiculous head-nodding beat, the record seems out of place with the overall themes of the album. These records come across as blatant lazy attempts to cater to his female fans. For a man who is celebrating 50 years of life, records seem somewhat out of place with the mature themes of the album. We all know Nas is capable of much more than to resort to, dare I say, “gimmicky” types of songs.","_key":"970d712d85920","_type":"span"}],"_type":"block","style":"normal","_key":"2f449f4dbd2a"},{"style":"normal","_key":"a4e3525eeba4","markDefs":[],"children":[{"marks":[],"text":"Another criticism of the album is with this being the seemingly final album with Hit producing everything from top to bottom, you would have hoped Nas would take more time crafting this album and came a little harder (as New Yorkers would say, \"PAUSE\"). We all know Nas is 50 years old and it is almost impossible for him to duplicate the hunger he had when he was younger. Nas no longer needs to “out-rap” the competition as he no longer has anything further to prove. His place in hip hop is forever etched in stone. However, on certain records I wanted to hear more energy from Nas and for him to hit those pockets a little more precisely. These critiques are merely nitpicking from a devoted Nas fan over the span of his career, as it does not take away from how GOOD this album sounds. At the end of the day, I am grateful to still be hearing Nas rap at an elite level.","_key":"88ec7928603a0","_type":"span"}],"_type":"block"},{"children":[{"_type":"span","marks":[],"text":"Does Magic 3 conclude on a good note? I would say so. Magic 3 joins the ranks as one of the best albums out of the Nas/Hit sessions.Too early to tell where it ranks in the legendary six album run, but it is up there with Kings Disease 2 and 3, as well as the first Magic. Only time will tell, but this album seems built for endless replays in the coming years. Let the debates begin. Magic 3 is arguably a top five Nas album in his catalogue.But to both Nas and Hit Boy, I sincerely say THANK YOU. Never in a million years would I dream of such an unlikely combination working so well. If it were up to me, I would keep the run going for the rest of the 2020’s. As a grown man who still is enamored with hip hop culture, it is refreshing to listen to music that is both mature and contemporary from one of my favorite emcees. Nas has truly separated himself from the rest of the pack with this run this late in his iconic career. Hit Boy also stamps his place as one of the most versatile producers in the game right now and has the potential to be one of the best of all time. I look forward to hearing more “magic” from both artists, albeit separately.","_key":"7764dc9595960"}],"_type":"block","style":"normal","_key":"97a790399dbe","markDefs":[]}],"slug":{"current":"does-the-magic-continue-with-nas-and-hit-boy-s-finale","_type":"slug"}},{"_createdAt":"2023-10-22T22:02:53Z","_rev":"7V6W77YnYTSXWZozOYzSiY","_type":"post","_id":"fbcdd821-6741-4c93-8d98-2d776bca5436","title":"Has Scorsese Struck Oil Again With Killers of the Flower Moon?","slug":{"current":"has-scorsese-struck-oil-again-with-killers-of-the-flower-moon","_type":"slug"},"overview":"Killers of the Flower Moon Review","_updatedAt":"2023-10-22T22:10:49Z","content":[{"style":"normal","_key":"decf0ba76594","markDefs":[],"children":[{"_key":"c13361cf5a20","_type":"span","marks":["strong"],"text":"by Jamil Weeks"}],"_type":"block"},{"asset":{"_ref":"image-d940c90e8284270e8fcab489c4e6ad8be197040f-2000x3000-jpg","_type":"reference"},"_type":"image","_key":"2aa3b9813ba7"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"When you think of cinema, you think of Martin Scorsese. His movies have been studied in film courses across the country. Scorsese has given us countless classic films since the 1970s, focusing on flawed characters put in difficult situations. His films explore themes of human morality and the human condition. The trend continues with his latest offering, Killers of the Flower Moon, where Scorsese dives into the awful things men will do to satisfy their greedy tendencies. Money is the root of all evil, and this sort of evil takes center stage in Scorsese’s latest, starring Leonardo DiCaprio, Robert DeNiro, and Lily Gladstone. Based on a true story, this epic crime drama takes place in 1920s Oklahoma as an Osage tribal town is invaded by outsiders looking to capitalize on the oil found underneath the ground.","_key":"efe76d67231f0"}],"_type":"block","style":"normal","_key":"f87c33eb573b"},{"style":"normal","_key":"2479e6e89422","markDefs":[],"children":[{"marks":[],"text":"Killers marks the 10th time Scorsese has worked with DeNiro and the seventh time he has worked with DiCaprio, but the first time all three have worked together. The cinema gods are smiling this weekend, as both veteran actors deliver powerful performances. DeNiro has not been this menacing since his portrayal as Max Cady in Scorsese’s 1991 remake of Cape Fear. In the case of DiCaprio, you can make a genuine argument that his portrayal of Ernest Burkhart is the pinnacle of his acting career. With DeNiro, as William Hale, and DiCaprio, the movie shows how evil can take different forms. DeNiro serves as a diabolical mastermind, who pulls the strings from the shadows like a devilish puppet master. DiCaprio, as Hale’s nephew, Ernest, might be even worse. You never doubt his love for his wife, Molly Burkhart (portrayed by Lily Gladstone), but his weakness for money supersedes everything. The fact he is so easily coerced into doing his uncle’s bidding makes him just as dangerous, if not more. You keep waiting for him to grow a backbone and do the right thing, desperately hoping that seeing the devastation being wreaked upon the Osage community will be enough for him to muster up the courage to stand up to his uncle.","_key":"a97f7fabd7c60","_type":"span"}],"_type":"block"},{"children":[{"_type":"span","marks":[],"text":"As brilliant as both DeNiro and DiCaprio are in this film, Lily Gladstone steals the show. Most of the killings that happen in the film are brief, but it is through Molly that you see the psychological damage inflicted on the survivors. Molly serves as the face of the Osage community, as you see how she is being mentally tortured by the wolves in sheep’s clothing that surround her and her family members.To her and the other members of the Osage tribe, the outsiders are like famished vultures circling around them waiting for tribe members to die so they can feast upon them. Molly remains stoic throughout the film in the face of all the chaos surrounding her. Despite her justified suspicions, she continues to believe in the good in Ernest, proving that love is truly blind.","_key":"f2ad0b3bb1890"}],"_type":"block","style":"normal","_key":"5864bffd8354","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Despite Lily Gladstone serving as the heart of Killers, she takes a back seat to DeNiro and DiCaprio, as the film concentrates more on their plotting tactics. As much as we can applaud Scorsese for telling a story most people never knew about, you can also criticize him for the way he chose to tell the story. You can make the argument the film would have been more compelling if told from the perspective of the Osage people. Outside of Molly, not too much screen time is devoted to the other members of the Osage nation portrayed. Even Molly does not get enough scenes to properly flesh out her character. Lilly portrays Molly as smart and cunning, as she reveals in an early scene that she knows Ernest only wants to get close to her because of her money. Yet her character’s actions continually fly in the face of logic, as she seems like she would have figured out what Ernest and his cronies were up to before the action unfolds. The brutal killings that occur in the movie would have more gravity to them if we got to know those Osage characters more. So even though this film sheds light on the atrocities that were inflicted within their community, the victims play second fiddle in what is essentially supposed to be their story. ","_key":"c1adc4e225f00"}],"_type":"block","style":"normal","_key":"a021809550a6"},{"_type":"block","style":"normal","_key":"cb2815e2fb06","markDefs":[],"children":[{"marks":[],"text":"Much has been stated about the runtime of Killers. It proves to be a valid criticism as you really feel the length of this film. At almost three and a half hours, watching this film in theaters is almost as long as working half a shift at work. The pacing of the film does not help. The first hour of this movie drags at a snail’s pace, as Scorsese takes his time to tell the story and set up the characters. When I checked my watch about an hour into the film, I literally thought to myself “you mean I still have two and half hours left?!” Some scenes linger a little too much. Gone are the days when Scorsese had quick montage shots that kept the film going at a faster pace. With The Irishman and this film, Scorsese lets the scenes breathe, almost to the detriment of the movie. The film does pick up once the investigation into the murders starts, but it takes a long time to get to that point. ","_key":"0a6e12ff2b870","_type":"span"}]},{"_type":"block","style":"normal","_key":"f6d50f3715d4","markDefs":[],"children":[{"_key":"e6023e71e4a00","_type":"span","marks":[],"text":"The investigation by the “Bureau of Investigation”, a prelude to the organization that would become the FBI, as well as the ensuing trial is where this film really starts to gain steam. The last hour and a half or so seem to fly by as things begin to unravel for William and Ernest once the Bureau shows up to town. The audience is treated to some great cameos, most notably by Jesse Plemons, who portrays officer Tom White, sent from Washington to investigate the murders. There are more notable cameos sprinkled throughout the second and third acts, but I will not spoil any of them so you can be generally surprised when you watch the film.Killers excels with the casting, as there are literally no weak performances in the film, no matter how big or small the role. Expect at least a couple of Oscar nominations during award season."}]},{"style":"normal","_key":"4562a1ba1564","markDefs":[],"children":[{"_type":"span","marks":[],"text":"If you can, I recommend watching this movie in theaters. We may not see too many more films released in theaters from such a brilliant cinematic genius. Killers could be the last time we see Scorsese and DeNiro work together, so you do not want to take a film like this for granted. In an era where the box office is dominated by franchise blockbusters and superhero films, it is refreshing to watch a movie that is filmed in real locations. Absent are the green screens and questionable CGI effects. Just good old-fashioned storytelling. Killers certainly will be one of the main competitors for Christopher Nolan’s Oppenheimer biopic. While it may be hard to watch, movies like this are important and deserve to be told, especially since the events that took place were swept under the rug. The reward is watching a fantastic film that proves to be one of the cinematic highlights of the year in every facet, whether you see it in theaters or at home when it is released on Apple TV.","_key":"92bc21a6eac50"}],"_type":"block"}]},{"_id":"eb597e6c-1464-4bae-9d3f-2dc053d24760","title":"Is Busta Rhymes a Top 10 MC?","_updatedAt":"2023-10-22T02:22:09Z","content":[{"markDefs":[],"children":[{"_key":"a32110669e03","_type":"span","marks":["strong"],"text":"by Jamil Weeks"}],"_type":"block","style":"normal","_key":"2f96e081be83"},{"_type":"image","_key":"6d5d4d8ae1c3","asset":{"_ref":"image-f316989350568e302aa319f5b3214af65ba39e26-300x450-jpg","_type":"reference"}},{"children":[{"text":"You can make the argument that you are really not a fan of hip-hop until you get into a spirited debate over top 10 rappers' lists. Whenever this topic has surfaced throughout the years, the common denominator amongst these lists are who I call the \"usual suspects\" (Pac, Big, Nas, Jay, etc.). In all the lists compiled over the years from various media outlets and fans alike, I have noticed one omission, which I always found puzzling. Trevor Tahiem Smith, Jr. a.k.a. Busta Rhymes.","_key":"6bb3586c2ffc0","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"2bba7de31060","markDefs":[]},{"_type":"block","style":"normal","_key":"1c3431f1d9b5","markDefs":[],"children":[{"_key":"57633023076b0","_type":"span","marks":[],"text":"Busta Rhymes first burst on the scene in the early 90's, before anyone knew who Biggie, Jay-Z, or Nas were. His stage name was given to him by legendary MC, Chuck D. As part of the group, Leaders of the New School, Busta Rhymes would instantly stand out as the star of the group with his \"dungeon dragon\", animated style of rapping. Even back then, he managed to have the standout verse in the classic posse cut \"Scenario\" with A Tribe Called Quest."}]},{"style":"normal","_key":"c089aafb9c8e","markDefs":[],"children":[{"_type":"span","marks":[],"text":"After the group dissolved, Busta embarked upon a solo career in a time when East Coast hip-hop was experiencing a renaissance. Competition was abundant and fierce. And not just in the tri-state area. You had the Dungeon Family, Death Row, Mobb Deep, Wu-Tang, Bone, 2Pac, Scarface, and countless other acts sprinkled throughout the 90's. Busta faced the ineviable task of having to redefine himself as a solo artist amongst his peers, who some would go on to become the greatest we have ever heard. He would go on to have a legendary career as a solo artist, reaching such heights as having million-dollar budget videos with big stars like Janet Jackson.","_key":"c98af81549020"}],"_type":"block"},{"style":"normal","_key":"0d75a97bdb99","markDefs":[],"children":[{"marks":[],"text":"So why is Busta not even in the discussion for top 10? He has hit records. He has broken other artists in the game, most notably Rah Digga, Roc Marciano, and Spliff Starr. He had his own crew of spitters in Flipmode. His music videos were so creative and innovative with his cartoon-ish like imagery, that would only be rivaled by Ludacris and Missy. He sold platinum albums. He is highly respected amongst his peers. Let us also not forget that he is one of the greatest, most energetic live performers ever (remember MCing is all about stage presence and how you get the crowd moving). He has longevity, celebrating decades of remaining relevant in the revolving door that is the music industry. So what gives?","_key":"33aa2e4710610","_type":"span"}],"_type":"block"},{"style":"normal","_key":"279506afbddf","markDefs":[],"children":[{"_key":"c18fbf7d12af0","_type":"span","marks":[],"text":"Well one reason might be the lack of a clear-cut classic album. Wow you can make the argument that his first three solo albums were big enough and have enough quality material to be considered classics, the bottom line is nobody celebrates these albums every year like we do the true classics, like Paid in Full or Death Certificate. I do not doubt some people might consider any one of Busta's 90's offerings as personal classics. But without the masses of hip-hop as a collective recognizing an artist's album(s) as true definitive classics, then Busta's albums might not have had that impact that changed the game for generations after him. Most of the rappers who enjoy top 10 consideration have at least one to two definitive classics in their catalogue."}],"_type":"block"},{"markDefs":[],"children":[{"marks":[],"text":"Another reason Busta might be left out of top 10 discussions is because of subject matter. The greats all have one thing in common…versatility. They can make us dance or make us think. Make us laugh or make us cry. They can tell stories or be introspective. Busta is known for his high-energy bars that raise your adrenaline and make you want to dance or bop your head. But what else is he known for in his music. Can you name a classic Busta song that did not talk about the streets or was a radio friendly song? Do hip-hop fans take Busta’s music as seriously as a Pac or Nas or Big or Rakim? We know the talent and skill level Busta raps about. But I do not think most rap fans feel Busta can rap about ANYTHING and make it hot like the true greats.","_key":"fb7a216ef66d0","_type":"span"}],"_type":"block","style":"normal","_key":"1769439cda3d"},{"markDefs":[],"children":[{"marks":[],"text":"Last, the true greats do not follow trends, but set the trends. What also might be hurting the case for Busta being a top 10 MC is his identity as an artist. The greats always have a great story to tell about themselves. They carve out their own legacy. Earlier in Busta’s career, nobody sounded like him. His style was unique from fashion to slang to imagery. However at some point, Busta succumbed to the music industry and started portraying a lifestyle of a “Coke rapper”, the drug dealer turned rapper formula that worked for so many. This is when Busta’s career started to lose momentum. There was nothing about him that stood out. The fanfare went, as did the frequency between projects as well as the public’s interest. With no true classic and demand dying down for a new Busta project, that had to have an effect on the way Busta ranked amongst his peers.","_key":"d8459c4eb2790","_type":"span"}],"_type":"block","style":"normal","_key":"2384eba08212"},{"_key":"3dce11278508","markDefs":[],"children":[{"marks":[],"text":"Busta Rhymes to me is arguably a top 25 MC, which actually still makes him one of the greatest. To be that high amongst the countless rappers who came before him and after him is quite the accomplishment. Maybe he is not a true top 10 MC but make no mistake about it. Trevor gets busy. He has rapped amongst the greatest lyricists of all time and held his own. He still continues to make music today and remains a relevant force in the music business. We salute Busta Rhymes for all his contributions to hip-hop.","_key":"b0aca71d3ea70","_type":"span"}],"_type":"block","style":"normal"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"","_key":"a2337dc43b40"}],"_type":"block","style":"normal","_key":"ae9bd79d1fc8"}],"overview":"An examination of Busta Rhymes' placement amongst hip hop's elite emcees","_createdAt":"2023-08-18T18:50:29Z","_rev":"7V6W77YnYTSXWZozOY59zo","_type":"post","slug":{"current":"is-busta-rhymes-a-top-10-mc","_type":"slug"}},{"_updatedAt":"2023-11-23T01:13:53Z","content":[{"style":"normal","_key":"34f20dfd412d","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"by Jamil Weeks","_key":"06261e498cd90"}],"_type":"block"},{"_type":"image","_key":"99236d92a478","asset":{"_ref":"image-03182b63af5e70d2638bc1c3a4cc790108f0770f-620x593-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_key":"5ea4e6f24dde","_type":"span","marks":[],"text":"Illmatic birthed the legend. It Was Written birthed the star. After Nas dropped arguably the greatest debut in hip-hop history, the big question was what would he do next. As official as Illmatic was, another New York native from Brooklyn also dropped a classic first album the same year that would later become the East Coast blueprint for platinum success. Illmatic was a timeless classic, but loomed in the shadows of the towering impact that would be Biggie Smalls' Ready To Die album. Nas originally intended for his second album to be entirely produced by the Queensbridge legend, Marley Marl. Once those plans fell through, he ended up linking up with the Trackmasters. They would be Nas' Puffy \u0026 the Hitmen, providing Nas with polished, mainstream instrumentals for him to unleash his poetic lyrics upon. In doing so, Nas transitioned from raw lyricist to polished artist. It Was Written was definitely not critically received as well by the masses as Illmatic, but I'm here to lay the case for why It Was Written was just as important, if not more, as Illmatic (as sacrilegious as that might sound)."}],"_type":"block","style":"normal","_key":"7af5c389daa8"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Illmatic gave us a young, hungry Nas. A Nas that had so much to say the vocabulary effortlessly spilled onto every grimy New York beat supplied by possibly the greatest ensemble of producers on a hip-hop album. As crazy as that album was lyrically, it failed to connect with people who were not hardcore hip-hop fans. Nas had to take note at the success of Biggie, who had a more straightforward approach to lyricism. It Was Written saw Nas spit with a more refined technique and cadence.Nas seemed to have a razor-like focus in coming for the crown that had been bestowed upon Biggie with his debut. The lyricism was prevalent throughout the LP but more controlled and with more style. The flow was more sharpened, more precise. Song structure took more precedence where Illmatic was more organic and broke rules. As a result, it made Nas' complex lyricism more accessible. It Was Written proved Nas was just as formidable as a music artist as he was a lyricist.","_key":"52f5aa19e29a0"}],"_type":"block","style":"normal","_key":"4da549fd3c50"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"While Illmatic's sound was infused in the traditional boom bap East coast sound, It Was Written's production took a more universal approach. Due in large part to The Trackmasters, It Was Written featured Nas rapping over the type of commercial instrumentals that would garner more radio spins and allow him to get his voice out to a more diverse audience. It Was Written showcased a more balanced sound that blended the hard, grimy New York sound beautifully with radio friendly, dare I say, R\u0026B-ish type melodies. In that sense, Ready To Die was a direct influence. But Nas took more risks incorporating a West Coast influence with \"Nas is Coming\" and \"Street Dreams\" (using the same sample as 2pac's \"All Eyez On Me\"). In fact, Nas was the first East Coast artist to work with Dr. Dre, a slept on fact of It Was Written. Production from Havoc, DJ Premier, L.E.S., and Live Squad still fed the New York streets with the introspective, Donald Goines, poignant lyricism that you came to expect from Nas. This is how It Was Written succeeded where Illmatic failed, which is producing a hit record. Nas was able to elevate from underground phenomenon to MTV/radio star with \"If I Ruled The World\" and \"Street Dreams\" (as well as the remix with R.Kelly). Illmatic made an attempt to get radio spins with \"It Ain't Hard To Tell\", which unfortunately came out the same time as SWV's single, \"Right Here\", using the same Michael Jackson \"Human Nature\" sample.","_key":"4249aeb7e80e0"}],"_type":"block","style":"normal","_key":"ffb75d5e6e75"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Nas would later brag about how his first album had no famous guest appearances. However, It Was Written featured a slew of guests that all brought their A game to enhance what I consider to be Nas' second classic. It Was Written was the album that continued to establish his alliance with Mobb Deep (which featured a Prodigy verse originally intended for CNN's \"LA, LA\" response to The Dogg Pound). Havoc supplied the grimy beats to \"The Set Up\" and \"Live N**** Rap\", which both sounded like they could have fit perfectly on their Hell On Earth album. A young Mobb Deep dragging us through the harsh terrains of the Queensbridge projects with their brand of \"tough guy\" rap and dun language. Let us not forget, this was when Prodigy was in his prime and arguably a top 5 rapper. It Was Written also introduced us to The Firm. And while the Firm did not pan out to be the rap supergroup we thought they would, \"Affirmative Action\" turned out to be a classic collaboration. AZ, Cormega, and up and comer, Foxy Brown, laced a competitive posse cut that still has folks arguing who had the best verse in 2023. And then, there was Lauryn Hill who lended her beautiful vocals over Nas' biggest hit record, \"If I Ruled The World\". Nas proved he could hold his own with the cream of the crop the 90's had to offer.","_key":"66a6052bec1c0"}],"_type":"block","style":"normal","_key":"2fc4a33aed27"},{"markDefs":[],"children":[{"text":"The mafioso/coke rap subgenre was the trend in the mid 90's and provided us with countless classics. You had AZ's Doe or Die, Raekwon's Only Built For Cuban Linx, Junior Mafia's Conspiracy, Jay-Z's Reasonable Doubt, Kool G. Rap's 4,5,6, etc. All had roots in a style that took off with Biggie's Ready To Die. It Was Written turned out to be one of the most influential albums within that sub genre. Nas took flack from hip-hop purists that felt Nas was more Martin Scorsese than Donald Goines. However, it was that style that allowed Nas to paint vivid street tales with a cinematic precision. Firmly establishing Nas as one of the greatest storytellers of his era, Nas continued to improve as an artist on It Was Written with conceptual gems like \"I Gave You Power\", which was a concept Pac would take a stab at on his Makaveli album, and the lyrical masterpiece \"The Message\".","_key":"5821b34cf7130","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"ddcaf7638441"},{"_key":"459d19616e0c","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Illmatic is an undeniable classic. But let us not forget how great It Was Written was and is to this day. No album in the 90's, other than Big Pun's Capital Punishment, Jay-Z's Reasonable Doubt and Hard Knock Life, and Biggie's Ready To Die and Life After Death, blended the street sound with the commercial sound better than It Was Written. A solid contribution to the mafioso rap sub-genre of hip-hop that included classic collaborations and a reinvigorated Nas with one of the illest, sharpest flows he has ever displayed in his career. It Was Written was important on many levels. It helped pave the way for East Coast dominance in the rap game that would become so prevalent in the mid to late 90's when the West Coast had taken over rap. People forget Nas was one of the few East Coast rappers to see multi-platinum success at the time with the West Coast gripping stranglehold over the minds of hip-hop fans. In addition, a lot of people discovered the brilliance of Illmatic off the strength of It Was Written. It Was Written was so good that it made people go back and listen to Illmatic, an album that otherwise would probably not be as highly recognized and appreciated without the success of It Was Written. It Was Written WAS the album that gave Nas his fanbase and helped to establish Nas as one of the best rappers the game has ever seen. Nas was able to successfully dodge the sophomore jinx. It Was Written has also aged well and I, personally, consider the album to be a classic. These are my thoughts. Thus, it was written......","_key":"9c43e7e4f1bd0"}],"_type":"block","style":"normal"}],"slug":{"current":"it-was-written-better-than-illmatic","_type":"slug"},"overview":"Making the case for It Was Written being better than Illmatic","_createdAt":"2023-08-18T18:50:16Z","_rev":"ZZiJJd1zoc33D9f7kT8q9J","_id":"39991e54-71e2-40bd-8bc9-0bf84fbe2fcd","_type":"post","title":"It Was Written Better Than Illmatic?"}],"ms":90}","status":200,"tags":["/page"]},"revalidate":60}