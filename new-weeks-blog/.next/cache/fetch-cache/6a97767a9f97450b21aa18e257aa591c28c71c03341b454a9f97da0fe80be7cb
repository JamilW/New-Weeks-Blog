{"kind":"FETCH","data":{"headers":{"accept-ranges":"bytes","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","apicdn-cache-control":"public, max-age=60, s-maxage=3600, stale-while-revalidate=60, stale-if-error=3600","cache-control":"public, max-age=60, s-maxage=60, stale-while-revalidate=15, stale-if-error=3600","content-encoding":"br","content-length":"42810","content-type":"application/json; charset=utf-8","date":"Tue, 16 Jul 2024 19:55:13 GMT","sanity-gateway":"k8s-gcp-us-e4-prod-ing-02","sanity-query-hash":"nWI6X/xPdkw uxvbys1qyTQ","server-timing":"api;dur=55","strict-transport-security":"max-age=63072000; includeSubDomains; preload","vary":"accept-encoding, origin","via":"1.1 google","x-sanity-age":"1700","x-sanity-shard":"gcp-eu-w1-01-prod-1042"},"body":"{"query":"*[_type == 'post' \u0026\u0026 _createdAt \u003e '2024-04-01' ] | order(_createdAt desc)","result":[{"content":[{"_key":"f1f97989f214","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"81b3ebdd980f"}],"_type":"block","style":"normal"},{"_type":"image","_key":"45c8ee4c5cba","asset":{"_ref":"image-f7087396bb9f70425963149e862afecbe8b8e611-1280x720-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Rap veterans are back outside. Rather it’s AZ, Black Thought, or Nas, legendary emcees in their late 40s and 50s are bucking the trend that rap is a young man’s game. Reviving the formula of locking in with one producer, we have albums from Cormega/Havoc, Nas/DJ Premier, LL Cool J/Q-Tip, and Snoop/Dr. Dre on the horizon. However, this weekend we have been treated to an album that might have set the standard for what 9th Wonder has dubbed “adult contemporary hip hop”. The highly anticipated album from Common and Pete Rock, The Auditorium Vol. 1, has finally been released. The album is a wet dream for “old head” hip hop purists who yearn for a return to traditional boom bap prominence. Chicago and Mount Vernon’s finest have joined forces to deliver something truly special. Both hip hop legends have made classic albums individually. Now they have challenged themselves late in their careers to make an album that can stand the test of time as a duo. ","_key":"bea627585111"}],"_type":"block","style":"normal","_key":"b320626eab44"},{"style":"normal","_key":"c23a78cc87cb","markDefs":[],"children":[{"text":"The pair has spent the last couple of months releasing singles to give listeners a preview of what brilliance lies ahead. The lead single, “Wise Up”, features an upbeat monster of a Pete Rock beat allowing Common to reflect on his own self-awareness that prevented him from succumbing to life’s pitfalls. The duo followed up with “Dreamin’”, where Common daydreams of interacting with iconic heroes from the black community that have inspired him to dream big. On “All Kind of Ideas”, Pete Rock puts the beat machine down and picks up the mic to trade bars with Common on how their love for hip hop keeps them tapped in on the pulse of hip hop. The last single released before the official album drop was “Fortunate”, where Common expresses his gratitude for all the victories, big or small, that has led him to where he is today as a man over a melodic Pete instrumental. These well-rounded singles were just the tip of the iceberg for what we were in store for once The Auditorium finally arrived. ","_key":"159491eb508c","_type":"span","marks":[]}],"_type":"block"},{"_type":"image","_key":"e7d97a24e6d2","asset":{"_ref":"image-b884ba760c41d8456c42f652b0ccb9e5613f5122-1800x1200-webp","_type":"reference"}},{"_key":"f9887a757ba8","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Common is probably one of the most under appreciated rappers since emerging on the scene in the early 90s. Quietly he has put together a catalog that rivals your favorite rapper. Common has worked with elite producers before, rather its Kanye West, J. Dilla, or No ID. But his efforts with Pete Rock might be his best work yet. Common’s clever and thoughtful penmanship proved to be a worthy counterpart to Pete’s soul-laden, nostalgic production. Common sounds like he has not lost a step as a writer. With each song, Common layers his rhymes in witty wordplay and clever entendres. An example is on one of the standout cuts, “Chi-Town Do It”, where he rhymes, “At the top of my game, a gladiator/I’m glad I ate her, are you not entertained?” Common is a master at being able to convey deeper meaning with multi-syllable rhymes with ease. Like on “Now and Then” where he spits “I'm from the windy city where we blow trees to get our souls ease/Reality falls like gold leaves”. The Auditorium is a reminder that Common is cut from an elite cloth. After this album, there needs to be a new discussion on his placement on these best rappers lists. \n\nPete Rock has solidified himself as one of the greatest and most consistent producers in hip hop history. This album will only build on that legend. With a career spanning over 30 years, Pete proves that he has not lost a step on The Auditorium Vol. 1. The production on this album is absolutely flawless. Pete is an expert at making his vintage style sound brand new. On records  like “Stellar”, Pete demostrates how he does not have to stray from his signature sound to cook on a beat machine. The noteworthy track, “We’re On Our Way”, makes you feel Pete is showing off with a beat that sounds as if the spirits of our ancestors flowed from Pete’s soul into the beat machine. The instrumental is the perfect song for a rapper of Common’s ilk to catch wreck with an offbeat type of flow. The production on this album is like a delicately seasoned soul food plate from big momma’s kitchen to nourish your soul. The ingredients are carefully selected chopped up jazz and soul samples, complementary DJ scratches, vibrant baselines, and thunderous drums. On The Auditorium, Pete ensures hip hop heads are eating good!","_key":"9e9caab69ecf"}],"_type":"block","style":"normal"},{"_type":"image","_key":"4be655b64992","asset":{"_ref":"image-fee1936ce36292d929d578911ceecc980ab71673-2560x1550-jpg","_type":"reference"}},{"markDefs":[],"children":[{"marks":[],"text":"The Auditorium Vol. 1 will dispel the narrative that older hip hop artists are not capable of greatness. Neither Common nor Pete Rock sound “flabby and sick” on this album. Instead they prove they are both true masters of their craft. Still effortlessly cranking out music with timeless potential. Still releasing records that can compete with their best work in the latter stage of their careers. The Auditorium is a statement album that you do not have to compromise your artistic style for the sake of satisfying current rap fans. Common and Pete are putting the entire industry on notice. A certain standard has been set and all future rapper/producer combos are  going to have their work cut out for them. The “stuck-in-the-90s” rap fans will salivate when they hear this album. The album is vintage 90s rap, sounding as if you could have released it back in the summer of 1995 and it would be able to compete with the classics from that year. Common and Pete have transformed the planet into their own personal auditorium. One thing is certain, after hearing this album I am eager to revisit this auditorium for volume two!","_key":"8e833502cb67","_type":"span"}],"_type":"block","style":"normal","_key":"029d45bc892e"}],"slug":{"current":"the-industry-needs-front-row-seats-to-common-and-pete-rock-s-auditorium","_type":"slug"},"_id":"33c5e7ac-d4ff-4f16-816b-bcb5314c28f3","_updatedAt":"2024-07-14T15:14:55Z","_rev":"HdJONGqRccLIid3oEECShv","_type":"post","title":"The Industry Needs Front Row Seats to Common and Pete Rock’s Auditorium ","overview":"The Auditorium: Vol. 1 Music Review","_createdAt":"2024-07-13T16:02:48Z"},{"_createdAt":"2024-07-12T20:51:23Z","_rev":"j9BPWHem9m3oUugvhOHxEV","_type":"post","_id":"cffdc739-4736-490f-bf40-e8c9d826c86f","title":"Longlegs: Does it Live Up to the Hype?","_updatedAt":"2024-07-13T13:06:47Z","overview":"Longlegs Film Review","content":[{"style":"normal","_key":"5a134b213400","markDefs":[],"children":[{"marks":["strong"],"text":"By Jamil Weeks","_key":"aa9c71e9e923","_type":"span"}],"_type":"block"},{"_type":"image","_key":"abc93878057c","asset":{"_ref":"image-c2f23a8d8de83cc922f4115aa06492d13c880605-939x528-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Horror is making a comeback on the silver screen in 2024. Films like The First Omen, In A Violent Nature, A Quiet Place: Day One, and MaXXXine have enjoyed modest critical and commercial success, with Heretic and Nosferatu slated for releases later this year. Film studios like A24 and Neon have gained traction with their brand of “elevated horror”. Neon’s latest picture, Longlegs, is no exception to this phenomenon. A psychological horror thriller offering a fresh makeover of classic serial killer movies from the 90s. Directed by the son of Anthony Perkins (famously known for his portrayal of Norman Bates in the Psycho films), Osgood Perkins, Longlegs is the story of an FBI investigation into a series of mysterious unsolved murders over the course of decades. FBI agent, Lee Harker (played by Maika Monroe), has been assigned to the case due to her highly intuitive ability for sniffing out trouble. She is recruited by Agent Carter, played by the criminally underrated Blair Underwood, who is desperate to solve the case. The mystery that lies at the center of these bizarre murders is a man known as Longlegs, played by Nicholas Cage. \n\nPerkins draws on inspiration from classic horror and thriller films, in Longlegs. One cannot help but notice the similarities between Lee Harker and Clarice Starling from The Silence of the Lambs. The female FBI protagonist who experienced childhood trauma recruited to stop a serial killer before he kills again does sound familiar. Almost every scene pays homage to Stanley Kubrick stylistically with Perkins’ use of symmetric shots and clever use of lighting to technically enhance the storytelling. Each scene is meticulously shot to display every intricate detail from the foreground and background within the frame. The film might also remind you of David Fincher serial killer films with its disturbing imagery and dreadful tone that takes you to some very dark places psychologically. With all the nods to these types of films aesthetically, it makes sense that Perkins sets the events of the film to take place in the early 90s. Despite these likenesses, Longlegs, fortunately, is not a carbon copy of these films. Perkins merely uses these familiar elements to invoke nostalgia. Disclaimer: Longlegs is not what you think it is. ","_key":"6c8bc860865f0"}],"_type":"block","style":"normal","_key":"81e464d8df40"},{"_type":"image","_key":"389deb184c11","asset":{"_ref":"image-d48a2c4cbb488b6de5e39d369a9f1f04e2edc960-1400x700-jpg","_type":"reference"}},{"markDefs":[],"children":[{"marks":[],"text":"Longlegs has potential to be a polarizing film amongst audiences. If you are expecting a straightforward detective/serial killer tale, you may be underwhelmed by what Perkins is doing here. Without giving away too much of the plot, the film flirts with the idea of there being an underlying supernatural component to the slayings. This idea is explored but never fully explained, leaving more questions than answers by the time the end credits roll. Perkins is sure to rub some people the wrong way by doing this while simultaneously catering to moviegoers who appreciate not being spoon-fed plot points.  Safe to say the story unravels in a way you do not expect, given the footage from the trailers. The movie introduces several ideas that you do not understand how they interconnect until the third act where Perkins ties everything together. ","_key":"30e8237f603d","_type":"span"}],"_type":"block","style":"normal","_key":"366599ef1824"},{"markDefs":[],"children":[{"marks":[],"text":"Cage is nuts. We all know this given the types of films he has appeared in for the past 10 years. And, yes, Nicholas Cage does go full Nicholas Cage in moments. Surprisingly Cage manages to tame the crazy somewhat in the majority of scenes. Longlegs has potential to be an iconic horror character given how well the movie will be received by audiences. You have never seen Cage like this in any of his other films. Besides being unrecognizable with the facial makeup prosthetics, Cage delivers a truly creepy performance that keeps you fixated on him for every second of screen time Perkins allows due to the  unpredictably unhinged nature of his character. You can tell he had a lot of fun playing the demented character as Cage milks every second he can with the screen time he is given. Cage is in the movie just enough and his portrayal of Longlegs is worth the price of admission alone. ","_key":"a41a5f174368","_type":"span"}],"_type":"block","style":"normal","_key":"9b5a42c8737f"},{"_type":"image","_key":"e4ee98db9bcb","asset":{"_ref":"image-ea934eaaae967ca649cbde1d9ae93d06bb92810d-1400x700-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_key":"93568327c905","_type":"span","marks":[],"text":"Perkins juxtaposes the over-the-top theatrics of Cage’s performance with a subdued and quietly fierce performance from Monroe. Lee Harker is as shy and awkward as she is cunning and determined. The closer she gets to solving the case, the more is revealed about her troubled past. Harker wears her emotional drama in her introverted facial expressions with her cumbersome interactions with the other characters. Monroe does a great job portraying a character who struggles with underlying psychological damage. Barker’s conversations with her mother, played by Alicia Witt, subtly imply she did not have a normal upbringing as a child. As mentioned earlier, the movie hints of mystical factors at play with Harker’s investigation. She is a little too good at her job, almost as if she has some sort of psychic ability. The movie may be titled Longlegs, but this is Maila Monroe’s movie as Lee Harker is the headt of the film. \n\nA few weeks ago, I had no idea this movie even existed. The momentum seemingly came out of nowhere due to the grassroots marketing and brilliant viral campaign leading to word-of-mouth spreading like wildfire. In the span of a couple of weeks, Longlegs became one of my most anticipated films of the year. Did it live up to the hype? Yes and no. If you’re expecting an ending that will shock you like Seven, you might be let down. The conclusion may be a little too predictable for some so the build up may not lead to a satisfying pay-off.  However the movie does maintain an edge-of-your-seat uncomfortable tension throughout intriguing you on where the story will take you. The movie does keep you guessing as Harker gradually assembles the pieces to this puzzle. Great performances all around from the cast and Perkins will put himself on the map as a horror director after this film. Longlegs is not a film for everyone. With its art-house style of filmmaking, I would only recommend this movie to cinephiles and horror fans who have the patience to sit through a movie that takes its time telling the story. The less you know about this movie going in, the better the experience will be. Longlegs is creepy, unsettling, and will linger in your thoughts long after you leave the theater. "}],"_type":"block","style":"normal","_key":"f95818855148"}],"slug":{"current":"longlegs-does-it-live-up-to-the-hype","_type":"slug"}},{"content":[{"_type":"block","style":"normal","_key":"3ba02c944efd","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"4b4b4a6196830"}]},{"style":"normal","_key":"fd1fd6ef1fe0","markDefs":[],"children":[{"_type":"span","marks":[],"text":"","_key":"b87a16216de7"}],"_type":"block"},{"_type":"image","_key":"6725201eda45","asset":{"_ref":"image-241132504a5f065b12672fc43dbbbbe78477048e-1280x720-jpg","_type":"reference"}},{"_key":"a3ae7320ee00","markDefs":[],"children":[{"_type":"span","marks":[],"text":"","_key":"b35935686a79"}],"_type":"block","style":"normal"},{"children":[{"text":"John Krazinski’s A Quiet Place series offered a refreshing take on alien invasion movies. These movies upped the ante of suspense with the terrifying premise that any sound you make at any given time could cost the lives of you and everyone around you in a gruesome manner. The alien creatures in the films make the Xenomorphs from the Alien franchise look like cute puppies, piling onto the fear factor of the last thing you witness in life being a face-to-face encounter with one of these ferocious beasts. The first two films in the series depicted human survival in the aftermath of the alien infestation on Earth through a family. If you ever wondered how the creatures came to Earth and took over the planet, A Quiet Place: Day One shows how it happened. Set in New York City, the prequel shows how normal life was disrupted by these alien brutes. Instead of witnessing the aliens preying upon humans through The Abbot family from the previous two films, here you witness the chaos through the lens of the lead character, Sam, played by Lupita Nyong’O. Sam is a hospice patient who has a bitter irritability about her character when you meet her. When Sam and other patients are offered a trip into the city, they have no idea of the ensuing danger that lies ahead.","_key":"45e8eed272690","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"348f4c5b9577","markDefs":[]},{"children":[{"_type":"span","marks":[],"text":"Outside of the change in location and characters, Day One does not offer anything radically different from the previous two films. Once the creatures land on Earth, the events unfold much like you have seen before where the alien predators use sound to seek out humans to slaughter. Taking over directorial efforts this time is Pig director, Michael Sarnoski. Sarnoski does a great job at making this prequel as terrifying as the original films. You can feel the tension with each movement and any sound made by the characters. Your skin crawls when you hear the insect-like crackling sounds the creatures make when they are nearby. Much like Krasinski, Sarnoski proves to be impressive at building suspense where moviegoers can experience the dread and anxiety the characters find themselves in. In Day One, you never feel the characters are safe, no matter what time of day or location. Whether they are venturing outside in daylight or fortified high up in a building at night, you find yourself clinching the arm rest of your theater seat from the unpredictability of not knowing when the creatures will attack.","_key":"4a6e3a0298f30"}],"_type":"block","style":"normal","_key":"a0cb8f16e097","markDefs":[]},{"children":[{"text":"","_key":"8435d36f5dc8","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"9f9970bbbeec","markDefs":[]},{"_type":"image","_key":"051676cbfe06","asset":{"_type":"reference","_ref":"image-04fd66fcf6057cc970647d9be6739240ccf58252-1024x427-jpg"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"","_key":"693a5fd99a80"}],"_type":"block","style":"normal","_key":"b0c4493707a0"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"The aliens themselves are as menacing as ever. Their power and strength are demonstrated by how quickly they can scale tall buildings. No matter how many times you have seen them, whether in this film or the two previous films, the design of the aliens never ceases to make you cringe, much like the aliens did from other alien movie franchises, like The Predator and Alien movies. There is a spine-tingling scene in Day One that harkens back to the Alien 3 close-up scene of the face-to-face encounter between the Xenomorph and Sigourney Weaver. New York City, a city with millions of people, proves to be fertile killing grounds for these creatures. Thus, you witness more carnage inflicted upon humans in comparison to the series’ predecessors. Even despite the lack of gore with the PG-13 rating, Sarnoski effectively conveys the relentless savagery and murderous voraciousness that these creatures are capable of when they attack. Much like what made the first Alien film so effectively frightening, Sarnoski shows you just enough when the creatures pounce upon their prey. What you do not see causes your mind to stumble down a rabbit hole of diabolical possibilities of how the aliens’ victims are gored to death. If there is one drawback to the film, it is that you do not learn anything more about the creatures. They still remain somewhat of a mystery as you do not discover their planet origins or how they ended up descending upon Earth instead of another planet. Such details would have made this prequel more enriching by delving deeper into the mythology of the aliens.","_key":"4e6a8c253fe20"}],"_type":"block","style":"normal","_key":"603204dc7202"},{"children":[{"_type":"span","marks":[],"text":"Sarnoski continues the tradition of the original A Quiet Place films by letting the audience get to know the characters through limited dialogue. As it is revealed that the creatures do not fare well against water, the citizens are ordered to evacuate south towards the seaports to escape the island. Sam makes the inexplicable decision to head north to Harlem. Why to Harlem? *Spoiler Alert* To get pizza. As puzzling as that sounds, you learn later in the film why she makes such a puzzling commitment. Sam’s encounter with a petrified law student, Eric, played by Joseph Quinn, is where we get to learn more about Sam’s life and the reasoning behind her journey to Harlem. Eric interrupts Sam’s solo mission for pizza as she reluctantly allows him to join her. Nyong’O and Quinn successfully sell the connection these two characters forge as their characters bond while on their mission. Sarnoski finds creative ways for the characters to have scenes of dialogue by having natural loud sounds, like rain and thunder, as a means for the characters to be able to talk to each other without the fear of the creatures tracking them through the sound of their voices. As you learn about the characters and their motivations behind their decisions, you grow to care for them just as Sam and Eric grow to care for each other. When the creatures are on the prowl, the apprehension is heightened because you root for their survival more than if they if they had been written as one-dimensional characters. When it is revealed why Sam is so hellbent on going to Harlem to get pizza, Day One becomes more than just a typical horror/sci-fi flick. The human element is what makes this film special through the addition of heartfelt scenes to the story that elicit a tear jerking response.","_key":"26ea128cb41e0"}],"_type":"block","style":"normal","_key":"295447baf3ab","markDefs":[]},{"_key":"255480f17b41","markDefs":[],"children":[{"_type":"span","marks":[],"text":"","_key":"97fca99c3cdb"}],"_type":"block","style":"normal"},{"_type":"image","_key":"3803ee6ee194","asset":{"_ref":"image-cad6af7b55b795d2a31235e53e824131b6b09abf-1296x730-webp","_type":"reference"}},{"style":"normal","_key":"55d52339009e","markDefs":[],"children":[{"_type":"span","marks":[],"text":"","_key":"959d76ed3599"}],"_type":"block"},{"markDefs":[],"children":[{"marks":[],"text":"While Day One may offer you more of the same, at the end of the day this “more of the same” is damned good entertainment. The movie keeps you on the edge of your seat fearing for the fate of the characters, whether you get to know who they are or not. Despite the film not providing details of how the creatures got here, the unanswered questions are not a necessity to enjoying the film. What is great about this film is you can enjoy the movie even if you have never seen the previous two installments. In fact, the only continuity in the film, other than the suspense and the creatures themselves, is a cameo appearance from Djimon Honsou, whose character you learn in this film is named Henri. Day One is definitely a film to check out, not only for the thrills and suspense, but for the touching dramatic moments as well. A story of how strangers can come together and be resilient in the face of the gravest of danger. Sarnoski does a masterful job of giving moviegoers what they love about the original Krasinski films by not straying too far from the winning formula they already established. Thus, the new A Quiet Place film is a must-see for the franchise’s day one fans.","_key":"12bfd4674b900","_type":"span"}],"_type":"block","style":"normal","_key":"47e90030e825"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"","_key":"bdaaf1bfc5b80"}],"_type":"block","style":"normal","_key":"969dd84bcc72"}],"overview":"A Quiet Place: Day One Film Review","_type":"post","title":"A Quiet Place: Day One is Familiar but Just as Terrifying","_updatedAt":"2024-07-11T23:20:49Z","slug":{"_type":"slug","current":"a-quiet-place-day-one-is-familiar-but-just-as-terrifying"},"_createdAt":"2024-07-11T22:28:20Z","_rev":"HdJONGqRccLIid3oEByTHV","_id":"236e8984-e869-402a-8d47-bfd4d8c408a8"},{"_type":"post","_id":"b48e11de-6d06-4ccb-9b14-9bc1c3b63be6","slug":{"current":"bad-boys-ride-or-die-a-mixed-bag-but-fun-ride","_type":"slug"},"overview":"Bad Boys: Ride or Die Film Review","_createdAt":"2024-06-10T21:34:59Z","_rev":"HdJONGqRccLIid3oE8AWY1","title":"Bad Boys: Ride or Die a Mixed Bag But a Fun Ride","_updatedAt":"2024-07-08T14:34:55Z","content":[{"style":"normal","_key":"f94040db6abe","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"a88ed248f4d80"}],"_type":"block"},{"_type":"image","_key":"b74a184a516d","asset":{"_ref":"image-af88eb31d5b0b1accf47729cb8edb261fb54f312-836x472-webp","_type":"reference"}},{"children":[{"_type":"span","marks":[],"text":"Almost 30 years ago, Martin Lawrence and Will Smith took their careers to the next level with Michael Bay’s directorial debut, Bad Boys. Both Lawrence and Smith dazzled screens as Miami detectives Marcus Burnett and Mike Lowry, respectively, becoming the most recognized buddy cop duo since Riggs and Murtaugh from the Lethal Weapon series. The success of the original 1995 film led to several sequels over the next couple of decades. In a time when movie insiders are panicking due to shaky theater ticket sales, Lawrence and Smith resurface to once again save the day with Bad Boys: Ride or Die. Directors, Bilall Fallah and Adil El Arbi, return to direct the fourth installment in the series. In the latest story, Burnett and Lowry find themselves caught up in a plot to frame their late friend and former boss, Captain Conrad Howard (played by Joseph Pantoliano). When Captain Howard is accused of being involved with the cartel, Burnett and Lowry team up to clear his name. As they uncover the truth, they find themselves on the other side of the law becoming guilty by association. To add to this predicament, become targets after a bounty is placed on their heads from every underworld organization in the city. The movie marks the first major release of a movie starring Smith since the infamous Oscars slap that shocked the world. Ride or Die is a make-or-break film for Will Smith’s staying power as a box office champion. Controversy aside, is the film any good?","_key":"06420e20eb1a0"}],"_type":"block","style":"normal","_key":"ab69248cc2dc","markDefs":[]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"The chemistry between Lawrence and Smith is ultimately what carries the film. Their ability to play off of each other is what has kept this franchise going and Ride or Die is no exception. You can tell they still love playing these characters and have fun working together. The dynamic between Burnett and Lowry has changed in this film. Usually, Lowry is the character that takes risky chances and Burnett, being the family man, has to reel Lowry in so to speak to keep the pair out of danger. However, in this film the tables have turned. Lowry is now a married man, as well as a father as we discovered in Bad Boys For Life. Thus, Lowry is now more conservative in his decision-making. Burnett suffers a life-threatening health issue and comes out on the other side feeling invincible due to an out of body experience. The role reversal between the pair provides a fresh take on the nature of their relationship, both as friends and as partners. Lawrence steals the movie from Smith much like he did in the original, although Smith is great as well. Most of the comedic moments that do land in this film come from Lawrence.","_key":"6b76ea7910d70"}],"_type":"block","style":"normal","_key":"2b39a2598f28"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"The action in this movie is what you would come to expect from a Bad Boys film. Fallah and Arbi do a great job of mimicking stylistically the tone of the action from the first two Bad Boy movies while adding their own personal touch as well. The clever use of the camera from the first-person point of view, as well as the fast-paced drone shots, add an eye-pleasing aesthetic to the shootout scenes. There are two action sequences in particular that are both fun and suspenseful with high stakes. The first is the airplane action set-piece. This specific scene is where the movie really starts to pick up the pace and where I became more invested in the story. There is another action scene that does not even involve Lawrence or Smith but turned out to have one of the biggest crowd reactions and was the most significant scene stealer of the film. That scene alone will have you contemplating spin-off possibilities in the future of a certain character. The action is where this film really excels in providing the most satisfying and most fun moments.","_key":"902a7e9f32410"}],"_type":"block","style":"normal","_key":"c5e2e9cabcf8"},{"_key":"2d55dd5f373e","asset":{"_ref":"image-8ec52bb32accc2650e464373bd0a2cbaa4e6c55b-600x358-webp","_type":"reference"},"_type":"image"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Speaking of fun, another strong point of the movie is the nostalgic callbacks. There are plenty of cameos from characters from the previous films that will have you taking a trip down memory lane. These callbacks provide continuity with certain plot points from previous films and connect the films together. The filmmaker’s choice to not abandon the storyline of Lowry having a son was a great choice. In Ride or Die, Lowry and his son are forced to deal with some of the consequences from the events of the previous film. Tying that storyline into the events of this film proved to be a high wire balancing act. For the most part it works, but it would have been more effective if the story centered more around Lowry and his son continuing to build on their relationship. There are other cameos that will bring a smile to your face when you see them. Not only do they add to the story but they will make you look at these characters differently when going back to watch some of the previous Bad Boy movies.","_key":"a4d53b906c570"}],"_type":"block","style":"normal","_key":"d1bd88158436"},{"_key":"9c95df4299f8","markDefs":[],"children":[{"text":"Ride or Die does have its drawbacks as a film. The dialogue is so cringeworthy at moments that it would make a writer from the Fast and Furious films jealous. The movie suffers from too many characters, and this leads to having generic, cookie-cutter characters who serve no purpose other than existing to advance the story. On top of the “cardboard-cutout” quality of these characters, the acting from most of them is garden variety at best. A prime example is the villain. There is nothing special about the villain. He is just an evil person that does evil things. Not saying I was expecting a Heath Ledger Joker type of villain in a Bad Boys film, but a more compelling villain could have made this film so much better. Perhaps, the biggest flaw in the Bad Boys series is having forgettable villains, and Ride or Die is no exception. Another example is Lowry’s wife, whose only purpose in the film was to be the typical “damsel in distress” that Lowry has to rescue from being kidnapped. With the number of characters in the film, all with different storylines, the film lacks focus ultimately hindering the movie from having genuinely earned moments towards the final act. Certain side stories do not make much sense given the previous films in the series. An example is the panic attacks that Lowry suffers. Given everything Lowry has been through and survived in taking on the criminal underworld, Lowry's sudden panic attacks simply from being a newlywed proves to be implausible. The ridiculous nature of some of the plot points in this movie is another way this film resembles a bad Fast and Furious film at certain points. Going into this movie, you need to understand that to buy into certain moments in this film, you need to turn your brain off. One final drawback of the film is that the comedy is hit or miss. There are some genuinely funny moments but there are also a good number of scenes where the comedy does not land, particularly in the first half of the film.","_key":"f5c81937ccca0","_type":"span","marks":[]}],"_type":"block","style":"normal"},{"_type":"image","_key":"55f512047d5c","asset":{"_ref":"image-26348fb89bad5b5d69e43ac5fd2c539012f74bd3-1683x946-jpg","_type":"reference"}},{"markDefs":[],"children":[{"marks":[],"text":"Overall, the positive outweighs the negative when it comes to Ride or Die. The film is one of the most fun in-theater experiences I have had post-pandemic. It has been a while since I have seen a movie where there was not an empty seat in the theater. The lively crowd reactions are what makes Ride of Die a must-see film to see at the theaters. You will not be able to duplicate this sort of experience at home. You can feel the aging of Lawrence and Smith in this film in terms of the energy they bring. However, Ride or Die manages to deliver everything you want from a Bad Boys film. Thrilling car chases through the city, violent shootouts with the city’s underbelly, plentiful laughs, and Burnett and Lowry finding a way to come together at the end of the day to survive the latest adventure in their ongoing saga as Miami cops. Ride or Die is an enjoyable two-hour experience showcasing the talent of two movie stars in an era in Hollywood where there are no more new movie stars left. One cannot help but be happy for Will Smith given all the controversy surrounding his public and personal life in the past few years. Regardless of cancel culture running rampant today, fans of the Bad Boy franchise have proven they will ride or die with Will Smith at the box office. ","_key":"eef797e5e6250","_type":"span"}],"_type":"block","style":"normal","_key":"41449e491eab"}]},{"title":"Furiosa: George Miller is a Psychopath","_updatedAt":"2024-06-07T00:05:52Z","content":[{"_key":"e50f7b666523","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"6abf2bea857c0"}],"_type":"block","style":"normal"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"","_key":"813d15bb9c7e"}],"_type":"block","style":"normal","_key":"16d7b0384340"},{"_type":"image","_key":"25e6131ec608","asset":{"_ref":"image-91cd338da5b46d514802dad743941359050cf004-1200x805-jpg","_type":"reference"}},{"style":"normal","_key":"5d14ef04f6b3","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The Mad Max series has been a bizarre window into the maniacal genius of George Miller. Throughout the decades, George Miller has plunged moviegoers into the chaotic depths of a post-apocalyptic world where warlords and their gangs rule over the remaining pockets of civilization in the desert wastelands. With his latest installment in the Mad Max franchise, Furiosa: A Mad Max Saga, Miller delivers a prequel to his previous film, Mad Max: Fury Road. As the movie title suggests, the story in this film tells the origin story of Furiosa, deviating from the previous films in the series where Max Rockatansky is the central character. Instead, Miller delves into the life of Furiosa, from her beginnings as a child leading up to the events that take place in Fury Road. Rather than have Charlize Theron reprise her role from the Fury Road, Miller taps Anya Taylor-Joy to portray Furiosa this time around. Joining her is Chris Hemsworth, who plays the deranged Dr. Dementus. Furiosa is kidnapped as a child and finds herself a captive of Dementus. Furiosa’s mother fails in her attempt to rescue her and falls victim to a brutal death by the hands of Dementus and his gang of miscreants. The movie becomes a classic tale of revenge with Furiosa looking to avenge the death of her mother and honor her late mother’s wishes of making it home to the “green place’.","_key":"6303f1a11a460"}],"_type":"block"},{"style":"normal","_key":"5ab146bbfbcb","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The acting performances are what you would expect from a Mad Max film. Over-the-top, but in a good way. A prime example of that is Hemsworth, who seemed to have a lot of fun in portraying Dementus. While the facial make-up was a little distracting at times, Hemsworth shows off his acting chops as the deadly warlord who takes a young Furiosa under his wing. Furiosa fills in as a daughter-like figure for Dementus, who you discover is emotionally scarred from the murder of his family. The death of his family, particularly his daughter, is why Dementus develops a soft spot for Furiosa. The dynamic between Furiosa and Dementus is intriguing because even though he genuinely cares for her he is also the cause for her emotional pain that will later fuel her murderous revenge. Dementus is so emotionally damaged from the murder of his family that he wreaks the same violent carnage on others bringing them down to the same bottomless pit of anguish he finds himself wallowing in. Hemsworth is captivating as Dementus in a way we have never seen him before on screen and delivers perhaps his greatest triumph as an actor in Furiosa.","_key":"0fda77d9529e0"}],"_type":"block"},{"_type":"image","_key":"59ee13b68416","asset":{"_ref":"image-704d6fe0097d66c875110b74157c7b36a935d44d-640x324-webp","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"While Hemsworth gives a tour-de-force performance, Anya Taylor-Joy lends a more subtle portrayal as Furiosa. In fact, her character, like Tom Hardy in Fury Road, barely has any lines of dialogue. Anya is asked by Miller to do a lot of acting with her eyes, facial expressions, and gestures. Anya gives moviegoers a quiet but powerful performance as the defiant Furiosa. When Furiosa looks at Dementus, you can feel her seething with anger just in her incensed gaze at him. Anya effectively conveys the emotional weight of a woman who has experienced heartbreaking trauma but must suppress those feelings and remain strong to survive the harsh realities she finds herself in. Pulling this feat off with limited lines of dialogue speaks volumes to her acting capabilities. In addition to the nuanced vulnerability of Furiosa, Anya also sells herself as a strikingly believable action star. Anya sells the toughness, grit, and resilience of her character in every action sequence, proving herself worthy of her A-list status in Hollywood.","_key":"e46e65ad15750"}],"_type":"block","style":"normal","_key":"af0d085e7cd3"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"While Anya manages to leave her mark on this film, her presence as Furiosa is limited. For a good portion of the screen time, we see Furiosa as a child. The young Furiosa is played by Alyla Browne. Just like Anya, Alyla does not have a lot of dialogue in Furiosa due to her character becoming mute as a response to being a spectator of her mother’s brutal torture and murder. Alyla’s interpretation of a young Furiosa coping with the death of her mother while learning how to navigate the lawless environment surrounding her lays the groundwork for who Furiosa becomes as an adult. Alyla impressively embodies the bitterness and sadness of a young child who has been kidnapped, separated from her family, and witnessed the death of her mother. Once she is traded in a deal between Dementus and Immortan Joe, played by Lachy Hulme who replaces the late Hugh Keays-Byrne, Alyla demonstrates Furiosa’s perseverance and strength as her character gradually evolves into the type of heroine that fans witnessed in Fury Road. Miller does a great job at fleshing out Furiosa where you clearly understand her motivations and root for her character to ultimately win given what she has suffered through as a young girl.","_key":"7e0895d182c70"}],"_type":"block","style":"normal","_key":"1abed2ab189b"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"","_key":"4e41357c0dc4"}],"_type":"block","style":"normal","_key":"81d92f690f29"},{"_type":"image","_key":"d771902b1448","asset":{"_type":"reference","_ref":"image-3a67d211442a2e030d8efc5282eec661825068ae-299x168-jpg"}},{"_type":"block","style":"normal","_key":"8c8ff644397b","markDefs":[],"children":[{"marks":[],"text":"One of the main reasons to watch this film is the action. Like his previous film, Miller delivers some insane action sequences that you just will not find in any other film out there today. The death-defying, adrenaline-fueled stunts and action sequences are nothing short of breathtaking. The action depicted in Furiosa is tumultuous and symbolic of the mayhem in the world in which this story takes place. While Miller elects to infuse more CGI into the action scenes of this film in comparison to his previous Mad Max films, Furiosa still supplies Miller’s unique trademark brand of bedlam action. The movie is filled with loud explosions and tanker chase scenes. Miller is known for finding a way to capture the beauty in pandemonium and brutal violence with the lushness of the color palette used to film this movie. The creativity in how Miller constructs an action sequence and depicts violence not only showcases his brilliance but also makes you ponder what kind of diabolical thoughts are lurking in his head.","_key":"11e5b8557db80","_type":"span"}]},{"_key":"de56ff77040c","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The low box office numbers of Furiosa: A Mad Max Saga are not indicative of the quality of the film. Maybe current circumstances such as inflation, a variety of streaming options, and a shortened time gap between a film’s theater release versus home release have diminished the general public’s interest in supporting most films in theaters. Maybe the fact that you have a Mad Max movie without Mad Max is another possible reason for Furiosa’s disappointing ticket sales. However, Furiosa is so good that not only does it deserve to be viewed on the silver screen, but also in IMAX. With high-octane action, immersive world-building, brilliant acting, and fleshed out characters with clear motivations, Furiosa is another gift from the movie gods bestowed on humankind. Hopefully word of mouth spreads and is able to give the film a last-minute push in the remaining weeks the film is in theaters. George Miller develops films specifically for the big screen with his brand of extreme action, over-the-top stunts, and deafening sound design. Furiosa is an absolute epic of a film that promises to be one of the best films of the summer blockbuster season. Miller masterfully provides the characteristic stunning visuals that fans of the Mad Max films have grown to love while effectively expanding the story of the characters and the dystopian future of those characters. I urge everyone that finds their way to this blog to go to the nearest theater this weekend and indulge yourself in the anarchy, madness, and the beautiful savagery of Furiosa.","_key":"8fd5af747f820"}],"_type":"block","style":"normal"}],"overview":"Furiosa: A Mad Max Saga Review","_id":"f517a08b-e017-47cd-b58f-d53aeb218af4","_type":"post","slug":{"current":"furiosa-george-miller-is-a-psychopath","_type":"slug"},"_createdAt":"2024-06-06T22:11:06Z","_rev":"8HjWcizcdAiHkrfKGfOZ19"},{"_rev":"HdJONGqRccLIid3oE8Aim7","content":[{"children":[{"text":"By Jamil Weeks","_key":"cf22939564ba0","_type":"span","marks":["strong"]}],"_type":"block","style":"normal","_key":"8db21905069a","markDefs":[]},{"_key":"7ef87fe15655","asset":{"_ref":"image-513a954e7aa4c700dd9fbebc9c5c5eb739669fd9-640x333-jpg","_type":"reference"},"_type":"image"},{"style":"normal","_key":"7eabeb08da0e","markDefs":[],"children":[{"_key":"09dca8c51d410","_type":"span","marks":[],"text":"Stunt men are the unsung heroes in Hollywood. The people who pull off the real thrilling feats on camera that make major Hollywood action stars look cool and heroic. The men and women who bravely stare in the face of danger every day on set and put their own safety on the line for our entertainment. These individuals do this without the stardom or recognition that the actors they step in for receive. With the new movie, The Fall Guy, former stuntman turned director, David Leitch, has delivered an ode to the courageous stuntmen around the globe. The Fall Guy is a romantic action comedy that echoes the action movies from the 80’s, a time before CGI effects replaced real stunts and action set pieces. The film stars Ryan Gosling as stuntman, Colt Seavers, and Emily Blunt as movie director, Jody Moreno, as estranged lovers trying to find their way back to each other while on the set of Moreno’s directorial debut, Metalstorm (a science fiction action epic). While on the set trying to rekindle his love with Jody, Colt is recruited to locate the whereabouts of the film’s star, Tom Ryder (played by Aaron Taylor-Johnson). The action spills over from the movie set into real life as Colt attempts to find Tom so that his absence will not derail Jody’s debut film."}],"_type":"block"},{"markDefs":[],"children":[{"marks":[],"text":"The movie is a decent blend of romantic comedy and white-knuckle action. The romance between Jody and Colt is the main driving force of the movie. The film opens up by establishing the love dynamic between Colt and Jody, who at the time was a camera operator. While working on the same Tom Ryder movie together, Colt suffers an injury that seemingly ends his career as a stuntman. While on his professional hiatus, he loses touch with Jody. However, fate brings the two back together as the producer of Metalstorm summons him on the set ostensibly at the request of Jody. When Colt reveals himself on the set, he discovers Jody did not desire for him to be in her film but is forced to stick with Colt since there are no other stuntmen readily available. Colt seizes the opportunity to get back in Jody’s good graces while working behind the scenes to make sure her film is a success.  Colt needs to get Tom back to the set to finish the film. Ryan Gosling and Emily Blunt are perfectly cast as the lovable leads that you root for getting back together by the film’s conclusion. Like any prototypical rom com, the film’s lead has a sidekick that helps him on his mission to win his lady’s heart back. Winston Duke, who plays stunt coordinator, Dan Tucker, serves as Colt’s sidekick. Dan helps Colt become re-acclimated to being a stuntman on the set of Metalstorm. Off the set, Dan assists with Colt’s dangerous mission to find and locate Tom, who has seemingly disappeared while being in the company of some less than savory locals. The movie does not take itself too seriously and is filled with lighthearted comedic moments that set up the action sequences. Gosling and Blunt are both superb as the magnetic couple in their quest to renew their bond with each other despite outside forces that put their relationship in jeopardy.","_key":"23f40c4ae3ba0","_type":"span"}],"_type":"block","style":"normal","_key":"3f8a8f6f7ef0"},{"_type":"image","_key":"eadd3c6f6d48","asset":{"_ref":"image-73db0da7a3b57856d6edac8d71af5c5f4b07f9b0-1280x720-jpg","_type":"reference"}},{"_type":"block","style":"normal","_key":"f12382aa4bf1","markDefs":[],"children":[{"_key":"c786941ee5730","_type":"span","marks":[],"text":"The action in The Fall Guy takes a back seat for a good portion of the film. However, when there is action, it is exhilarating. The action in the film is like opening a time capsule as these scenes are reminiscent of 80s and 90s action movies. The explosions are real. The stunts are real. The CGI is minimal. In a movie dedicated to stuntmen, it is only right David Leitch highlight how real stunts are more thrilling to watch on the silver screen. Most of the action in The Fall Guy shows Colt performing stunts while on the set of Metalstorm. The behind the scenes look into how action scenes are filmed on set is a creative way to depict action in a film by Leitch. The stakes rise as Colt falls deeper into danger off the set searching for Tom. Some of the action stylistically mirrors scenes from a Die Hard or Lethal Weapon movie. Enthralling car chases through the city, classic shootouts during speedboat chases, and well-choreographed fight scenes that seem to leap out of a Joel Silver action flick from the late 80s. David Leitch makes sure the stunts are extreme and the explosions are loud and in abundance. The hallmark of a great action film is when the filmmakers perform a stunt that makes you think to yourself “how did they pull that off?” The Fall Guy is filled with these types of hair-raising, over-the-top stunts. What makes the action even better is watching scenes that are filmed in real places instead of in front of a green screen. Leitch embraces the humor in the action with tongue-in-cheek dialogue sprinkled in the high-wire scenes. In that capacity, The Fall Guy is the perfect popcorn, pre-summer blockbuster to satisfy hardcore fans of action films."}]},{"markDefs":[],"children":[{"text":"David Leitch may be a former stuntman, but he is no stranger to working behind the camera. With a resume that includes Atomic Blonde, Deadpool 2, and Bullet Train, Leitch has proven he is capable of expertly juggling comedy and action together. The Fall Guy has all the carefree playfulness of Forget Sarah Marshall mixed with high octane thrills that look like a scene snatched out of a John McTiernan movie. Leitch keeps the plot simple in keeping with the tradition of classic action films. However, the creativity in the film is not stifled with some of the clever stunts performed by Colt in the film. The movie boasts a couple of extended one-take scenes where the camera beautifully pans around the actors amidst action in the background. By making a stuntman the protagonist of the film, Leitch found a way to make an action film with an unconventional hero. The type of hero who relies on his abilities as a stunt guy rather than any formal weapons training. The action is where the movie truly excels as Leitch culminates all his talent as a former stuntman, stunt coordinator, actor, and filmmaker into one film. The Fall Guy represents growth for Leitch as a filmmaker as The Fall Guy is probably his best work yet.","_key":"93ae3735f3c10","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"d3319f39bb06"},{"_type":"image","_key":"17fc34058471","asset":{"_ref":"image-5c80b3769425b67d23b409e3a9f5bc8112c51490-1920x791-jpg","_type":"reference"}},{"style":"normal","_key":"a66b7e906ef7","markDefs":[],"children":[{"_type":"span","marks":[],"text":"With plenty of action and romance, The Fall Guy will be the perfect date movie for the next few weeks. With comedy that lands, romance that warms the heart, and action that keeps you on the edge of your seat, the movie delivers on multiple fronts. While the plot may be a little thin, the movie has enough ingredients to entertain audiences with a slight twist in the third act. The movie is Leitch’s campaign for his fellow stuntmen to start receiving recognition from Hollywood for the work they do. For those of us who had the pleasure of growing up on iconic action films where the special effects were practical but effective, the film locations were real places, the stunts were real, the humor was disarming, and the action was gripping, The Fall Guy is a movie that will wrap a huge smile around your face. The movie delivers with every actor in the film looking like they are having fun bringing their characters to life. Most importantly, the movie does not forget to have fun, rather it is quippy dialogue or the film having an overall laidback and upbeat tone. The Fall Guy is a smart and exciting film that has the potential to turn into a trilogy franchise given the reception the film receives by critics and moviegoers. I highly recommend watching this film in IMAX as a perfect way to compliment your Cinco De Mayo weekend. Films like Dune Part Two, Late Night with the Devil, Civil War, The First Omen, and now, The Fall Guy prove how great a year 2024 has been for the resurgence of Hollywood. It has been years since I have had this much fun at theaters. Cinema is back!","_key":"e48ce86eab030"}],"_type":"block"}],"_type":"post","_id":"517cc145-e4f2-4744-88f1-3fbf0f0a7a44","title":"The Fall Guy: A Fun-Filled Throwback","_updatedAt":"2024-07-08T14:41:32Z","slug":{"current":"the-fall-guy-a-fun-filled-throwback","_type":"slug"},"overview":"The Fall Guy Film Review","_createdAt":"2024-05-05T07:22:51Z"},{"slug":{"current":"are-people-aware-superhero-characters-are-not-real","_type":"slug"},"overview":"Film: Race and Gender Swapping In Comic Book Films","_createdAt":"2024-04-25T19:16:01Z","_type":"post","_id":"699f28e4-ff0e-4d9a-b9ea-530ba6e8ff77","content":[{"style":"normal","_key":"73a396100e88","markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"f21ec59f86630"}],"_type":"block"},{"_type":"image","_key":"fb2cdb4fb1a9","asset":{"_ref":"image-621f41afbf26c6ec2217e7122d270263bcd85f42-1200x675-webp","_type":"reference"}},{"_key":"75a03d953b75","markDefs":[],"children":[{"marks":[],"text":"Superhero films are meant to be fun. A release from the stress of normal everyday living. However, with comic books and the films they inspired becoming a staple in American society, the fandom has evolved into a toxic culture. The type of culture where the fans love the characters and lore so much that they have communicated threats to Hollywood executives and filmmakers over elements of these films they did not like. One of the most controversial aspects of comic book films today is the idea of race-swapping or gender-swapping characters. Production film companies, like Marvel Studios, have made it known that they are trying to show more diversity in casting. So instead of mostly white casts, they want to have films with casts that have different racial make-up than predominantly all white male casts. This is partially a response to a growing call for diversity in Hollywood, alongside the grassroots online woke movement that has seen an explosion in popularity in the mid to late 2010s to the present. With a more diverse casting model, certain characters that have typically been depicted in comic books and films as white males are now being cast by black actors or female actors. As you can imagine with today’s virulent comic book culture, these sort of character changes did not go over amongst the hardcore comic book base. Any time there is a mere suggestion of race-swapping or gender-swapping a comic book character, well-known or not, and nerd culture explodes into a symphony of hateful rhetoric as if the skies are falling around them. Whenever I come across such a vitriolic reaction online, I question why grown men and women care so much about the race or gender of a character that is not real.","_key":"bbcaa52dc89a0","_type":"span"}],"_type":"block","style":"normal"},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Race swapping characters is not a new phenomenon in Hollywood. For decades, white actors have portrayed characters from different racial backgrounds, rather those characters were Asian, black, Latino, or Native American. In fact, this happened so frequently in Hollywood they called the term “whitewashing”. White actors literally were put on “blackface” or “yellowface” to depict non-white characters. In some cases, the characters these white actors were allowed to portray were real historical non-white characters. For a long time, this sort of practice was considered acceptable by mainstream audiences. There were anti-whitewashing campaigns that were created to combat these sorts of Hollywood casting practices, but there was never an anti-woke-like general reaction from the public as seen with the recent wave of diversity casting Hollywood has experienced in the past decade. So why such a different reaction? Why would people not be equally upset with white actors portraying real life historical figures as they are with non-white actors portraying fictional comic book characters that were traditionally white. Based on the differences in the reactions, one could conclude that the comic book world is only interested in seeing predominantly white male casts in these comic book films. However, that would be too narrow of an opinion.","_key":"ebd01b10609a0"}],"_type":"block","style":"normal","_key":"17bcbcd8e4fe"},{"style":"normal","_key":"9141b2c6e042","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Playing the devil’s advocate, many of these comic book fans are traditionalists who want to see these comic book characters and stories brought to the big screen without major changes to the source material. To want these films to closely resemble their comic book origins as much as possible is completely understandable. I also get that in some cases the altering of the race or the gender of a specific comic book character would significantly change the essence of that character. So, I get why people would be upset with making a major change to a beloved comic book character. I know this because I grew up on comic books. As a child, I had a comic book collection of DC and Marvel comics. I also grew up on comic book TV shows and movies (live action and animated) and video games that were inspired from the comic books. I still enjoy comic book movies and TV shows as an adult. I am essentially a comic book nerd. However, I am also a fan of great storytelling and acting. I am a fan of cinema first. For many years, Hollywood struggled with making quality superhero films. These films were treated as a cheap cash grab by film studios and were typically made by individuals who were either not familiar with the source material or did not understand the source material well enough to translate those stories to live action films. There were visionary filmmakers that changed the landscape of Hollywood by showing how you can treat the source material with care and make tons of money at the same time. The 21st century has been a gift for comic book aficionados who have been spoiled with great comic book films such as Spider-Man 2, The Dark Knight, Logan, and Avengers Infinity War. Some of the greatest comic book films have made significant changes from the comic books to properly adapt the stories for film treatment.","_key":"be33caf67bc50"}],"_type":"block"},{"asset":{"_type":"reference","_ref":"image-07ea9d72a935e4558c17da4cb4fb6e0674b6e262-1260x598-jpg"},"_type":"image","_key":"93a1766a388d"},{"_key":"8be0d199f1e5","markDefs":[],"children":[{"_type":"span","marks":[],"text":"I want the characters to be portrayed by the best possible actors available. Recently it was suggested for Denzel Washington and Giancarlo Esposito to play Magneto and Professor X in the MCU version of the X-Men. There were rumblings of Michael B. Jordan playing Superman in a JJ Abrams film. LaKeith Stanfield expressed he wanted to play the Joker. The reaction to these suggestions were exactly how you would imagine based on today’s climate. Are we not to believe that these actors are great enough to do these characters justice on the big screen? I do not subscribe to the theory that great comic book casting has to be comic book accurate. I desire to watch a good film with an engaging story and the best actors to bring the story to life. Actor Jeffery Wright gave one of the most sobering and greatest portrayals of the traditionally white character, Commissioner Gordon, in 2021’s The Batman film. Samuel L. Jackson has become a staple in MCU films as Nick Fury, who also was a white character in the comics. Arguably one of the hottest actors in Hollywood today, Zendaya, became one of the most lovable characters in the latest Spider-Man films. The list goes on, but the point is that changing the race of these characters did not take away anything from the stories of the films these characters appeared in. One of the biggest counterarguments is what if you took a character, like Black Panther, who is black in the comic books and race swap that character with a white actor. My response would be that with clever writing, you could pull this off. Why? Well, it is because these characters are not real people. There have been stories in comic books where there have been animal variants of comic book characters. Thus, raising your blood pressure over a racial or gender change of these fictional characters comes across as foolish and shortsighted.","_key":"70bdbc0a4be50"}],"_type":"block","style":"normal"},{"children":[{"_type":"span","marks":[],"text":"The wave of anti-wokeness that has enveloped the nation this decade is a troubling sign of deeper issues. Not saying the everyone who is a traditionalist when it comes to comic book films are racist or sexist because they are against race or gender swapping characters. However, I am willing to bet that much of the criticism is rooted in racism and sexism. Especially when you read the comments by some of these anonymous individuals online. The question people must ask themselves is would they sacrifice having the best actor portray a comic book character for comic book accuracy? The argument reminds me of the actor Demetrius Shipp, Jr. portraying 2pac in the All Eyez On Me biopic. While he looked exactly like 2pac, he failed to capture the essence of who 2pac was, which affected the overall quality of the movie. Growing up on comic books myself, I can certainly respect the opinions of those who want the films to be as faithful to the source material as possible. However, in my opinion there is no need to be so unsettled by these sorts of changes to these characters, especially before you have a chance to see the acting performance of the actors. The implications point to problems deeply rooted in our society. Why do people have a problem with diversity? Last time I checked most roles in these comic book films were still being given to white actors, which makes the backlash against the casting of anyone other than a white male for these sort of fantasy roles even more puzzling. At the end of the day this is supposed to be entertainment. Even though race swapping is nothing new in movies, it seems as if the only time people take issue with this practice is when the actor is not white. To comic book nerds reading this, it is going to be okay. Go outside, catch a breath of fresh air, and relax. Demographics are changing. Women are becoming one of the fastest grown demographics amongst comic book readers. There are stories for everyone, no matter the background, that people can enjoy.","_key":"ce3303ee89530"}],"_type":"block","style":"normal","_key":"bdc64eac4dd4","markDefs":[]}],"_rev":"G0lEr1Y4kHQwusXP5JtNJd","title":"Are People Aware Superhero Characters Are Not Real?","_updatedAt":"2024-07-08T14:51:05Z"},{"_updatedAt":"2024-07-08T14:42:13Z","overview":"Godzilla x Kong: The New Empire Film Review","_id":"7d58fdf2-8530-4dd6-be3d-7e290fe49aac","_type":"post","title":"Godzilla x Kong: More of the Same","content":[{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"82170423e50c0"}],"_type":"block","style":"normal","_key":"6ae63edf0f01"},{"_type":"image","_key":"b35b2ce75518","asset":{"_ref":"image-bea152c26863eb92347069f7fc2d4329936e8a78-640x360-jpg","_type":"reference"}},{"markDefs":[],"children":[{"_key":"08e492a204520","_type":"span","marks":[],"text":"Hard to believe it has been 10 years since the launch of the current monster franchise that has raked in hundreds of millions of dollars for Warner Brothers, with help from Legendary Pictures. The Marvel Cinematic Universe created a wave of copycats who wanted to cash in on the crossover of iconic movie characters. Warner Brothers clearly saw this as a lucrative opportunity to bring King Kong and Godzilla together in the same movie. The first clash between the two monster titans that took place in 2021’s Godzilla vs. Kong was set up and teased with a pair of Godzilla solo films, Godzilla (2014) and Godzilla: King of the Monsters (2019), and a solo King Kong film, Kong: Skull Island (2017). Now the two return in the sequel to the monster mash-up with Godzilla x Kong: The New Empire. Adam Wingard also returns as director. While the plot of its predecessor focused on pitting the pair against each other in an all-time epic clash, Godzilla x Kong features the former foes teaming up to take on a new threat to human civilization. The story takes us deeper into Hollow Earth exposing revelations of a new species and an ancient civilization. Rebecca Hall, Kaylee Hottle, and Brian Tyree Henry reprise their roles as Dr. Ilene Andrews, Jia, and Bernie Hayes, respectively. The trio join forces partially to help Dr. Andrews’ daughter, Jia, who is experiencing frequent episodes, and also to uncover the latest threat to mankind at the hands of the creatures. Joining the team is Trapper, played by Dan Stevens, who is a pilot/monster veterinarian who is there to patch up Kong whenever he gets injured. Gorilla x Kong is the Fast and Furious of monster films. Entertaining and fun thrills blended with generic acting, a laughable story, and corny dialogue."}],"_type":"block","style":"normal","_key":"eac5280c61ba"},{"_type":"image","_key":"e3860d3ab145","asset":{"_ref":"image-d33ebef350264b76470aa39a8efbea47918cf2eb-1296x730-webp","_type":"reference"}},{"children":[{"text":"The fact the movie was released in March instead of the heart of summer blockbuster movie season speaks volumes on the confidence Warner Brothers had in this film at the box office. Godzilla x Kong is an experiment in the ridiculous. You have everything from giant mechanical arms for Kong to a pink colored Godzilla tail resulting from becoming “super charged” with radiation. The story parallels Godzilla on Earth gearing up for a clash with a mysterious unknown threat while Kong searches for a new species of apes on Hollow Earth. As a side story, Jia is being sent a distress signal telepathically from a supposed alien society. As you can imagine, the eye rolls I had while watching this movie were in abundance. The script is an exercise in turning off your brain to buy into the plot. There are so many sub-plots going on that are never fully fleshed out. The end result was me not being engaged in what is going on in the story whatsoever. Adding insult to injury are the poor attempts at humor in the film, which seems to come out of a bad Sam Raimi Spider-Man script. While the chemistry between Trapper and Bernie is a rare highlight of the story, those moments are quickly soured by cheesy comedic efforts that never seem to land. The most egregious aspect of the story is the sub-plot involving Jia. The psychic connection she has to an unknown entity leads her back to Hollow Earth to discover the source of her own origins. Unfortunately, that aspect of the story is easily the most forgettable and offers the slowest moments of the film. The scripts in the movies in this franchise have never been Oscar caliber. However, Gorilla x Kong offers a significant escalation in absurd storytelling.","_key":"4938e2a72c9f0","_type":"span","marks":[]}],"_type":"block","style":"normal","_key":"4cbdf0721713","markDefs":[]},{"markDefs":[],"children":[{"_key":"b335e97d66210","_type":"span","marks":[],"text":"One area where the movie has improved from the previous films in the franchise is the action. The reason these movies keep us coming back to theaters is because of the incredible and violent encounters amongst the colossal leviathans. The smartest thing the filmmakers did with this movie was focus more on the creatures themselves as opposed to the human characters. There are plenty of eye-pleasing and jaw-dropping fight scenes in the movie both on Hollow Earth and Earth. On Earth, you get to see grand backyard brawl-like combat scenes all over the world, from the pyramids of Egypt to the beaches of Rio De Janeiro in Brazil. To see these giant creatures engage in a contest of fisticuffs with the fate of the world hanging in the balance is worth the price of admission alone. The highly satisfying action set pieces balance out the mediocrity of the writing. All the creativity in the film seemed to be poured into making the coolest on-screen battles featured in any monster film ever created. The only drawback to the fight scenes is the way the film glosses over of all the human casualties that must have resulted from the destruction wreaked in highly populated areas. Despite that oversight, each fight scene is imaginative and inventive in creating entertaining matches between the creatures."}],"_type":"block","style":"normal","_key":"f8f9e8865002"},{"asset":{"_ref":"image-32f9b6a4ceaccdf32d30b00c54c02aeb69c7c53c-1200x800-webp","_type":"reference"},"_type":"image","_key":"de4beb42637b"},{"_type":"block","style":"normal","_key":"78a43cb57c5b","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Another positive takeaway from the film are the CGI effects. Godzilla and Kong have never looked more realistic and life-like than as they do in Godzilla x Kong. We have come a long way from stop-motion animation and animatronic creatures. The technology has caught up where we can have a naturalistic fight involving Godzilla and Kong in a real city that looks believable. The three-year gap between Godzilla vs. Kong and Godzilla x Kong have served the film well in terms of the visual effects. All the creatures in the film look both beautiful and terrifying. Every last detail of the looks of the monsters, from eye color to the scars on Kong’s chest, is captured with accurate clarity. The only problem with the CGI is the size of the monsters seem downgraded on most of the scenes that take place on Hollow Earth to the point where the creatures appear to be normal sized or smaller than they are. However, that is more of a nitpick as the CGI effects are a clear strong point of the film. Especially when the battles are waged in real cities where the CGI beautifully captures the demolition of cities as monsters are hurled back and forth and collide with buildings and skyscrapers. Rather underwater, on the ground, or on Hollow Earth, the CGI content is rendered as best as it ever has been in any Godzilla or Kong film.","_key":"029e85967d850"}]},{"_key":"223403439be6","markDefs":[],"children":[{"_type":"span","marks":[],"text":"If you have seen any of the previous films in the franchise, you have pretty much seen this movie. The movie offers nothing dramatically different from the previous films, other than more of a focus on the creatures than the human characters. If you desire to see a movie with CGI monsters engaging in a high stakes royal rumble brawl, the movie delivers with a plethora of stunning visuals. You definitely get your fair share of fight sequences in the movie. However, everything in between, from the story, score, and comedic aspects of the story are generic at best. What started off as a promising cinematic universe with 2014’s Godzilla has spiraled into blatant cash grab by the studio where the characters and the story are not taken seriously. Ultimately what you get is a mixed bag where you do have a fun time, but you leave the cinema feeling underwhelmed. The movie is made for average moviegoers who want to turn off their thinking caps and simply enjoy a fun popcorn movie with the kids. Godzilla x Kong, as well as every film in the series, is a missed opportunity. With clever script writing, or just plain less lazy writing, the writers could have come up with a more compelling reason to pair these renowned mammoths together where there was an earned build-up to the contentious skirmishes between the creatures in the film. The lack of proper storytelling results in the fight scenes falling flat. If IMAX is not available, I would only recommend watching this film when it comes out on digital.","_key":"191c7f1a43bb0"}],"_type":"block","style":"normal"}],"slug":{"current":"godzilla-x-kong-more-of-the-same","_type":"slug"},"_createdAt":"2024-04-23T01:31:46Z","_rev":"HdJONGqRccLIid3oE8Ajsp"},{"_type":"post","title":"Celebrating 30 Years of Illmatic","content":[{"_key":"7835fc8ba744","markDefs":[],"children":[{"marks":["strong"],"text":"By Jamil Weeks","_key":"faa9d949b8f7","_type":"span"}],"_type":"block","style":"normal"},{"_type":"image","_key":"2b3d04259ce3","asset":{"_ref":"image-249e25490e6c654ee2b55018d7f44a28a5c731b2-3300x1398-jpg","_type":"reference"}},{"style":"normal","_key":"723ce1790c7e","markDefs":[],"children":[{"text":"So much has happened in 30 years. The OJ verdict. 9/11 and the Middle Eastern wars that followed. The first black President. The pandemic. We are living in a completely different world from 1994. One thing that remains the same, however, is the brilliance of Illmatic. I remember seeing videos for “Halftime”, “It Ain’t Hard to Tell”, and “The World Is Yours\" on Rap City with Prince DeJour as the host. For whatever reason, I chose to sleep on Illmatic. When it comes to Nas, I was a “Johnny-Come-Lately” fan. It Was Written was the first album from him that grabbed me. After It Was Written stopped me in my tracks, it was essential for me to go back and listen to Illmatic. While It Was Written is considered in the eyes of many to be the best Nas album, there is no denying that Illmatic is the greatest album in the man’s illustrious career. Illmatic is the album that even the biggest Nas haters cannot front on or dismiss. The album is a true certified classic and arguably a top 10 rap album of all time. There is a sizeable faction within the hip hop community that considers it to be the best rap album ever made. You can certainly make an ironclad case for that argument. The replay value. Zero skips. The impact the album has had on the culture. No filler. In many ways, Illmatic is the perfect rap album. A piece of art that Nas poured his entire life into making up to 1994. For the past couple of years, I have been able to get my daily Nas fix with the Kings Disease and Magic trilogies. With the 30th anniversary of Illmatic finally arriving, it has made me go back to earlier Nas material that raised me in the 90s. The past week has been a welcome trip down memory lane.","_key":"dcdac8e7eb4c0","_type":"span","marks":[]}],"_type":"block"},{"_type":"block","style":"normal","_key":"8c5e58c3a2fa","markDefs":[],"children":[{"_key":"3726aea831700","_type":"span","marks":[],"text":"Illmatic is a special project. No gimmicks. No clout-chasing antics. Just a pure hip hop album where everyone understood the assignment. The star of the show, Nasir Jones, was heralded as the next great emcee to carry on the tradition established by the greats of the 1980s golden era. Debuting on Main Source’s “Live at the BBQ”, the Queensbridge emcee, who boldly proclaimed to “snuffin’ Jesus”, put every emcee in the game on notice that he was coming for the throne. From ’92 to ’93, Nas continued the meteoric momentum with his classic verse off MC Serch’s “Back to the Grill” and by releasing “Halftime’ on the Zebrahead soundtrack, which starred Michael Rapaport. Nas also dropped a slew of freestyles, most notably on the Stretch and Bobbito Show in 1993. Nas was anointed as the chosen one, the same way Lebron was by basketball fans in the early 2000s before he was drafted. Nas was a hybrid of Slick Rick, Tragedy Khadafi, Kool G Rap, and Rakim. He was the one that would restore prominence back to the name of his neighborhood, Queensbridge Projects, after KRS and Boogie Down Productions declared the Bridge was over in the late 80s during the iconic Bridge Wars. With his debut album, the hope was that Nas would join the ranks of the greatest, such as Kane, LL, KRS, G Rap, Cube, Kurtis Blow, Chuck D, etc. Nas had his work cut out for him. A wave of brilliant masterpieces was released during the making Illmatic. From ’92 to ’94, The Chronic, Enta Da Stage, Doggystyle, Enter the Wu (36 Chambers), Midnight Marauders, and other heavy hitters were released. Competition was stiff amongst his peers. The West Coast was dominating. The East Coast was experiencing an underground renaissance. Outkast and Biggie were coming. Nas had a lot to live up to and the streets were eagerly anticipating the official arrival of his debut. Heavy bootlegging may have put a dent in the early commercial success of arguably the greatest launch in hip hop history, but that dent ultimately proved to be delayed success."}]},{"_type":"image","_key":"6bfb60fa80f2","asset":{"_type":"reference","_ref":"image-39a7d8466ab6fc533119a38755a6c6a4dda0baa2-1440x967-jpg"}},{"style":"normal","_key":"85afd46731ca","markDefs":[],"children":[{"_type":"span","marks":[],"text":"For his vision to be fully realized, Nas assembled a team of producers that became the rap version of the Dream Team. That team consisted of Large Professor from Main Source, DJ Premier from Gang Starr, Q-Tip from A Tribe Called Quest, Pete Rock from Pete Rock and C.L. Smooth, and the underrated L.E.S. to add some Queensbridge flavor to the Illmatic dish. Erick Sermon has recently confirmed in interviews that he had an opportunity to be on Illmatic but passed on the chance to produce on the album. While it would have been monumental to hear Nas over an early 90s Erick Sermon instrumental, like Keith Murray’s “Get Lifted”, it turned out to be a blessing in disguise because Illmatic would end up becoming one of the most complete projects ever crafted. The jazz-infused production provided by this iconic team provided Nas with the perfect music to catch wreck. The timeless production allowed Nas to get into a zone where the vocabulary would spill forth to create some of the most seminal verses of his career. The production on the album added class to the poignant lyricism of Nas. The dream team created a cohesive sound sonically with a New York City aesthetic that rhythmically and melodically transported you to the project tenement buildings, urine-stained hallways, bullet-riddled windows, and cracks on the pavement of Queensbridge streets. One can make the argument that there has never been a better ensemble of producers since Illmatic. Every beat that was contributed to Illmatic was an essential piece of the puzzle that would make Illmatic an undeniable classic.","_key":"ea801162f7550"}],"_type":"block"},{"children":[{"_type":"span","marks":[],"text":"Nas firmly established himself as one of the greatest lyricists to ever be birthed out of the New York streets. Illmatic was where Nas established the blueprint for a lot of emcees that came after him. The introspective bars that inspired so many emcees to look deeply within and thoughtfully convey those cavernous emotions on wax. What makes Illmatic so special was we got to hear a hungry Nas, filled with youthful vigor, pour his whole life onto some of the best production in the 90s. There was no stale “16 bar-hook-16 bar-hook-16-bar-hook” format, as Nas demonstrated on the opening song “NY State of Mind”. Nas tossed the rulebook out on Illmatic and emptied his soul out on every beat as if he had an endless book of rhymes. Illmatic was also the introduction of Nas as a master storyteller. The vivid imagery inspired by his rhymes was like a Donald Goines book come to life within your imagination. You could close your eyes as you listen to any selection off Illmatic, and it was as if you were watching the life story of Nas growing up in the projects on the big screen. Illmatic also solidified Nas as a master at his craft in his late teens/early 20s. Nas had a laid-back-in-the-pocket, effortless flow where he would squeeze so many words within a bar that would perfectly catch that slightly off-beat pocket with a multi-syllabic precision. Nas took lyricism to another level, much like Rakim and others did before him and late 90s rappers like Pun, Eminem, and Canibus would do after him. Nas so lucidly captured NYC at that time that much of what he rhymed about at that time remains relevant today, rather he was talking about the violence in the hood, street politics, friends succumbing to the street life that led to an early grave or being imprisoned in the belly of the beast, the desperation sprouting from poverty, or police brutality. Illmatic was Nas at his most famished as an artist and every thought that had built up inside him was unleashed to the world with Illmatic.","_key":"099bdb1fa90b0"}],"_type":"block","style":"normal","_key":"997b8502fdf8","markDefs":[]},{"_type":"image","_key":"64b24b59ab76","asset":{"_ref":"image-4468d7f09fd96a0b980292b4712f99ebe801ee11-3900x1680-webp","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Illmatic has endured as the biggest triumph for Nas in his 30 plus-year career. Nas hit a homerun out the park with his initial step up to the plate. Illmatic was such a masterpiece that fans have shunned practically every Nas release since. Nas has other monumental gems in his portfolio, such as It Was Written, Stillmatic, Lost Tapes, God’s Son, Life Is Good, and most recently his albums with Hit Boy. However, in the eyes of people that control the message, none of those projects measure up to the genius of Illmatic. Illmatic was a gift and a curse for Nas because that is all some fans want to hear from him. I can understand this sentiment more as each year passes since the release of Illmatic on April 19, 1994. Never again will we hear Nas with so much to prove to the world. Illmatic was Nas at his hungriest, and it would be impossible for any artist to reproduce that sort of drive again. Nas knew exactly what he wanted to say and how he wanted to say it. With the help of AZ as the only guest feature, the production from rap’s Avengers-like production team, and cameos from his brother, Jungle, and close neighborhood friend, G-Wiz, Nas used his debut as the foundation for what would become one of the hip hop’s best stories ever told. So to everyone involved in the making of Illmatic, including the work behind the scenes from Faith Newman and MC Serch, I personally want to say thank you. Thank you for delivering an album that never gets old. That remains relevant to this day while sparking nostalgic memories in my coming-of-age years. That keeps me having the screw face and my head nodding like Biggie in the “One More Chance” video. The work of everybody mentioned helped create a body of work so important that it was inducted into he Library of Congress. That helped Nas become one of the first rappers to perform the album with an orchestra at the Kennedy Center in Washington, DC. That had Nas giving lectures at Ivy League schools. That inspired last year’s album of the year, MICHAEL, by Killer Mike. Illmatic is the album that everyone has attempted to duplicate in its 30-year run. Nasir Jones and company created an album that is up there with Run DMC’s self-titled debut, Paid In Full, Criminal Minded, It Takes a Nation of Millions to Hold Us Back, Straight Outta Compton, Get Rich or Die Trying, and other true classics. So tomorrow on that beautiful April 19th sunny Spring morning, treat yourselves to history by streaming or listening to this ageless classic on vinyl, tape, or CD. Happy 30th anniversary to one of hip hop’s most important pieces of art ever created.","_key":"bbe785996d300"}],"_type":"block","style":"normal","_key":"07ea04c74c12"}],"overview":"Music: An Ode to the 30th Anniversary of a Classic","_createdAt":"2024-04-18T20:20:43Z","_rev":"G0lEr1Y4kHQwusXP5Jsl89","_id":"a3fc9a6b-e28f-420a-8a54-a01d3a974cdc","_updatedAt":"2024-07-08T14:42:46Z","slug":{"current":"celebrating-30-years-of-illmatic","_type":"slug"}},{"overview":"Civil War Film Review","_id":"93ab4202-3325-4232-bdab-03c40b1c6dde","slug":{"_type":"slug","current":"civil-war-an-intense-journey-through-madness"},"_createdAt":"2024-04-16T01:20:56Z","_rev":"HdJONGqRccLIid3oE8Alel","_type":"post","title":"Civil War: An Intense Journey Through Madness","_updatedAt":"2024-07-08T14:43:11Z","content":[{"markDefs":[],"children":[{"marks":["strong"],"text":"By Jamil Weeks","_key":"8c64245d75d20","_type":"span"}],"_type":"block","style":"normal","_key":"55d4e0eb175f"},{"_type":"image","_key":"88eb30fd34b1","asset":{"_ref":"image-9fafc851c4301ffd539f805cd352ed1b58818862-848x477-webp","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Republicans versus Democrats. Conservatives versus Liberals. Wealthy versus poor. In modern times, it seems as if the United States is as divided as it has ever been in my lifetime. With the current climate of discontent amongst Americans, a movie like Civil War seems to have arrived at the perfect time. Directed by Alex Garland, best known for directing Ex-Machina (2015) and Annihilation (2018), the movie depicts an internally war-ravaged United States that has descended into utter chaos. The war fractures the United States in separate secessionist movements looking to seize control of the government. As the audience, you see the war unfold through the eyes of four journalists who embark upon a dangerous journey from New York City to Washington, DC in search of the ultimate story. The reporters place their lives in jeopardy as they navigate treacherous roads where peril potentially lies around any corner. As they get closer to their ultimate destination, their risky trek mirrors Captain Williard’s trip down the river to find Colonel Kurtz in Apocalypse Now. Their car ride plunges the reporters down a dark path filled with brutality and depravity. The movie does not pick a side or try to make political statements. Instead, the movie focuses on the dynamic relationships between the reporters as they take the ominous ride to DC.","_key":"3574d6cab3bc0"}],"_type":"block","style":"normal","_key":"32e9401104b5"},{"style":"normal","_key":"0d82d18506fe","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Do not come to the theater expecting a huge war film like Saving Private Ryan or Platoon, with epic war scenes. Alex Garland offers a more intimate look at war with Civil War. The actors who portray the reporters in the film are the heart of the story. The film stars Kirsten Dunst as Lee Smith, who is a war photographer. Lee has traveled the world reporting on the front lines of some of the world’s deadliest conflicts. Lee has seen it all, except a civil war in her own country. You can see the weariness in Lee’s eyes in each scene from all the carnage she has witnessed throughout her career. You also see how she and her colleagues have had to become emotionally detached in order to effectively do their job. Joining her is her right hand, Joel, played by Wagner Moura, and her mentor, Sammy, played by Stephen McKinley Henderson. The last reporter to join the trip is Jesse, played by Cailee Spaeny, who is a young reporter that idolizes the work of Lee. Jesse represents Lee when she was a young photographer just getting started. The relationship between the two starts off as contentious as Lee expresses to Joe her disapproval of Jesse tagging along knowing the threats that lie ahead. However, the two forge a bond as colleagues as Lee reluctantly shows Jesse the ropes of what it takes to be a renowned photographer. Garland does a phenomenal job fleshing out the main characters. You grow to care about them as learn more about who they are and worry about what the future holds for them as you get this ever-growing sense of impending doom as the story progresses. You see the war through their eyes as they descend upon the forefront of the battles capturing the intensity and savagery of war through their photo lenses. The fact that the audience is heavily invested in these characters through great storytelling raises the stakes of each battle the reporters find themselves in.","_key":"8d10d688645d0"}],"_type":"block"},{"_type":"image","_key":"cabb722cb53c","asset":{"_ref":"image-a902d0169099de4f78d068d0a53d239ea1b47f77-750x400-jpg","_type":"reference"}},{"children":[{"_type":"span","marks":[],"text":"The battle scenes in the movie are brutal and bloody. Garland places you right with the journalists as almost a fifth member of the press following the soldiers as they exchange gunfire with opposing forces. You can feel the bullets whizzing past your ears and the power of each bullet that is fired with the masterful sound design. The battle scenes are a balance of deafening war sound effects to scenes devoid of noise to heighten the suspense of the scene. You almost feel like you have PTSD after witnessing some of the combat scenes in the movie. Credit must be given to Garland for making the audience feel like they have been placed amid flying bullets, bombs exploding around you, and gruesome acts of war violence. While most of the movie centers around the journalists with battles sprinkled in here and there, the third act is where all the character development pays off with a huge battle to take over the White House. Garland does a great job of making you feel the horrors that are unfolding before your very eyes. The scattered dead bodies on the battlegrounds. The explosions. The sound of gunfire erupting from military style rifles as if they are being fired from the theater seat right next to you. Garland attempts to make the war scenes as unique as possible with the addition of musical selections that seem to come out of nowhere at certain points during combat scenes as if Guy Ritchie was behind the camera. The music seems to be strategically placed by the filmmakers as almost a way to provide the audience with somewhat of a relief from the horrific events portrayed in the deadly skirmishes. While there are not a lot of war scenes in the first two acts of the film, when the battles do happen, they leave an impression on you.","_key":"ded3127b1b920"}],"_type":"block","style":"normal","_key":"09f62ddc41c7","markDefs":[]},{"_type":"block","style":"normal","_key":"a0d331e8bb39","markDefs":[],"children":[{"marks":[],"text":"The film is not a political film. Do not expect Civil War to force feed you from a particular ideological plate. What is refreshing about the film is that the film is a pure entertainment piece. However, with the current climate of American society, one cannot help but think of this film as an ominous warning of what our country could become if we continue down the path of fiery rhetoric and discord. Garland never fully explains why the Civil War started. You know the country has splintered into regional alliances looking to overthrow the government, but it is not known what each movement stands for politically. While some might look at this as a drawback, I feel it was the smart play to place the emphasis on the aftermath of what a civil war would look like. How our country would look and fundamentally change if we were at war amongst ourselves, rather than use the film as a political tool to fire up one segment of the country while offending the other. As a result, Civil War serves as a cautionary tale by giving Americans a glimpse into what our future beholds if we do not find some middle ground as a country to settle our differences.","_key":"1f457e354cc90","_type":"span"}]},{"_type":"image","_key":"8862e43d505b","asset":{"_ref":"image-4b24d51e355bc7c8e4c4caef031bc34b9a6ea886-640x360-jpg","_type":"reference"}},{"_type":"block","style":"normal","_key":"4ff64bb04679","markDefs":[],"children":[{"text":"Civil War is a must-see film, especially in IMAX. A dark and intense war drama that shocks you, entertains you, and makes you think. Kirsten Dunst delivers perhaps the greatest performance of her career as the lead character. The cast individually adds emotional, and sometimes disturbing, acting portrayals in every scene in the movie. Civil War is a savage and impassioned take on a bleak near distant future of America through a car ride from New York City to DC. I am not prepared to call this movie the film of the year. Currently, Dune 2 holds that title. What I am prepared to say is the film has riveting war scenes, captivating cinematography, considerable acting across the boards, an engaging story, beautifully crafted directing, and ear-piercing sound design. All these factors easily make Civil War one of the best films to be released so far in 2024. My only fear is that people from either side of the political aisle will attempt to hijack the premise of the movie to further whatever agenda they are trying to shovel to the American public. I recommend this movie for people looking to see an entertaining and thoughtful piece of art. Civil War is a movie every American should see, and hopefully that viewing is in a theater!","_key":"7056dcea90590","_type":"span","marks":[]}]}]},{"_createdAt":"2024-04-11T02:34:49Z","_type":"post","_id":"395f1a72-cd6d-4deb-8484-10b9f669418b","overview":"Might Delete Later Music Review","_rev":"HdJONGqRccLIid3oE8Alun","title":"Might Delete Later: Controversy Overshadowing the Music?","_updatedAt":"2024-07-08T14:43:36Z","content":[{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"2fcf6fb557ce0"}],"_type":"block","style":"normal","_key":"3e180f287b57"},{"_type":"image","_key":"33f636d5688e","asset":{"_ref":"image-ef22a99cc5dc395de6f205fe3d4344d2cb54ac5c-1280x720-jpg","_type":"reference"}},{"_key":"f34ec05fd55c","markDefs":[],"children":[{"_type":"span","marks":[],"text":"The last couple of weeks have been a whirlwind for Jermaine Cole. He went from starting a rollout to arguably the most anticipated rap albums of the year to being swept up in a battle with Kendrick Lamar in a matter of days. Cole would later find himself to be the subject of ire by hip-hop purists for the apology that shocked the world at his own Dreamville Festival. Cole has become a polarizing figure, with half of hip hop fans excoriating his name on social media platforms with venomous slander as if a ring of rabid foam was forming in the corner of their mouths while their twitter fingers ran rampant. The other half, referred to as “stans”, praise Cole for staying true to himself and not allowing his spirit to be disturbed by a forced beef with a fellow comrade for others' entertainment. While everybody has seemingly weighed in on the matter, lost in the shuffle has been the music. Cole’s surpriste mixtape, Might Delete Later, dropped without warning last Friday and has shaken things up more than the recent New York earthquake. The 12-song mixtape was meant as an appetizer for The Fall Off, which is slated to drop some time this year hopefully. Instead, public dissension over Cole waving the white flag to Kendrick has taken center stage. Whether than weigh in on a tiring subject at this point, let us take time to bring it back to the music. Is Might Delete Later any good?","_key":"e383fdc9425b0"}],"_type":"block","style":"normal"},{"_key":"8d7c9da6c951","markDefs":[],"children":[{"_key":"07b505beb8650","_type":"span","marks":[],"text":"Might Delete Later features Cole rapping with a ferocious hunger that we have not seen since his pre-Roc Nation days when he proclaimed himself to be Young Simba. You can feel the energy Cole exudes coursing through your veins through each mixtape selection. Cole has spent over a decade building up momentum with each album, and has worked his way up the totem pole to the point where he was considered one of the greatest out of the current crop of rappers, at least in the mainstream. The music presented on Might Delete Later supports those claims, despite recent events sabotaging his impetus. Cole storms out the gate with fiery bars on the opening track “Pricey”, with lines like “breaking news, I’ve officially entered my prime/which is really interesting, this is the point where a rapper would typically start to decline “. Cole goes on to boast about his place in today’s rap game on “Crocodile Tearz” stating “it’s me, not two, not three/the uno, G.O.A.T., I need my fee”. On the Cam’ron-assisted “Ready ‘24”, Cole blisters over a remake of The Diplomats’ 2000s anthem “I’m Ready”, where Cole boldly proclaims himself the greatest in the game with the vigor of a young man. Perhaps the crown jewel of the mixtape is “Pi” featuring Daylyt and ironically TDE’s Ab Soul, where Cole absolutely blacks out in the booth spitting a certified verse of the year contender. Cole raps with a chip on his shoulder as someone who feels slighted by being in the shadows of Kendrick and Drake for most of his career. With this mixtape, Cole raps as if he is appalled that the world is just now realizing his greatness."}],"_type":"block","style":"normal"},{"_type":"image","_key":"f02f9f2147c9","asset":{"_ref":"image-11cfa81260bbcc25d7b393ed69c18423a09e52e6-1131x594-webp","_type":"reference"}},{"children":[{"_type":"span","marks":[],"text":"Cole’s argument for the crown crescendos with the closing reply to Kendrick’s shot at Cole on Metro and Future’s “Like That”. Cole reluctantly returns fire on “7 Minute Drill”. While the song was initially met with mixed reviews from rap fans, the song matches the energy of Kendrick’s verse and served as a warning to Kendrick of what was to come, at least before the apology. Cole delivers ominous rhymes while lowkey extending an olive branch to his opponent with lines like “Lord, don’t make me have to smoke this n**** ‘cause I f*** with him/but push come to shove, on this mic, I will humble him”. Cole does his best Jay-Z impression, quoting lines from “The Takeover” as he breaks down Kung Fu Kenny’s discography. Admittedly not the most original idea for a diss track. But “7 Minute Drill” was never meant to be the knock-out punch most rap fans were hoping for, like a “No Vaseline”. Instead, it was Cole sparring akin to Mayweather in the ring with defensive pugilistic disses. If the apology never happened, it appeared as if Cole was saving the real disrespect for an official name-dropping diss that would have probably ended up on The Fall Off. You could tell Cole’s heart was not really into the battle, comparing himself to Nino Brown on that rooftop about to pull the trigger on G-Money. Rather or not Cole reneges on his apology, the would-be battle between him and Kendrick was shaping up to be something special. As ambitious as the song was, it seemed like not even a Conductor Williams beat switch with the second verse was enough for Cole to definitively win that first round.","_key":"52867fb2dd42"}],"_type":"block","style":"normal","_key":"7d257218ee36","markDefs":[]},{"markDefs":[],"children":[{"_key":"12c024f80f5b0","_type":"span","marks":[],"text":"Outside of the braggadocious banter, Cole still manages to balance out the mixtape with records that caters to his day one fans while sprinkling in conscious rhymes throughout. On the laidback London drill record “H.Y.B”, Cole is joined by Bas and Central Cee where he arrogantly talks to his haters about if he was not faithful to his wife, he could easily steal their ladies from underneath them with ease. On the love ode “Fever, Cole opens his heart on this personal and honest record about craving a deeper love. Cole excels on records like “Fever”, reminding fans on how he built his career by rapping on the type of emotions that regular people can feel. Cole also excels at giving the listener pieces of himself, inviting us as the listener into his world. Songs like “Stickz N Stonez” highlight this as Cole raps about rising above the negativity from his environment growing up in Fayetteville, NC as he proclaims he is “reaching’ for a higher frequency”. On one of the project’s released singles “3001”, Cole questions the validity of materialism that consumes us in society, suggesting he has never felt freer since stripping himself of worldly possessions."}],"_type":"block","style":"normal","_key":"6c19b847aeca"},{"style":"normal","_key":"61cf6c5c020d","markDefs":[],"children":[{"_key":"5ca8426ea85b0","_type":"span","marks":[],"text":"Might Delete Later is one of J. Cole’s best releases and shows that Cole’s talent is aging like fine wine after over 20 years since releasing his first song. Cole is as lyrically sharp as he has ever been and raps with an intensity of someone that has something to prove. The apology to Kendrick has since soured the momentum he was riding on for the past couple of years. Listening to this mixtape in the wake of his surrender to Kendrick this past weekend, one cannot help but look at some of his cocky claims to the throne differently. The swagger that saturated his bombastic lyrics ring hollow in hindsight to Cole’s controversial apology. It is a shame because Cole is rhyming as good as he ever has in his career. Might Delete Later should have been a benchmark in Cole’s career as a pre-celebratory release to tide the fans over before dropping The Fall Off. I still believe in J. Cole. Call me a stan. Call me a homer. But, I feel Cole on his best day can go toe to toe with anyone in the game, including K.Dot. Right now, it is open season on Cole with a faction of rap fans feeling betrayed by Cole like he was an illegitimate father that broke his promise after failing to show up to their soccer game when he said he would. I think this release will age well, and I expect good things from The Fall Off. The stakes for The Fall Off have risen. The album almost must be a definitive classic for Cole to get back in the good graces of his detractors. However, as a native of Fayetteville, I know what kind of grit people that come from my hometown are made of and remain optimistic about The Fall Off. The best is still yet to come from Cole and only time will tell how his apology ages."}],"_type":"block"}],"slug":{"current":"might-delete-later-controversy-overshadowing-the-music","_type":"slug"}},{"overview":"Marciology Music Review","_createdAt":"2024-04-04T02:03:54Z","_type":"post","slug":{"current":"marciology-continues-roc-marci-s-underground-dominance","_type":"slug"},"_rev":"j9BPWHem9m3oUugvhF2DEV","_id":"997b05ff-b4fd-435b-9077-890123b05430","title":"Marciology Continues Roc Marci’s Underground Dominance","_updatedAt":"2024-07-08T14:43:52Z","content":[{"markDefs":[],"children":[{"marks":["strong"],"text":"By Jamil Weeks","_key":"1c075edb3e070","_type":"span"}],"_type":"block","style":"normal","_key":"8f89fc7231e8"},{"_key":"09623b3b0047","asset":{"_type":"reference","_ref":"image-3dae2a2e5515b8a49d8c2d6f446d722ae3f22493-1920x1920-webp"},"_type":"image"},{"_type":"block","style":"normal","_key":"98350808757c","markDefs":[],"children":[{"marks":[],"text":"When it comes to albums by Roc Marci, it is essential to allow enough time for the music to sink in. Roc Marci albums sound like nothing else out there. I personally cannot judge a Marci album off just one listen. Time and time again, when I hear these abstract samples and beats as I listen to his albums, I think to myself “that’s strange”. Then like clockwork, the brilliance of Roc Marci hits me like a sudden epiphany. Roc is a double threat as an emcee and producer. With a keen ear, he creates music with a sound that seems partly inspired by 70s blaxploitation movies and partly inspired by the reality of the grimy streets of New York. Part of the reason I love listening to his albums is because I am guaranteed to have a unique listening experience. Roc remains uncompromising in the sound of his album. Never does he try to cater to a mainstream audience. Instead, Roc knows who his audience is and consistently delivers music they want to hear. The obscure samples. The dusty beats. The laid-back-in-the-pocket confidence and cadence. Marciology is no exception and proves what made Roc the godfather of the modern-day underground rap scene. Roc makes music you can vibe to again and again. He is a master of coming up with sounds that are simple but with enough layers to provide the appropriate depth for his drug dealer/pimp bravado-laced tales on wax. Marciology is a solid contribution to an already stacked discography from the Pimpire poet and is proof of why Roc Marci is one of the best lyricist/producers possibly ever in hip hop.","_key":"1d8642b03c1d0","_type":"span"}]},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"What is impressive with this album is how Roc uses modern day flows over underground beats. The opening title track on the album is a prime example of this as Roc glides over an eerie, unsettling dusty instrumental with, at times, a slowed down Migos-like flow. On “Bebe’s Kids”, Marci effortlessly raps with a double-time southern flow over a 70s inspired loop about how he is the father to the style of a lot of today’s rappers. Roc continues to spit with this type of flow on the closing track “Floxxx” over a fast, uptempo track that sounds like the type of beat you would hear musicians jam to when performing live. Songs like this represent the growth of Roc as a lyricist and an artist. Roc was not always a master of flows and on occasion was not able to successfully pull off rapping over certain types of beats with his flow pattern. On Marciology, Roc was hitting those pockets with precision like he was a pool hall hustler in Martin Scorsese’s The Color of Money. Roc schools his peers how you can have contemporary inspirations while not sacrificing the integrity of your core sound. You never get the feeling Roc is trying to sound like anyone else in the game. Instead, he is showing his listeners he can flip a mainstream flow as well as the hottest rappers in the game can while still staying true to who he is an artist.","_key":"f1825a4ae62c0"}],"_type":"block","style":"normal","_key":"aad8436e2e79"},{"asset":{"_ref":"image-920feaa565b42b5c9294f89e2511939b982fba2b-720x480-webp","_type":"reference"},"_type":"image","_key":"3e2578d2965f"},{"children":[{"marks":[],"text":"What makes Roc Marci albums so great is that they are truly his vision. Like his previous albums, Roc handles the bulk of the production himself. The songs on his albums are never grandiose or over-produced. Instead, they are the perfect complement to his vocals. This is especially true with the lead single, “Gold Crossbow”. Roc utilizes a simple piano loop with minimalistic drums as he masterfully raps “ten toes on burning coals/the burner’s close; *****s can’t touch me, I’m a germaphobe”. As a man that grew up as a big Wu-Tang fan, one cannot help but love the Rza-inspired loop over militaristic drums as Roc raps like a war veteran reminiscing about his street days when he was putting in work. Perhaps the best song on the album is the soulful “Went Diamond”, which sounds like the type of song The Delphonics would croon over as your parents conceived you back in the day. Here, Roc lets loose with a barrage of clever wordplay, metaphors, and divine flow like he was consumed with the Holy Ghost when rapping over this beat in the booth. Roc does find other producers to help hold him down with frequent collaborators, Animoss and The Alchemist, contributing two songs a piece to Marciology. Both Animoss and The Alchemist provide production that sustains the cohesive sound of the album with the throwback psychedelic, funk-laced instrumentals.","_key":"c7dce565902f0","_type":"span"}],"_type":"block","style":"normal","_key":"fe7e52897561","markDefs":[]},{"style":"normal","_key":"e09948b3a625","markDefs":[],"children":[{"_key":"f7ed96bd1c9e0","_type":"span","marks":[],"text":"Roc keeps it in the family by working with other past collaborators with the features on the album. You cannot have a Roc Marci album without at least one feature from Knowledge the Pirate. On the conceptual “Larry Bird”, Roc and Knowledge trade bars alongside GREA8GAWD about moving kilos, referred to as “birds”. CRIMEAPPLE joins Roc on the bar-heavy, guitar-laden “Killin’ Spree” serving up a masterclass in lyricism. On the haunting, drum-less Alchemist-produced track, “Bad JuJu”, Roc recruits Larry June as he raps about his grind to the top on a euphoric song that sounds like a leftover from The Great Escape sessions. Larry June was not the only Cali rapper Roc reached out to as Jay Worthy lends his talents on the soulful “On the Run”, where Jay speaks on betrayal and disloyalty in the streets. On the woeful soul loop on the song, “Higher Self”, Roc is joined by T.F. and Flee Lord as they drop jewels on how the lessons learned in life are more valuable than material things. Each one of these features shows the chemistry Roc has with these artists as they fill in the final pieces to the intricate puzzle Roc puts together with each album release."}],"_type":"block"},{"children":[{"_type":"span","marks":[],"text":"Roc Marci has built his career with a formula of taking creative risks in producing unique sonics to his album. Instead of deviating from that formula, he builds upon it with each release. Roc makes music for hip hop fans who love bars instead of Billboard. Roc is a master at blending superficial, extravagant imagery with down-to-earth understanding and street knowledge. Marciology is a masterpiece and one of Roc’s best albums since 2018’s Behold a Pale Horse, which I consider to be arguably Roc’s greatest album. The album may not be for everybody, but Marciology is like finding an oasis in a blazing hot desert to everyone lucky enough to have discovered Roc Marci’s music. The subject matter may be repetitive to those of us used to Roc Marci albums. However, with Roc being the gifted artist that he is, he always finds a way to make the sound of his album fresh. At the risk of bringing up a cliché, “if it ain’t broke don’t fix it”. Roc is the type of artist that always delivers high quality music that caters to his day one fans. Marciology is an early album of the year contender.The album title is perfect as Roc Marciano, himself, is the subject of study for aspiring lyricists and wordsmiths.","_key":"a9fc5aadff8f0"}],"_type":"block","style":"normal","_key":"1f9524762562","markDefs":[]}]},{"_id":"487fda30-a302-490d-936e-caa0e137652d","content":[{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"By Jamil Weeks","_key":"ca29a13093c10"}],"_type":"block","style":"normal","_key":"a7e5fa9756bc"},{"asset":{"_ref":"image-9a5875f63b6f7d56f048394a78e994f02e18de94-2000x1000-webp","_type":"reference"},"_type":"image","_key":"8fafe0f5ffaf"},{"style":"normal","_key":"076791e7c39b","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Hard to believe the 30-year anniversary of Illmatic is upon us in 2024. Equally bewildering is how Nas has remained a relevant force in hip hop throughout the dedades. Nas has maintained his visibility through a combination of lucrative business ventures, his work on documentaries and television series, and new music that introduced him to a younger audience. Nas teamed up with Hit-Boy in 2020 to embark upon an improbable and unprecedented run. Together the pair made six albums, consisting of two separate trilogies, in a three-year span. Nas proved he was still a viable powerhouse this decade, creating further distance between him and his 90s peers. With Illmatic turning 30 in a few days, one cannot help but think of that infamous Scratch Magazine cover from 2006 with DJ Premier and Nas, with Nas sporting the tilted black army hat backwards with the matching black army jacket. Nas and Premo have been long-time collaborators but there has noticeably been a drought of the duo working with each other. The last time DJ Premier contributed to a Nas album was on the Stillmatic album in 2001. Both have worked together on rare occasions since then, most recently on “Beat Breaks’” off a DJ Premier EP. Premo was a key ingredient in creating that signature Illmatic sound, producing the iconic records “Memory Lane”, “Represent”, and the New York anthem “NY State of Mind”. After three years of Nas experimenting with a more polished, commercial sound with the Hit-Boy sessions coupled with the celebration of Illmatic’s 30th birthday, the duo seems destined to get back in the lab and create some new magic.","_key":"84455901ed740"}],"_type":"block"},{"_key":"4993111e8ccc","markDefs":[],"children":[{"_type":"span","marks":[],"text":"Rap fans have been eagerly anticipating the possibility of one of the best lyricist/producer combinations getting back together for an entire album since 2006. The chemistry is undeniable. Rather or not the overall Nas album was classic or lackluster, if Premo contributed to the album you at least knew Premo was going to lace Nas with a banger. The records they did together after Illmatic were just as stellar, where some of the records are arguably top 10 all time Nas records. Songs like “I Gave You Power”, “Nas Is Like”, “Come Get Me”, and “2nd Childhood” were all standout tracks on the Nas albums in which they were featured. Nas and Premo together is a perfect marriage of bars, concepts, and beats. You are guaranteed to get elite lyricism and song-making performances from Nas, with DJ Premier providing the perfect sonics and complimentary production. Each artist has created classics without each other and with each other. Perhaps this is a reason that rap fans have not given up on the long overdue collabo between the two. The duo has literally never let us down. The intrigue of what new material the two could create together today is too big of a question mark to leave unanswered.","_key":"9e344c903eed0"}],"_type":"block","style":"normal"},{"children":[{"text":"“Superhero material rap star status/Premier album still might happen…” – Nas on “30” from King’s Disease III (2022)","_key":"df176a4a2df90","_type":"span","marks":["strong"]}],"_type":"block","style":"normal","_key":"f6d7468bc09d","markDefs":[]},{"_type":"image","_key":"9eb4724723ee","asset":{"_ref":"image-d795b332e300d34d89a623767c4abe2cb191ad5f-689x415-png","_type":"reference"}},{"markDefs":[],"children":[{"_type":"span","marks":[],"text":"Nas is no stranger to reaching for new heights with his music. Nas has worked with the biggest producers in hip-hop, such as Trackmasters, Dr. Dre, Kanye West, Neptunes, and Timbaland. But every now and then, Nas has full circle moments by revisiting his signature sound. With Nas chasing a different sound with Hit-Boy the past couple of years, the time seems right for Nas to return to the dungeons of rap. Neither Nas nor DJ Premier have anything left to prove. However, that does not mean they cannot challenge themselves artistically to give the fans what they want while still creating a new sound. I would not expect a 2024 Nas/DJ Premier record to sound like a record they did in 1994. Most fans would be interested in hearing how DJ Premier could update his trademark boom bap sound to today’s musical climate while still being able to make a great Nas record. The complimentary vibe between Nas and Premier is the biggest question mark for a potential album. Nas and Premo have a track record of being able to bring the best out of each other. With slumping sales in general, growing dysfunctional behavior from social media antics by rappers, and a lack of quality musical output, Nas and DJ Premier could be the ones to swoop in and save the day 30 years after they came together to create arguably the greatest rap album in the 90s.","_key":"ddeffc9c724e0"}],"_type":"block","style":"normal","_key":"cbd4904b1b23"},{"_type":"block","style":"normal","_key":"90acdbea4b68","markDefs":[],"children":[{"_key":"fe196acca1ad0","_type":"span","marks":[],"text":"Hip-hop is no longer a young man’s game. Yes, hip hop is still for the most part dominated by youthful energy. However, the genre just celebrated it’s 50th birthday and the fanbase has expanded to an older demographic. Those of us who were teenagers when Illmatic dropped are now in our forties. There are still a lot of us who love and listen to hip-hop. We grew up on Nas albums. We grew up on Gang Starr, Group Home, and Jeru Da Damaja albums. Nothing could be better than these two coming together after a long hiatus, especially for those of us that were raised off their music. A Nas/DJ Premier EP or LP could be the equivalent of visiting a childhood friend for the first time in years and the two of you picking up right where you left off like you never skipped a beat. We have been deprived of the two working together for far too long. Nas and Premier need to come together for one last time for the culture. Can you imagine the excitement for us “old heads” if Nas or Premo announced tomorrow they were in the studio together? Social media would be on fire for a segment of hip hop culture. Hip hop podcasts would be set ablaze. The expectation and predictions for this album would generate endless content. The album could potentially give the rap game a jolt of energy for the older cats who feel uninspired by today’s rap music while putting younger generations of rap listeners on to their brand of rap. The album could be an important benchmark in both of their careers."}]},{"markDefs":[],"children":[{"_type":"span","marks":["strong"],"text":"“Rocking with Preem is nothing short of amazing…” – Nas on “Beat Breaks” from DJ Premier’s Hip Hop 50: Vol. 1 EP (2022)","_key":"d83d805113670"}],"_type":"block","style":"normal","_key":"62f279effd26"},{"_type":"image","_key":"49b51a6d7859","asset":{"_ref":"image-719fdc10cf29fb8e0443b870268e62ddab5d8f39-750x422-jpg","_type":"reference"}},{"_key":"1e80c77ef210","markDefs":[],"children":[{"_key":"ca24ecc5a6b00","_type":"span","marks":[],"text":"Folks, the album is coming. DJ Premier did the scratches on the ASAP Rocky featured “Wave Gods” off Nas's Magic album in late 2021. In the summer of 2022, Nas and Premo collaborated for the first time in years on a Hip-Hop 50 EP that DJ Premier made for Nas’s Mass Appeal records. Later that Fall, Nas hinted the album was still happening on King's Disease III…maybe. Late summer of 2023, Nas had a star-studded 50th birthday celebration where DJ Premier was in attendance. I could be reaching but I do not think all these recent occurrences are a coincidence. Instead, I believe those events are setting the stage for both artists finally giving the people what they want. I believe after the improbable run Nas had with Hit-Boy and 2024 marking the 30th anniversary for Hip Hop’s “bible”, the timing is perfect for the album to come out. Nas is still rapping at an elite level. Premier has continued to make music, most notably collaborating with Busta, Griselda, and Snoop in recent years. I am hoping we get a Nas and DJ Premier album with nine to twelve songs on them. Maybe feature AZ on a record as a symbolic ode to Illmatic. I would not be mad at a Griselda feature on the album either. I have to believe DJ Premier has spent the past decade or so stashing beats aside for Nas, just in case the album were to happen. DJ Premier knows how to make a Nas record that turns into a timeless piece of art. As we celebrate 30 years of Nas’s magnus opus, I am sincerely hoping we close out 2024 with a Nas and DJ Premier album. So, to both artists, the time is NOW. Do it for the culture!"}],"_type":"block","style":"normal"}],"overview":"Music: My Plea For the Long Overdue Collabo Between Nas and Premo","_createdAt":"2024-04-02T18:25:10Z","_rev":"j9BPWHem9m3oUugvhF2F6V","_type":"post","title":"Why the Nas and DJ Premier Album Needs to Happen","_updatedAt":"2024-07-08T14:44:20Z","slug":{"current":"why-the-nas-and-dj-premier-album-needs-to-happen","_type":"slug"}}],"syncTags":["s1:7OeGpA"],"ms":32}","status":200,"tags":["/page"]},"revalidate":60}